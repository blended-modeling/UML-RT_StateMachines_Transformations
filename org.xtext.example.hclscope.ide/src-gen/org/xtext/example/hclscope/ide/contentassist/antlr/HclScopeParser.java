/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.hclscope.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.hclscope.ide.contentassist.antlr.internal.InternalHclScopeParser;
import org.xtext.example.hclscope.services.HclScopeGrammarAccess;

public class HclScopeParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(HclScopeGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, HclScopeGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getStateAccess().getAlternatives_1_10(), "rule__State__Alternatives_1_10");
			builder.put(grammarAccess.getTransitionAccess().getNameAlternatives_1_0(), "rule__Transition__NameAlternatives_1_0");
			builder.put(grammarAccess.getHistoryTransitionAccess().getNameAlternatives_1_0_0(), "rule__HistoryTransition__NameAlternatives_1_0_0");
			builder.put(grammarAccess.getTransitionBodyAccess().getAlternatives_1_1(), "rule__TransitionBody__Alternatives_1_1");
			builder.put(grammarAccess.getTransitionBodyAccess().getAlternatives_4_1(), "rule__TransitionBody__Alternatives_4_1");
			builder.put(grammarAccess.getVertexAccess().getAlternatives(), "rule__Vertex__Alternatives");
			builder.put(grammarAccess.getTransitionsAccess().getAlternatives(), "rule__Transitions__Alternatives");
			builder.put(grammarAccess.getValidIDAccess().getAlternatives(), "rule__ValidID__Alternatives");
			builder.put(grammarAccess.getKEYWORDAccess().getAlternatives(), "rule__KEYWORD__Alternatives");
			builder.put(grammarAccess.getStateMachineAccess().getGroup(), "rule__StateMachine__Group__0");
			builder.put(grammarAccess.getStateMachineAccess().getGroup_3(), "rule__StateMachine__Group_3__0");
			builder.put(grammarAccess.getStateMachineAccess().getGroup_3_2(), "rule__StateMachine__Group_3_2__0");
			builder.put(grammarAccess.getStateMachineAccess().getGroup_5(), "rule__StateMachine__Group_5__0");
			builder.put(grammarAccess.getStateMachineAccess().getGroup_5_2(), "rule__StateMachine__Group_5_2__0");
			builder.put(grammarAccess.getStateMachineAccess().getGroup_6(), "rule__StateMachine__Group_6__0");
			builder.put(grammarAccess.getStateMachineAccess().getGroup_6_2(), "rule__StateMachine__Group_6_2__0");
			builder.put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1(), "rule__State__Group_1__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_2(), "rule__State__Group_1_2__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_3(), "rule__State__Group_1_3__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_4(), "rule__State__Group_1_4__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_4_2(), "rule__State__Group_1_4_2__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_5(), "rule__State__Group_1_5__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_5_2(), "rule__State__Group_1_5_2__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_6(), "rule__State__Group_1_6__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_6_2(), "rule__State__Group_1_6_2__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_8(), "rule__State__Group_1_8__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_8_2(), "rule__State__Group_1_8_2__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_9(), "rule__State__Group_1_9__0");
			builder.put(grammarAccess.getStateAccess().getGroup_1_9_2(), "rule__State__Group_1_9_2__0");
			builder.put(grammarAccess.getInitialTransitionAccess().getGroup(), "rule__InitialTransition__Group__0");
			builder.put(grammarAccess.getInitialTransitionAccess().getGroup_0(), "rule__InitialTransition__Group_0__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
			builder.put(grammarAccess.getInternalTransitionAccess().getGroup(), "rule__InternalTransition__Group__0");
			builder.put(grammarAccess.getHistoryTransitionAccess().getGroup(), "rule__HistoryTransition__Group__0");
			builder.put(grammarAccess.getHistoryTransitionAccess().getGroup_1(), "rule__HistoryTransition__Group_1__0");
			builder.put(grammarAccess.getTransitionBodyAccess().getGroup(), "rule__TransitionBody__Group__0");
			builder.put(grammarAccess.getTransitionBodyAccess().getGroup_1(), "rule__TransitionBody__Group_1__0");
			builder.put(grammarAccess.getTransitionBodyAccess().getGroup_4(), "rule__TransitionBody__Group_4__0");
			builder.put(grammarAccess.getTransitionGuardAccess().getGroup(), "rule__TransitionGuard__Group__0");
			builder.put(grammarAccess.getTransitionOperationAccess().getGroup(), "rule__TransitionOperation__Group__0");
			builder.put(grammarAccess.getMethodParameterTriggerAccess().getGroup(), "rule__MethodParameterTrigger__Group__0");
			builder.put(grammarAccess.getPortEventTriggerAccess().getGroup(), "rule__PortEventTrigger__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getStateMachineAccess().getNameAssignment_1(), "rule__StateMachine__NameAssignment_1");
			builder.put(grammarAccess.getStateMachineAccess().getStatesAssignment_3_1(), "rule__StateMachine__StatesAssignment_3_1");
			builder.put(grammarAccess.getStateMachineAccess().getStatesAssignment_3_2_1(), "rule__StateMachine__StatesAssignment_3_2_1");
			builder.put(grammarAccess.getStateMachineAccess().getInitialtransitionAssignment_4(), "rule__StateMachine__InitialtransitionAssignment_4");
			builder.put(grammarAccess.getStateMachineAccess().getJunctionAssignment_5_1(), "rule__StateMachine__JunctionAssignment_5_1");
			builder.put(grammarAccess.getStateMachineAccess().getJunctionAssignment_5_2_1(), "rule__StateMachine__JunctionAssignment_5_2_1");
			builder.put(grammarAccess.getStateMachineAccess().getChoiceAssignment_6_1(), "rule__StateMachine__ChoiceAssignment_6_1");
			builder.put(grammarAccess.getStateMachineAccess().getChoiceAssignment_6_2_1(), "rule__StateMachine__ChoiceAssignment_6_2_1");
			builder.put(grammarAccess.getStateMachineAccess().getTransitionAssignment_7(), "rule__StateMachine__TransitionAssignment_7");
			builder.put(grammarAccess.getStateAccess().getNameAssignment_0(), "rule__State__NameAssignment_0");
			builder.put(grammarAccess.getStateAccess().getInternaltransitionAssignment_1_1(), "rule__State__InternaltransitionAssignment_1_1");
			builder.put(grammarAccess.getStateAccess().getEntryactionAssignment_1_2_2(), "rule__State__EntryactionAssignment_1_2_2");
			builder.put(grammarAccess.getStateAccess().getExitactionAssignment_1_3_2(), "rule__State__ExitactionAssignment_1_3_2");
			builder.put(grammarAccess.getStateAccess().getEntrypointAssignment_1_4_1(), "rule__State__EntrypointAssignment_1_4_1");
			builder.put(grammarAccess.getStateAccess().getEntrypointAssignment_1_4_2_1(), "rule__State__EntrypointAssignment_1_4_2_1");
			builder.put(grammarAccess.getStateAccess().getExitpointAssignment_1_5_1(), "rule__State__ExitpointAssignment_1_5_1");
			builder.put(grammarAccess.getStateAccess().getExitpointAssignment_1_5_2_1(), "rule__State__ExitpointAssignment_1_5_2_1");
			builder.put(grammarAccess.getStateAccess().getStatesAssignment_1_6_1(), "rule__State__StatesAssignment_1_6_1");
			builder.put(grammarAccess.getStateAccess().getStatesAssignment_1_6_2_1(), "rule__State__StatesAssignment_1_6_2_1");
			builder.put(grammarAccess.getStateAccess().getInitialtransitionAssignment_1_7(), "rule__State__InitialtransitionAssignment_1_7");
			builder.put(grammarAccess.getStateAccess().getJunctionAssignment_1_8_1(), "rule__State__JunctionAssignment_1_8_1");
			builder.put(grammarAccess.getStateAccess().getJunctionAssignment_1_8_2_1(), "rule__State__JunctionAssignment_1_8_2_1");
			builder.put(grammarAccess.getStateAccess().getChoiceAssignment_1_9_1(), "rule__State__ChoiceAssignment_1_9_1");
			builder.put(grammarAccess.getStateAccess().getChoiceAssignment_1_9_2_1(), "rule__State__ChoiceAssignment_1_9_2_1");
			builder.put(grammarAccess.getStateAccess().getTransitionAssignment_1_10_0(), "rule__State__TransitionAssignment_1_10_0");
			builder.put(grammarAccess.getStateAccess().getHistorytransitionAssignment_1_10_1(), "rule__State__HistorytransitionAssignment_1_10_1");
			builder.put(grammarAccess.getEntryActionAccess().getNameAssignment(), "rule__EntryAction__NameAssignment");
			builder.put(grammarAccess.getExitActionAccess().getNameAssignment(), "rule__ExitAction__NameAssignment");
			builder.put(grammarAccess.getInitialStateAccess().getNameAssignment(), "rule__InitialState__NameAssignment");
			builder.put(grammarAccess.getJunctionAccess().getNameAssignment(), "rule__Junction__NameAssignment");
			builder.put(grammarAccess.getChoiceAccess().getNameAssignment(), "rule__Choice__NameAssignment");
			builder.put(grammarAccess.getEntryPointAccess().getNameAssignment(), "rule__EntryPoint__NameAssignment");
			builder.put(grammarAccess.getExitPointAccess().getNameAssignment(), "rule__ExitPoint__NameAssignment");
			builder.put(grammarAccess.getDeepHistoryAccess().getNameAssignment(), "rule__DeepHistory__NameAssignment");
			builder.put(grammarAccess.getInitialTransitionAccess().getNameAssignment_0_0(), "rule__InitialTransition__NameAssignment_0_0");
			builder.put(grammarAccess.getInitialTransitionAccess().getInitialstateAssignment_1(), "rule__InitialTransition__InitialstateAssignment_1");
			builder.put(grammarAccess.getInitialTransitionAccess().getInitialtoAssignment_3(), "rule__InitialTransition__InitialtoAssignment_3");
			builder.put(grammarAccess.getInitialTransitionAccess().getTransitionbodyAssignment_4(), "rule__InitialTransition__TransitionbodyAssignment_4");
			builder.put(grammarAccess.getTransitionAccess().getNameAssignment_1(), "rule__Transition__NameAssignment_1");
			builder.put(grammarAccess.getTransitionAccess().getFromAssignment_3(), "rule__Transition__FromAssignment_3");
			builder.put(grammarAccess.getTransitionAccess().getToAssignment_5(), "rule__Transition__ToAssignment_5");
			builder.put(grammarAccess.getTransitionAccess().getTransitionbodyAssignment_6(), "rule__Transition__TransitionbodyAssignment_6");
			builder.put(grammarAccess.getInternalTransitionAccess().getNameAssignment_0(), "rule__InternalTransition__NameAssignment_0");
			builder.put(grammarAccess.getInternalTransitionAccess().getTransitionbodyAssignment_1(), "rule__InternalTransition__TransitionbodyAssignment_1");
			builder.put(grammarAccess.getHistoryTransitionAccess().getNameAssignment_1_0(), "rule__HistoryTransition__NameAssignment_1_0");
			builder.put(grammarAccess.getHistoryTransitionAccess().getFromAssignment_2(), "rule__HistoryTransition__FromAssignment_2");
			builder.put(grammarAccess.getHistoryTransitionAccess().getToAssignment_4(), "rule__HistoryTransition__ToAssignment_4");
			builder.put(grammarAccess.getHistoryTransitionAccess().getTransitionbodyAssignment_5(), "rule__HistoryTransition__TransitionbodyAssignment_5");
			builder.put(grammarAccess.getTransitionBodyAccess().getMethodparameterAssignment_1_1_0(), "rule__TransitionBody__MethodparameterAssignment_1_1_0");
			builder.put(grammarAccess.getTransitionBodyAccess().getPorteventAssignment_1_1_1(), "rule__TransitionBody__PorteventAssignment_1_1_1");
			builder.put(grammarAccess.getTransitionBodyAccess().getTriggerAssignment_1_1_2(), "rule__TransitionBody__TriggerAssignment_1_1_2");
			builder.put(grammarAccess.getTransitionBodyAccess().getTransitionguardAssignment_2(), "rule__TransitionBody__TransitionguardAssignment_2");
			builder.put(grammarAccess.getTransitionBodyAccess().getTransitionoperationAssignment_3(), "rule__TransitionBody__TransitionoperationAssignment_3");
			builder.put(grammarAccess.getTransitionBodyAccess().getMethodparameterAssignment_4_1_0(), "rule__TransitionBody__MethodparameterAssignment_4_1_0");
			builder.put(grammarAccess.getTransitionBodyAccess().getPorteventAssignment_4_1_1(), "rule__TransitionBody__PorteventAssignment_4_1_1");
			builder.put(grammarAccess.getTransitionBodyAccess().getTriggerAssignment_4_1_2(), "rule__TransitionBody__TriggerAssignment_4_1_2");
			builder.put(grammarAccess.getTransitionBodyAccess().getTransitionguardAssignment_4_2(), "rule__TransitionBody__TransitionguardAssignment_4_2");
			builder.put(grammarAccess.getTransitionBodyAccess().getTransitionoperationAssignment_4_3(), "rule__TransitionBody__TransitionoperationAssignment_4_3");
			builder.put(grammarAccess.getTransitionGuardAccess().getNameAssignment_2(), "rule__TransitionGuard__NameAssignment_2");
			builder.put(grammarAccess.getTransitionOperationAccess().getNameAssignment_1(), "rule__TransitionOperation__NameAssignment_1");
			builder.put(grammarAccess.getTriggerAccess().getNameAssignment(), "rule__Trigger__NameAssignment");
			builder.put(grammarAccess.getMethodAccess().getNameAssignment(), "rule__Method__NameAssignment");
			builder.put(grammarAccess.getParameterAccess().getNameAssignment(), "rule__Parameter__NameAssignment");
			builder.put(grammarAccess.getMethodParameterTriggerAccess().getMethodAssignment_0(), "rule__MethodParameterTrigger__MethodAssignment_0");
			builder.put(grammarAccess.getMethodParameterTriggerAccess().getParameterAssignment_2(), "rule__MethodParameterTrigger__ParameterAssignment_2");
			builder.put(grammarAccess.getPortAccess().getNameAssignment(), "rule__Port__NameAssignment");
			builder.put(grammarAccess.getEventAccess().getNameAssignment(), "rule__Event__NameAssignment");
			builder.put(grammarAccess.getPortEventTriggerAccess().getPortAssignment_0(), "rule__PortEventTrigger__PortAssignment_0");
			builder.put(grammarAccess.getPortEventTriggerAccess().getEventAssignment_2(), "rule__PortEventTrigger__EventAssignment_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private HclScopeGrammarAccess grammarAccess;

	@Override
	protected InternalHclScopeParser createParser() {
		InternalHclScopeParser result = new InternalHclScopeParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public HclScopeGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(HclScopeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
