<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:standard="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Model xmi:id="_0" name="umlrt" URI="http://www.eclipse.org/papyrus-rt/2017/UML-RT">
    <elementImport xmi:id="_elementImport.0" alias="">
      <importedElement xmi:type="uml:Enumeration" href="../../org.eclipse.papyrusrt.umlrt.profile/umlProfile/uml-rt.profile.uml#_UXMMIGDdEeOesvHnEWH_sQ"/>
    </elementImport>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="Model" name="Model">
      <ownedComment xmi:id="Model-_ownedComment.0" annotatedElement="Model">
        <body>A fa√ßade for a Resource that contains a UML-RT package,
providing a view of the reosurce more in keeping with the
UML-RT semantics.
</body>
      </ownedComment>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="NamedElement" name="NamedElement" isAbstract="true">
      <ownedAttribute xmi:id="NamedElement-model" name="model" type="Model" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="NamedElement-model-_ownedComment.0" annotatedElement="NamedElement-model">
          <body>The model that (recursively) contains the element.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-inheritanceKind" name="inheritanceKind" type="InheritanceKind" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="NamedElement-inheritanceKind-_ownedComment.0" annotatedElement="NamedElement-inheritanceKind">
          <body>The disposition of an element with respect to inheritance
from another context or redefinition of an inherited element.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-name" name="name" isDerived="true">
        <ownedComment xmi:id="NamedElement-name-_ownedComment.0" annotatedElement="NamedElement-name">
          <body>The name of an element, corresponding to the name of the
underlying UML element.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NamedElement-name-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-qualifiedName" name="qualifiedName" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="NamedElement-qualifiedName-_ownedComment.0" annotatedElement="NamedElement-qualifiedName">
          <body>The qualified name of an element, corresponding to the qualified
name of the underlying UML element.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NamedElement-qualifiedName-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-isInherited" name="isInherited" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="NamedElement-isInherited-_ownedComment.0" annotatedElement="NamedElement-isInherited">
          <body>Indication of whether the element is inherited from another context
or redefines an inherited element.  This is true for all elements that
are not local (root) definitions in their containing context.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-isVirtualRedefinition" name="isVirtualRedefinition" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="NamedElement-isVirtualRedefinition-_ownedComment.0" annotatedElement="NamedElement-isVirtualRedefinition">
          <body>Indication of whether the element is a stand-in, in the inheriting
context, for an element that is actually inherited from another
context.  This stand-in is a virtual element in the sense that it
is not really an element of the model and is not persisted in the
model.  It is just a distinct &quot;proxy&quot; for the inherited element, in
and unique to the inheriting context.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-isRedefinition" name="isRedefinition" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="NamedElement-isRedefinition-_ownedComment.0" annotatedElement="NamedElement-isRedefinition">
          <body>Indication of whether the element redefines an inherited element
but does not exclude it fron the redefining context.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-isExcluded" name="isExcluded" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="NamedElement-isExcluded-_ownedComment.0" annotatedElement="NamedElement-isExcluded">
          <body>Indication of whether the element is a redefinition of an
inherited element for the purpose of excluding it from the
inheriting context.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-redefinedElement" name="redefinedElement" type="NamedElement" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_packagedElement.2">
        <ownedComment xmi:id="NamedElement-redefinedElement-_ownedComment.0" annotatedElement="NamedElement-redefinedElement">
          <body>If the element is inherited or a redefinition, the element in the
parent context that it redefines.  Unlike UML, the semantics
of redefinition in UML-RT is singular:  an element redefines at
most one inherited element.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NamedElement-redefinedElement-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-redefinitionContext" name="redefinitionContext" type="NamedElement" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_packagedElement.3">
        <ownedComment xmi:id="NamedElement-redefinitionContext-_ownedComment.0" annotatedElement="NamedElement-redefinitionContext">
          <body>The context in which an element redefines an inherited element.
It is this redefinition context that inherits the redefined element.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NamedElement-redefinitionContext-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-redefinableElement" name="redefinableElement" type="NamedElement" isReadOnly="true" isDerived="true" isDerivedUnion="true" association="_packagedElement.3">
        <ownedComment xmi:id="NamedElement-redefinableElement-_ownedComment.0" annotatedElement="NamedElement-redefinableElement">
          <body>The collection of all owned elements that can be
redefined by specializing (inheriting) contexts.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NamedElement-redefinableElement-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NamedElement-redefinableElement-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-inheritedElement" name="inheritedElement" type="NamedElement" isReadOnly="true" isDerived="true" association="_packagedElement.4">
        <ownedComment xmi:id="NamedElement-inheritedElement-_ownedComment.0" annotatedElement="NamedElement-inheritedElement">
          <body>For an element that is a redefinition, the nearest element
in the chain of redefinitions that is not a virtual element
representing the inherited element, but is a real element
in the model.  Thus, the element that is inherited.  This
may be the root definition, or else some redefinition of it.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NamedElement-inheritedElement-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-rootDefinition" name="rootDefinition" type="NamedElement" isReadOnly="true" isDerived="true" association="_packagedElement.6">
        <ownedComment xmi:id="NamedElement-rootDefinition-_ownedComment.0" annotatedElement="NamedElement-rootDefinition">
          <body>The element that is the highest-level definition of an element
in the hierarchy.  For an element that is not a redefinition of
some inherited element, this is itself, otherwise it is (recursively)
the root definition of the element that it redefines.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NamedElement-rootDefinition-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="NamedElement-excludedElement" name="excludedElement" type="NamedElement" isReadOnly="true" isDerived="true" association="_packagedElement.5">
        <ownedComment xmi:id="NamedElement-excludedElement-_ownedComment.0" annotatedElement="NamedElement-excludedElement">
          <body>The elements that the named element would inherit
from parent contexts but which it excludes by redefinition.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NamedElement-excludedElement-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NamedElement-excludedElement-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedOperation xmi:id="NamedElement-toUML" name="toUML" isQuery="true">
        <ownedComment xmi:id="NamedElement-toUML-_ownedComment.0" annotatedElement="NamedElement-toUML">
          <body>Obtains the element in the underlying UML model
that represents this fa√ßade object.</body>
        </ownedComment>
        <ownedParameter xmi:id="NamedElement-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="NamedElement-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="NamedElement-toUML-_ownedParameter.0">
            <body>The primary UML model element that represents me</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#NamedElement"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="NamedElement-redefines" name="redefines" isQuery="true">
        <ownedComment xmi:id="NamedElement-redefines-_ownedComment.0" annotatedElement="NamedElement-redefines">
          <body>Queries whether the receiver is a redefinition of a
given &lt;code>element&lt;/code>.  As a special case,
an element is considered to redefine itself.</body>
        </ownedComment>
        <ownedParameter xmi:id="NamedElement-redefines-element" name="element" type="NamedElement" effect="read">
          <ownedComment xmi:id="NamedElement-redefines-element-_ownedComment.0" annotatedElement="NamedElement-redefines-element">
            <body>An UML-RT element</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="NamedElement-redefines-_ownedParameter.1" direction="return" effect="read">
          <ownedComment xmi:id="NamedElement-redefines-_ownedParameter.1-_ownedComment.0" annotatedElement="NamedElement-redefines-_ownedParameter.1">
            <body>Whether the receiver is or is a redefinition of the &lt;code>element&lt;/code></body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="NamedElement-getRedefinitionOf" name="getRedefinitionOf" isQuery="true">
        <ownedComment xmi:id="NamedElement-getRedefinitionOf-_ownedComment.0" annotatedElement="NamedElement-getRedefinitionOf">
          <body>If the receiver is a redefinition context in the UML sense,
obtains its redefinition of a given &lt;code>element&lt;/code>
if it does, in fact, inherit that element.</body>
        </ownedComment>
        <ownedParameter xmi:id="NamedElement-getRedefinitionOf-element" name="element" type="NamedElement-getRedefinitionOf-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault" effect="read">
          <ownedComment xmi:id="NamedElement-getRedefinitionOf-element-_ownedComment.0" annotatedElement="NamedElement-getRedefinitionOf-element">
            <body>An UML-RT element, usually one that is inherited by
the receiver</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="NamedElement-getRedefinitionOf-_ownedParameter.1" type="NamedElement-getRedefinitionOf-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault" direction="return" effect="read">
          <ownedComment xmi:id="NamedElement-getRedefinitionOf-_ownedParameter.1-_ownedComment.0" annotatedElement="NamedElement-getRedefinitionOf-_ownedParameter.1">
            <body>The receiver's redefinition of the &lt;code>element&lt;/code>, even
if it is a &quot;virtual redefinition&quot; representing a purely inherited
element, or &lt;code>null&lt;/code> if the receiver does not actually
inherit the &lt;code>element&lt;/code></body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NamedElement-getRedefinitionOf-_ownedParameter.1-_lowerValue"/>
        </ownedParameter>
        <ownedTemplateSignature xmi:id="NamedElement-getRedefinitionOf-_ownedTemplateSignature" parameter="NamedElement-getRedefinitionOf-_ownedTemplateSignature-_ownedParameter.0">
          <ownedParameter xmi:type="uml:ClassifierTemplateParameter" xmi:id="NamedElement-getRedefinitionOf-_ownedTemplateSignature-_ownedParameter.0" default="NamedElement-getRedefinitionOf-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault" parameteredElement="NamedElement-getRedefinitionOf-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault" constrainingClassifier="NamedElement">
            <ownedDefault xmi:type="uml:Class" xmi:id="NamedElement-getRedefinitionOf-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault" name="T" templateParameter="NamedElement-getRedefinitionOf-_ownedTemplateSignature-_ownedParameter.0"/>
          </ownedParameter>
        </ownedTemplateSignature>
      </ownedOperation>
      <ownedOperation xmi:id="NamedElement-getRedefinitionChain" name="getRedefinitionChain" isQuery="true">
        <ownedComment xmi:id="NamedElement-getRedefinitionChain-_ownedComment.0" annotatedElement="NamedElement-getRedefinitionChain">
          <body>Queries the elements that the receiver redefines, from
and including itself to the root of the redefinition chain.</body>
        </ownedComment>
        <ownedParameter xmi:id="NamedElement-getRedefinitionChain-_ownedParameter.0" type="NamedElement" direction="return" effect="read">
          <ownedComment xmi:id="NamedElement-getRedefinitionChain-_ownedParameter.0-_ownedComment.0" annotatedElement="NamedElement-getRedefinitionChain-_ownedParameter.0">
            <body>The receiver, the element that it redefines (if any), the element
that that redefines, and so on to the root definition.</body>
          </ownedComment>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="NamedElement-getRedefinitionChain-_ownedParameter.0-_upperValue" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="NamedElement-getExcludedElement" name="getExcludedElement" isQuery="true">
        <ownedComment xmi:id="NamedElement-getExcludedElement-_ownedComment.0" annotatedElement="NamedElement-getExcludedElement">
          <body>Queries a specific item that is excluded from the receiver's
context.</body>
        </ownedComment>
        <ownedParameter xmi:id="NamedElement-getExcludedElement-name" name="name" effect="read">
          <ownedComment xmi:id="NamedElement-getExcludedElement-name-_ownedComment.0" annotatedElement="NamedElement-getExcludedElement-name">
            <body>The name of the ecluded element to find, or &lt;code>null&lt;/code>
to find any name.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NamedElement-getExcludedElement-name-_lowerValue"/>
        </ownedParameter>
        <ownedParameter xmi:id="NamedElement-getExcludedElement-type" name="type" type="NamedElement-Class_T" effect="read">
          <ownedComment xmi:id="NamedElement-getExcludedElement-type-_ownedComment.0" annotatedElement="NamedElement-getExcludedElement-type">
            <body>The Java interface/class of the excluded element to find,
or &lt;code>null&lt;/code> to find an element of any metaclass.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="NamedElement-getExcludedElement-_ownedParameter.2" type="NamedElement-getExcludedElement-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault" direction="return" effect="read">
          <ownedComment xmi:id="NamedElement-getExcludedElement-_ownedParameter.2-_ownedComment.0" annotatedElement="NamedElement-getExcludedElement-_ownedParameter.2">
            <body>Some excluded element matching the provided search
criteria, or &lt;code>null&lt;/code> if none match</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="NamedElement-getExcludedElement-_ownedParameter.2-_lowerValue"/>
        </ownedParameter>
        <ownedTemplateSignature xmi:id="NamedElement-getExcludedElement-_ownedTemplateSignature" parameter="NamedElement-getExcludedElement-_ownedTemplateSignature-_ownedParameter.0">
          <ownedParameter xmi:type="uml:ClassifierTemplateParameter" xmi:id="NamedElement-getExcludedElement-_ownedTemplateSignature-_ownedParameter.0" default="NamedElement-getExcludedElement-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault" parameteredElement="NamedElement-getExcludedElement-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault" constrainingClassifier="NamedElement">
            <ownedDefault xmi:type="uml:Class" xmi:id="NamedElement-getExcludedElement-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault" name="T" templateParameter="NamedElement-getExcludedElement-_ownedTemplateSignature-_ownedParameter.0"/>
          </ownedParameter>
        </ownedTemplateSignature>
      </ownedOperation>
      <ownedOperation xmi:id="NamedElement-allRedefinitions" name="allRedefinitions" isQuery="true">
        <ownedComment xmi:id="NamedElement-allRedefinitions-_ownedComment.0" annotatedElement="NamedElement-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="NamedElement-allRedefinitions-_ownedParameter.0" type="NamedElement-Stream3C3F20extends20NamedElement3E" direction="return" effect="read">
          <ownedComment xmi:id="NamedElement-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="NamedElement-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="NamedElement-exclude" name="exclude">
        <ownedComment xmi:id="NamedElement-exclude-_ownedComment.0" annotatedElement="NamedElement-exclude">
          <body>Excludes the receiver from the context in which it
would otherwise have been inherited.</body>
        </ownedComment>
        <ownedParameter xmi:id="NamedElement-exclude-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="NamedElement-exclude-_ownedParameter.0-_ownedComment.0" annotatedElement="NamedElement-exclude-_ownedParameter.0">
            <body>&lt;code>true&lt;/code> if the receiver is an element that is
inherited or redefines an inherited element. it is of a
metaclass that can be excluded, and it and was not
already excluded; &lt;code>false&lt;/code>, otherwise</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="NamedElement-reinherit" name="reinherit">
        <ownedComment xmi:id="NamedElement-reinherit-_ownedComment.0" annotatedElement="NamedElement-reinherit">
          <body>Restores an excluded element to the condition of
being inherited.</body>
        </ownedComment>
        <ownedParameter xmi:id="NamedElement-reinherit-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="NamedElement-reinherit-_ownedParameter.0-_ownedComment.0" annotatedElement="NamedElement-reinherit-_ownedParameter.0">
            <body>&lt;code>true&lt;/code> if the receiver was excluded and is
successfully re-inherited; &lt;code>false&lt;/code>, otherwise</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="NamedElement-reify" name="reify">
        <ownedComment xmi:id="NamedElement-reify-_ownedComment.0" annotatedElement="NamedElement-reify">
          <body>&lt;p>
For an element that is a &quot;virtual redefinition&quot; representing an
element that is inherited from some other context, causes it
to become a real redefinition that is (in the UML model
underlying the UML-RT fa√ßade) persisted as such.
&lt;/p>&lt;p>
&lt;b>Note&lt;/b> that it should be exceedingly rare that a client
of the Fa√ßade API needs to call this operation.  This reification
is more normally done automatically by the model when an
inherited element is modified in some way to make it different
to the element that it redefines.
&lt;/p></body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="NamedElement-destroy" name="destroy">
        <ownedComment xmi:id="NamedElement-destroy-_ownedComment.0" annotatedElement="NamedElement-destroy">
          <body>Destroys the underlying UML model element using the
appropriate UML operation.</body>
        </ownedComment>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="NamedElement-Class_T" name="Class_T" visibility="private">
        <templateBinding xmi:id="NamedElement-Class_T-_templateBinding.0">
          <parameterSubstitution xmi:id="NamedElement-Class_T-_templateBinding.0-_parameterSubstitution.0" actual="NamedElement-getExcludedElement-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault">
            <formal xmi:type="uml:ClassifierTemplateParameter" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EJavaClass-_ownedTemplateSignature-_ownedParameter.0"/>
          </parameterSubstitution>
          <signature xmi:type="uml:RedefinableTemplateSignature" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EJavaClass-_ownedTemplateSignature"/>
        </templateBinding>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="NamedElement-_3F20extends20NamedElement" name="? extends NamedElement" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="NamedElement-Stream3C3F20extends20NamedElement3E" name="Stream&lt;? extends NamedElement>" visibility="private">
        <templateBinding xmi:id="NamedElement-Stream3C3F20extends20NamedElement3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="NamedElement-Stream3C3F20extends20NamedElement3E-_templateBinding.0-_parameterSubstitution.0" actual="NamedElement-_3F20extends20NamedElement" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.2" visibility="private" memberEnd="NamedElement-redefinedElement _packagedElement.2-redefiningElement">
      <ownedEnd xmi:id="_packagedElement.2-redefiningElement" name="redefiningElement" type="NamedElement" association="_packagedElement.2">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.2-redefiningElement-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.2-redefiningElement-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.3" visibility="private" memberEnd="NamedElement-redefinitionContext NamedElement-redefinableElement"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.4" visibility="private" memberEnd="NamedElement-inheritedElement _packagedElement.4-inheritingElement">
      <ownedEnd xmi:id="_packagedElement.4-inheritingElement" name="inheritingElement" type="NamedElement" association="_packagedElement.4">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.4-inheritingElement-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.4-inheritingElement-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.5" visibility="private" memberEnd="NamedElement-excludedElement _packagedElement.5-excludingElement">
      <ownedEnd xmi:id="_packagedElement.5-excludingElement" name="excludingElement" type="NamedElement" association="_packagedElement.5"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.6" visibility="private" memberEnd="NamedElement-rootDefinition _packagedElement.6-redefinitionTree">
      <ownedEnd xmi:id="_packagedElement.6-redefinitionTree" name="redefinitionTree" type="NamedElement" association="_packagedElement.6">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.6-redefinitionTree-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.6-redefinitionTree-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="InheritanceKind" name="InheritanceKind">
      <ownedComment xmi:id="InheritanceKind-_ownedComment.0" annotatedElement="InheritanceKind">
        <body>An enumeration of the various dispositions of an UML-RT
element with respect to inheritance.
</body>
      </ownedComment>
      <ownedLiteral xmi:id="InheritanceKind-inherited" name="inherited">
        <ownedComment xmi:id="InheritanceKind-inherited-_ownedComment.0" annotatedElement="InheritanceKind-inherited">
          <body>Indication that an element represents a purely inherited
element, being a &quot;shadow&quot; of or &quot;proxy&quot; for the inherited
definition.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="InheritanceKind-redefined" name="redefined">
        <ownedComment xmi:id="InheritanceKind-redefined-_ownedComment.0" annotatedElement="InheritanceKind-redefined">
          <body>Indication that an element redefines an inherited element.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="InheritanceKind-excluded" name="excluded">
        <ownedComment xmi:id="InheritanceKind-excluded-_ownedComment.0" annotatedElement="InheritanceKind-excluded">
          <body>Indication that an element is an exclusion, being a
redefinition of an inherited element for the purpose
of excluding it from (&quot;undefining&quot; it in) the inheriting context.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="InheritanceKind-none" name="none">
        <ownedComment xmi:id="InheritanceKind-none-_ownedComment.0" annotatedElement="InheritanceKind-none">
          <body>Indication that an element is not inherited and not a redefinition
of an inherited element:  it is a new definition, possible the root
of a redefinition tree in inheriting contexts.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Package" name="Package">
      <ownedComment xmi:id="Package-_ownedComment.0" annotatedElement="Package">
        <body>Representation of the UML-RT concept of a &lt;em>Package&lt;/em>, providing
a namespace for capsules, protocols, and other packages.</body>
      </ownedComment>
      <generalization xmi:id="Package-_generalization.0" general="NamedElement"/>
      <ownedAttribute xmi:id="Package-nestedPackage" name="nestedPackage" type="Package" aggregation="composite" isDerived="true" association="_packagedElement.9">
        <ownedComment xmi:id="Package-nestedPackage-_ownedComment.0" annotatedElement="Package-nestedPackage">
          <body>Packages contained with this package's namespace.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Package-nestedPackage-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Package-nestedPackage-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Package-nestingPackage" name="nestingPackage" type="Package" isReadOnly="true" isDerived="true" association="_packagedElement.9">
        <ownedComment xmi:id="Package-nestingPackage-_ownedComment.0" annotatedElement="Package-nestingPackage">
          <body>The package containing this package.  Packages do not have to
be contained; they may be a root of the model content graph.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Package-nestingPackage-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Package-nestingPackage-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Package-capsule" name="capsule" type="Capsule" aggregation="composite" isDerived="true" association="_packagedElement.10">
        <ownedComment xmi:id="Package-capsule-_ownedComment.0" annotatedElement="Package-capsule">
          <body>Capsules contained within this package's namespace.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Package-capsule-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Package-capsule-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Package-protocol" name="protocol" type="Protocol" aggregation="composite" isDerived="true" association="_packagedElement.11">
        <ownedComment xmi:id="Package-protocol-_ownedComment.0" annotatedElement="Package-protocol">
          <body>Protocols contained within this package's namespace.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Package-protocol-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Package-protocol-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Package-toUML" name="toUML" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="Package-toUML-_ownedComment.0" annotatedElement="Package-toUML">
          <body>Obtains the UML package element underlying this UML-RT
fa√ßade.  Useful, for example, to find UML constructs such
as passive classes and data types that UML-RT re-uses from
UML.</body>
        </ownedComment>
        <ownedParameter xmi:id="Package-toUML-_ownedParameter.0" direction="return" effect="read">
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Package"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Package-createNestedPackage" name="createNestedPackage">
        <ownedComment xmi:id="Package-createNestedPackage-_ownedComment.0" annotatedElement="Package-createNestedPackage">
          <body>Creates a new package within this package's namespace.</body>
        </ownedComment>
        <ownedParameter xmi:id="Package-createNestedPackage-name" name="name" effect="read">
          <ownedComment xmi:id="Package-createNestedPackage-name-_ownedComment.0" annotatedElement="Package-createNestedPackage-name">
            <body>A name for the new nested package</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="Package-createNestedPackage-_ownedParameter.1" type="Package" direction="return">
          <ownedComment xmi:id="Package-createNestedPackage-_ownedParameter.1-_ownedComment.0" annotatedElement="Package-createNestedPackage-_ownedParameter.1">
            <body>The new nested package</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Package-createCapsule" name="createCapsule">
        <ownedComment xmi:id="Package-createCapsule-_ownedComment.0" annotatedElement="Package-createCapsule">
          <body>Creates a new capsule within this package's namespace.</body>
        </ownedComment>
        <ownedParameter xmi:id="Package-createCapsule-name" name="name" effect="read">
          <ownedComment xmi:id="Package-createCapsule-name-_ownedComment.0" annotatedElement="Package-createCapsule-name">
            <body>A name for the new capsule</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="Package-createCapsule-_ownedParameter.1" type="Capsule" direction="return">
          <ownedComment xmi:id="Package-createCapsule-_ownedParameter.1-_ownedComment.0" annotatedElement="Package-createCapsule-_ownedParameter.1">
            <body>The new capsule</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Package-createProtocol" name="createProtocol">
        <ownedComment xmi:id="Package-createProtocol-_ownedComment.0" annotatedElement="Package-createProtocol">
          <body>Creates a new protocol within this package's namespace.</body>
        </ownedComment>
        <ownedParameter xmi:id="Package-createProtocol-name" name="name" effect="read">
          <ownedComment xmi:id="Package-createProtocol-name-_ownedComment.0" annotatedElement="Package-createProtocol-name">
            <body>A name for the new protocol</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="Package-createProtocol-_ownedParameter.1" type="Protocol" direction="return">
          <ownedComment xmi:id="Package-createProtocol-_ownedParameter.1-_ownedComment.0" annotatedElement="Package-createProtocol-_ownedParameter.1">
            <body>The new protocol</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.9" visibility="private" memberEnd="Package-nestedPackage Package-nestingPackage"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.10" visibility="private" memberEnd="Package-capsule Capsule-package"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.11" visibility="private" memberEnd="Package-protocol Protocol-package"/>
    <packagedElement xmi:type="uml:Class" xmi:id="Classifier" name="Classifier" isAbstract="true">
      <ownedComment xmi:id="Classifier-_ownedComment.0" annotatedElement="Classifier">
        <body>An abstract representation of UML-RT concepts that are
classifiers in the underlying UML model, such as Capsules
and Protocols.</body>
      </ownedComment>
      <generalization xmi:id="Classifier-_generalization.0" general="NamedElement"/>
      <ownedAttribute xmi:id="Classifier-general" name="general" type="Classifier" isDerived="true" isDerivedUnion="true" association="_packagedElement.13">
        <ownedComment xmi:id="Classifier-general-_ownedComment.0" annotatedElement="Classifier-general">
          <body>The supertype, if any, of the classifier.  Unlike UML, which
allows multiple inheritance, UML-RT recognizes only single
inheritance of classifiers.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Classifier-general-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Classifier-specific" name="specific" type="Classifier" isDerived="true" isDerivedUnion="true" association="_packagedElement.13">
        <ownedComment xmi:id="Classifier-specific-_ownedComment.0" annotatedElement="Classifier-specific">
          <body>The set of classifiers specializing this classifier, from amongst
the model resources that are loaded in the resource set.  Thus,
this is not necessarily complete:  there can be specializations
that are unknown because they are not loaded.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Classifier-specific-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Classifier-specific-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Classifier-toUML" name="toUML" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="Classifier-toUML-_ownedComment.0" annotatedElement="Classifier-toUML">
          <body>Obtains the underlying UML model element representing
this classifier.</body>
        </ownedComment>
        <ownedParameter xmi:id="Classifier-toUML-_ownedParameter.0" direction="return" effect="read">
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Classifier"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Classifier-getPackage" name="getPackage" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="Classifier-getPackage-_ownedComment.0" annotatedElement="Classifier-getPackage">
          <body>Queries the package containing this classifier.  Unlike UML,
which has a concept of nested classifiers, all classifiers in
UML-RT are owned by packages.</body>
        </ownedComment>
        <ownedParameter xmi:id="Classifier-getPackage-_ownedParameter.0" type="Package" direction="return" effect="read">
          <ownedComment xmi:id="Classifier-getPackage-_ownedParameter.0-_ownedComment.0" annotatedElement="Classifier-getPackage-_ownedParameter.0">
            <body>The package that contains this classifier</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Classifier-getAncestry" name="getAncestry" isQuery="true">
        <ownedComment xmi:id="Classifier-getAncestry-_ownedComment.0" annotatedElement="Classifier-getAncestry">
          <body>Obtains the chain of supertypes from and including this
classifier up to the root classifier.</body>
        </ownedComment>
        <ownedParameter xmi:id="Classifier-getAncestry-_ownedParameter.0" name="" type="Classifier-List3C3F20extends20Classifier3E" direction="return" effect="read">
          <ownedComment xmi:id="Classifier-getAncestry-_ownedParameter.0-_ownedComment.0" annotatedElement="Classifier-getAncestry-_ownedParameter.0">
            <body>Myself, my general (if any), its general, and so un up to the root</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Classifier-getHierarchy" name="getHierarchy" isQuery="true">
        <ownedComment xmi:id="Classifier-getHierarchy-_ownedComment.0" annotatedElement="Classifier-getHierarchy">
          <body>Obtains the classifier hierarchy rooted at this classifier,
as a Java stream, in breadth-first order.  Note that this
may only include classifiers that are currently loaded in
the resource set.</body>
        </ownedComment>
        <ownedParameter xmi:id="Classifier-getHierarchy-_ownedParameter.0" name="" type="Classifier-Stream3C3F20extends20Classifier3E" direction="return" effect="read">
          <ownedComment xmi:id="Classifier-getHierarchy-_ownedParameter.0-_ownedComment.0" annotatedElement="Classifier-getHierarchy-_ownedParameter.0">
            <body>A stream over myself first and my specialization hierarchy, in breadth-first order</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Classifier-isSuperTypeOf" name="isSuperTypeOf" isQuery="true">
        <ownedComment xmi:id="Classifier-isSuperTypeOf-_ownedComment.0" annotatedElement="Classifier-isSuperTypeOf">
          <body>Queries whether another classifier is a supertype (transitively) of this classifier.</body>
        </ownedComment>
        <ownedParameter xmi:id="Classifier-isSuperTypeOf-classifier" name="classifier" type="Classifier" effect="read">
          <ownedComment xmi:id="Classifier-isSuperTypeOf-classifier-_ownedComment.0" annotatedElement="Classifier-isSuperTypeOf-classifier">
            <body>Some classifier in the UML-RT model</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="Classifier-isSuperTypeOf-_ownedParameter.1" direction="return" effect="read">
          <ownedComment xmi:id="Classifier-isSuperTypeOf-_ownedParameter.1-_ownedComment.0" annotatedElement="Classifier-isSuperTypeOf-_ownedParameter.1">
            <body>&lt;code>true&lt;/code> if the classifier is this classifier or a supertype
of its general; &lt;code>false&lt;/code>, otherwise</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Classifier-setGeneral" name="setGeneral">
        <ownedComment xmi:id="Classifier-setGeneral-_ownedComment.0" annotatedElement="Classifier-setGeneral">
          <body>Sets the general classifier of this classifier, replacing the current general, if any</body>
        </ownedComment>
        <ownedParameter xmi:id="Classifier-setGeneral-general" name="general" type="Classifier" effect="read">
          <ownedComment xmi:id="Classifier-setGeneral-general-_ownedComment.0" annotatedElement="Classifier-setGeneral-general">
            <body>The new general classifier which, if not &lt;code>null&lt;/code>, must be of the
same metaclass or a more general metaclass as this classifier</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Classifier-setGeneral-general-_lowerValue"/>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="Classifier-_3F20extends20Classifier" name="? extends Classifier" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="Classifier-List3C3F20extends20Classifier3E" name="List&lt;? extends Classifier>" visibility="private">
        <templateBinding xmi:id="Classifier-List3C3F20extends20Classifier3E-_templateBinding.0" signature="List-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="Classifier-List3C3F20extends20Classifier3E-_templateBinding.0-_parameterSubstitution.0" actual="Classifier-_3F20extends20Classifier" formal="List-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="Classifier-Stream3C3F20extends20Classifier3E" name="Stream&lt;? extends Classifier>" visibility="private">
        <templateBinding xmi:id="Classifier-Stream3C3F20extends20Classifier3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="Classifier-Stream3C3F20extends20Classifier3E-_templateBinding.0-_parameterSubstitution.0" actual="Classifier-_3F20extends20Classifier" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.13" visibility="private" memberEnd="Classifier-general Classifier-specific"/>
    <packagedElement xmi:type="uml:Class" xmi:id="Capsule" name="Capsule">
      <ownedComment xmi:id="Capsule-_ownedComment.0" annotatedElement="Capsule">
        <body>Representation of the UML-RT concept of a &lt;em>Capsule&lt;/em>.</body>
      </ownedComment>
      <generalization xmi:id="Capsule-_generalization.0" general="Classifier"/>
      <ownedAttribute xmi:id="Capsule-package" name="package" type="Package" isReadOnly="true" isDerived="true" association="_packagedElement.10">
        <ownedComment xmi:id="Capsule-package-_ownedComment.0" annotatedElement="Capsule-package">
          <body>The package containing this capsule.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Capsule-superclass" name="superclass" type="Capsule" isDerived="true" subsettedProperty="Classifier-general" association="_packagedElement.15">
        <ownedComment xmi:id="Capsule-superclass-_ownedComment.0" annotatedElement="Capsule-superclass">
          <body>The superclass of this capsule.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Capsule-superclass-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Capsule-subclass" name="subclass" type="Capsule" isReadOnly="true" isDerived="true" subsettedProperty="Classifier-specific" association="_packagedElement.15">
        <ownedComment xmi:id="Capsule-subclass-_ownedComment.0" annotatedElement="Capsule-subclass">
          <body>The known direct subclasses of this capsule.  Note that this
may be incomplete if some subclasses are not known because
they are not currently loaded in the resource set.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Capsule-subclass-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Capsule-subclass-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Capsule-port" name="port" type="Port" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.16">
        <ownedComment xmi:id="Capsule-port-_ownedComment.0" annotatedElement="Capsule-port">
          <body>The ports of this capsule, including any that are inherited
or redefined, but not those that are redefined as excluded.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Capsule-port-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Capsule-port-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Capsule-capsulePart" name="capsulePart" type="CapsulePart" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.17">
        <ownedComment xmi:id="Capsule-capsulePart-_ownedComment.0" annotatedElement="Capsule-capsulePart">
          <body>The capsule-parts of this capsule, including any that are
inherited or redefined, but not those that are redefined as excluded.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Capsule-capsulePart-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Capsule-capsulePart-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Capsule-connector" name="connector" type="Connector" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.18">
        <ownedComment xmi:id="Capsule-connector-_ownedComment.0" annotatedElement="Capsule-connector">
          <body>The connectors of this capsule, including any that are
inherited or redefined but not those that are redefined
as excluded.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Capsule-connector-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Capsule-connector-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Capsule-hierarchy" name="hierarchy" type="Capsule-Stream3CCapsule3E" isReadOnly="true" aggregation="composite" isDerived="true">
        <ownedComment xmi:id="Capsule-hierarchy-_ownedComment.0" annotatedElement="Capsule-hierarchy">
          <body>A stream over the class hierarchy root at and including
this capsule, in breadth-first order.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Capsule-stateMachine" name="stateMachine" type="StateMachine" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.51">
        <ownedComment xmi:id="Capsule-stateMachine-_ownedComment.0" annotatedElement="Capsule-stateMachine">
          <body>The state machine that defines the capsule's behavior.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Capsule-stateMachine-_lowerValue"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Capsule-toUML" name="toUML" isQuery="true" redefinedOperation="Classifier-toUML">
        <ownedComment xmi:id="Capsule-toUML-_ownedComment.0" annotatedElement="Capsule-toUML">
          <body>Obtains the class that represents this capsule in the
underlying UML model.</body>
        </ownedComment>
        <ownedParameter xmi:id="Capsule-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="Capsule-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="Capsule-toUML-_ownedParameter.0">
            <body>The UML class</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Capsule-getAncestry" name="getAncestry" isQuery="true" redefinedOperation="Classifier-getAncestry">
        <ownedComment xmi:id="Capsule-getAncestry-_ownedComment.0" annotatedElement="Capsule-getAncestry">
          <body>Obtains the superclass chain of this capsule, from itself
to the root type.</body>
        </ownedComment>
        <ownedParameter xmi:id="Capsule-getAncestry-_ownedParameter.0" name="" type="Capsule" direction="return" effect="read">
          <ownedComment xmi:id="Capsule-getAncestry-_ownedParameter.0-_ownedComment.0" annotatedElement="Capsule-getAncestry-_ownedParameter.0">
            <body>This capsule, its superclass (if any), that capsule's superclass,
etc. up to the root capsule type</body>
          </ownedComment>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Capsule-getAncestry-_ownedParameter.0-_upperValue" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Capsule-getPorts" name="getPorts" isQuery="true">
        <ownedComment xmi:id="Capsule-getPorts-_ownedComment.0" annotatedElement="Capsule-getPorts">
          <body>Obtains all of the ports of the capsule, optionally including
also those that are redefined as excluded.</body>
        </ownedComment>
        <ownedParameter xmi:id="Capsule-getPorts-withExclusions" name="withExclusions">
          <ownedComment xmi:id="Capsule-getPorts-withExclusions-_ownedComment.0" annotatedElement="Capsule-getPorts-withExclusions">
            <body>Whether to retrieve also excluded ports</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="Capsule-getPorts-_ownedParameter.1" type="Port" direction="return" effect="read">
          <ownedComment xmi:id="Capsule-getPorts-_ownedParameter.1-_ownedComment.0" annotatedElement="Capsule-getPorts-_ownedParameter.1">
            <body>The ports</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Capsule-getPorts-_ownedParameter.1-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Capsule-getPorts-_ownedParameter.1-_upperValue" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Capsule-getCapsuleParts" name="getCapsuleParts" isQuery="true">
        <ownedComment xmi:id="Capsule-getCapsuleParts-_ownedComment.0" annotatedElement="Capsule-getCapsuleParts">
          <body>Obtains all of the capsule-parts of the capsule, optionally including
also those that are redefined as excluded.</body>
        </ownedComment>
        <ownedParameter xmi:id="Capsule-getCapsuleParts-withExclusions" name="withExclusions">
          <ownedComment xmi:id="Capsule-getCapsuleParts-withExclusions-_ownedComment.0" annotatedElement="Capsule-getCapsuleParts-withExclusions">
            <body>Whether to retrieve also excluded capsule-parts</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="Capsule-getCapsuleParts-_ownedParameter.1" type="CapsulePart" direction="return" effect="read">
          <ownedComment xmi:id="Capsule-getCapsuleParts-_ownedParameter.1-_ownedComment.0" annotatedElement="Capsule-getCapsuleParts-_ownedParameter.1">
            <body>The capsule-parts</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Capsule-getCapsuleParts-_ownedParameter.1-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Capsule-getCapsuleParts-_ownedParameter.1-_upperValue" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Capsule-getConnectors" name="getConnectors" isQuery="true">
        <ownedComment xmi:id="Capsule-getConnectors-_ownedComment.0" annotatedElement="Capsule-getConnectors">
          <body>Obtains all of the connectors of the capsule, optionally also including
those that are redefined as excluded.</body>
        </ownedComment>
        <ownedParameter xmi:id="Capsule-getConnectors-withExclusions" name="withExclusions">
          <ownedComment xmi:id="Capsule-getConnectors-withExclusions-_ownedComment.0" annotatedElement="Capsule-getConnectors-withExclusions">
            <body>Whether to retrieve also excluded connectors</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="Capsule-getConnectors-_ownedParameter.1" type="Connector" direction="return" effect="read">
          <ownedComment xmi:id="Capsule-getConnectors-_ownedParameter.1-_ownedComment.0" annotatedElement="Capsule-getConnectors-_ownedParameter.1">
            <body>The connectors</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Capsule-getConnectors-_ownedParameter.1-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Capsule-getConnectors-_ownedParameter.1-_upperValue" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Capsule-createPort" name="createPort">
        <ownedComment xmi:id="Capsule-createPort-_ownedComment.0" annotatedElement="Capsule-createPort">
          <body>Creates a new external behavior port of the given protocol type.</body>
        </ownedComment>
        <ownedParameter xmi:id="Capsule-createPort-type" name="type" type="Protocol" effect="read">
          <ownedComment xmi:id="Capsule-createPort-type-_ownedComment.0" annotatedElement="Capsule-createPort-type">
            <body>The protocol type of the port.  If this protocol is the conjugate
view, then the port will be created as conjugated.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="Capsule-createPort-_ownedParameter.1" type="Port" direction="return">
          <ownedComment xmi:id="Capsule-createPort-_ownedParameter.1-_ownedComment.0" annotatedElement="Capsule-createPort-_ownedParameter.1">
            <body>The new port</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Capsule-createPort.1" name="createPort">
        <ownedComment xmi:id="Capsule-createPort.1-_ownedComment.0" annotatedElement="Capsule-createPort.1">
          <body>Creates a new port of the given protocol type and port-kind.</body>
        </ownedComment>
        <ownedParameter xmi:id="Capsule-createPort.1-type" name="type" type="Protocol" effect="read">
          <ownedComment xmi:id="Capsule-createPort.1-type-_ownedComment.0" annotatedElement="Capsule-createPort.1-type">
            <body>The protocol type of the port.  If this protocol is the conjugate
view, then the port will be created as conjugated.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="Capsule-createPort.1-kind" name="kind" type="PortKind" effect="read">
          <ownedComment xmi:id="Capsule-createPort.1-kind-_ownedComment.0" annotatedElement="Capsule-createPort.1-kind">
            <body>The kind of port to create</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="Capsule-createPort.1-_ownedParameter.2" type="Port" direction="return">
          <ownedComment xmi:id="Capsule-createPort.1-_ownedParameter.2-_ownedComment.0" annotatedElement="Capsule-createPort.1-_ownedParameter.2">
            <body>The new port</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Capsule-createCapsulePart" name="createCapsulePart">
        <ownedComment xmi:id="Capsule-createCapsulePart-_ownedComment.0" annotatedElement="Capsule-createCapsulePart">
          <body>Creates a new part of the given capsule type.</body>
        </ownedComment>
        <ownedParameter xmi:id="Capsule-createCapsulePart-type" name="type" type="Capsule" effect="read">
          <ownedComment xmi:id="Capsule-createCapsulePart-type-_ownedComment.0" annotatedElement="Capsule-createCapsulePart-type">
            <body>The capsule type of the part</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="Capsule-createCapsulePart-_ownedParameter.1" type="CapsulePart" direction="return">
          <ownedComment xmi:id="Capsule-createCapsulePart-_ownedParameter.1-_ownedComment.0" annotatedElement="Capsule-createCapsulePart-_ownedParameter.1">
            <body>The new part</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Capsule-createConnector" name="createConnector">
        <ownedComment xmi:id="Capsule-createConnector-_ownedComment.0" annotatedElement="Capsule-createConnector">
          <body>Creates a new connector in this capsule.</body>
        </ownedComment>
        <ownedParameter xmi:id="Capsule-createConnector-name" name="name" effect="read">
          <ownedComment xmi:id="Capsule-createConnector-name-_ownedComment.0" annotatedElement="Capsule-createConnector-name">
            <body>An optional name for the connector.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Capsule-createConnector-name-_lowerValue"/>
        </ownedParameter>
        <ownedParameter xmi:id="Capsule-createConnector-source" name="source" type="Port">
          <ownedComment xmi:id="Capsule-createConnector-source-_ownedComment.0" annotatedElement="Capsule-createConnector-source">
            <body>The source port of the connector, which for delegation connectors
is conventionally the service port.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="Capsule-createConnector-sourcePartWithPort" name="sourcePartWithPort" type="CapsulePart">
          <ownedComment xmi:id="Capsule-createConnector-sourcePartWithPort-_ownedComment.0" annotatedElement="Capsule-createConnector-sourcePartWithPort">
            <body>If the source port is a port on a capsule-part, the source
capsule-part of the connector</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Capsule-createConnector-sourcePartWithPort-_lowerValue"/>
        </ownedParameter>
        <ownedParameter xmi:id="Capsule-createConnector-target" name="target" type="Port">
          <ownedComment xmi:id="Capsule-createConnector-target-_ownedComment.0" annotatedElement="Capsule-createConnector-target">
            <body>The target port of the connector, which for delegation connectors
is conventionally an internal behavior port of the capsule or a
service port of some capsule-part.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="Capsule-createConnector-targetPartWithPort" name="targetPartWithPort" type="CapsulePart">
          <ownedComment xmi:id="Capsule-createConnector-targetPartWithPort-_ownedComment.0" annotatedElement="Capsule-createConnector-targetPartWithPort">
            <body>If the target port is a port on a capsule-part, the target
capsule-part of the connector</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Capsule-createConnector-targetPartWithPort-_lowerValue"/>
        </ownedParameter>
        <ownedParameter xmi:id="Capsule-createConnector-_ownedParameter.5" type="Connector" direction="return"/>
      </ownedOperation>
      <ownedOperation xmi:id="Capsule-createStateMachine" name="createStateMachine">
        <ownedComment xmi:id="Capsule-createStateMachine-_ownedComment.0" annotatedElement="Capsule-createStateMachine">
          <body>Creates a new state machine for the capsule if it does not already have one.</body>
        </ownedComment>
        <ownedParameter xmi:id="Capsule-createStateMachine-_ownedParameter.0" type="StateMachine" direction="return">
          <ownedComment xmi:id="Capsule-createStateMachine-_ownedParameter.0-_ownedComment.0" annotatedElement="Capsule-createStateMachine-_ownedParameter.0">
            <body>The new state machine, or &lt;code>null&lt;/code> if the capsule already has one</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="Capsule-Stream3CCapsule3E" name="Stream&lt;Capsule>" visibility="private">
        <templateBinding xmi:id="Capsule-Stream3CCapsule3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="Capsule-Stream3CCapsule3E-_templateBinding.0-_parameterSubstitution.0" actual="Capsule" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.15" visibility="private" memberEnd="Capsule-superclass Capsule-subclass"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.16" visibility="private" memberEnd="Capsule-port Port-capsule"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.17" visibility="private" memberEnd="Capsule-capsulePart CapsulePart-capsule"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.18" visibility="private" memberEnd="Capsule-connector Connector-capsule"/>
    <packagedElement xmi:type="uml:Class" xmi:id="ReplicatedElement" name="ReplicatedElement" isAbstract="true">
      <ownedComment xmi:id="ReplicatedElement-_ownedComment.0" annotatedElement="ReplicatedElement">
        <body>An abstract representation of UML-RT concepts that are
replicated elements.</body>
      </ownedComment>
      <generalization xmi:id="ReplicatedElement-_generalization.0" general="NamedElement"/>
      <ownedAttribute xmi:id="ReplicatedElement-replicationFactor" name="replicationFactor" isDerived="true">
        <ownedComment xmi:id="ReplicatedElement-replicationFactor-_ownedComment.0" annotatedElement="ReplicatedElement-replicationFactor">
          <body>The element's replication factor.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="ReplicatedElement-replicationFactorAsString" name="replicationFactorAsString" isDerived="true">
        <ownedComment xmi:id="ReplicatedElement-replicationFactorAsString-_ownedComment.0" annotatedElement="ReplicatedElement-replicationFactorAsString">
          <body>The replication factor represented as a string, either encoding
the numeric replication factor or else the expression that
computes it.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="ReplicatedElement-isSymbolicReplicationFactor" name="isSymbolicReplicationFactor" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="ReplicatedElement-isSymbolicReplicationFactor-_ownedComment.0" annotatedElement="ReplicatedElement-isSymbolicReplicationFactor">
          <body>Whether the replication factor is modelled as some kind of
expression, or else it is a literal numeric value.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedOperation xmi:id="ReplicatedElement-toUML" name="toUML" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="ReplicatedElement-toUML-_ownedComment.0" annotatedElement="ReplicatedElement-toUML">
          <body>Obtains the representation of the UML-RT element
in the underlying UML model.</body>
        </ownedComment>
        <ownedParameter xmi:id="ReplicatedElement-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="ReplicatedElement-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="ReplicatedElement-toUML-_ownedParameter.0">
            <body>The underlying UML element</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Property"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="ReplicatedElement-getCapsule" name="getCapsule" isAbstract="true" isQuery="true">
        <ownedComment xmi:id="ReplicatedElement-getCapsule-_ownedComment.0" annotatedElement="ReplicatedElement-getCapsule">
          <body>Obtains the capsule that contains the replicated element.</body>
        </ownedComment>
        <ownedParameter xmi:id="ReplicatedElement-getCapsule-_ownedParameter.0" type="Capsule" direction="return" effect="read"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Port" name="Port">
      <ownedComment xmi:id="Port-_ownedComment.0" annotatedElement="Port">
        <body>Representation of the UML-RT concept of a &lt;em>Port&lt;/em> of a capsule.</body>
      </ownedComment>
      <generalization xmi:id="Port-_generalization.0" general="ReplicatedElement"/>
      <ownedAttribute xmi:id="Port-kind" name="kind" type="PortKind" isDerived="true">
        <ownedComment xmi:id="Port-kind-_ownedComment.0" annotatedElement="Port-kind">
          <body>The kind of port.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-redefinedPort" name="redefinedPort" type="Port" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinedElement" association="_packagedElement.21">
        <ownedComment xmi:id="Port-redefinedPort-_ownedComment.0" annotatedElement="Port-redefinedPort">
          <body>The inherited port that this port redefines, if any.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Port-redefinedPort-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-capsule" name="capsule" type="Capsule" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.16">
        <ownedComment xmi:id="Port-capsule-_ownedComment.0" annotatedElement="Port-capsule">
          <body>The capsule containing this port.  If this port is inherited, then
the capsule that inherits it, not the capsule from which it is
inherited.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Port-capsule-_lowerValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-type" name="type" type="Protocol" isDerived="true" association="_packagedElement.22">
        <ownedComment xmi:id="Port-type-_ownedComment.0" annotatedElement="Port-type">
          <body>The protocol type of this port.  If this port is conjugated, then
the type is the conjugate view of that protocol.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-partWithPort" name="partWithPort" type="CapsulePart" isDerived="true" association="_packagedElement.25">
        <ownedComment xmi:id="Port-partWithPort-_ownedComment.0" annotatedElement="Port-partWithPort">
          <body>All of the known parts in other capsules that expose this port.
Note that this may not be the complete set of capsule-parts
if some are in resources that are not currently loaded in the
resource set.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Port-partWithPort-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Port-partWithPort-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-isService" name="isService" isDerived="true">
        <ownedComment xmi:id="Port-isService-_ownedComment.0" annotatedElement="Port-isService">
          <body>Whether this is a service port.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-isBehavior" name="isBehavior" isDerived="true">
        <ownedComment xmi:id="Port-isBehavior-_ownedComment.0" annotatedElement="Port-isBehavior">
          <body>Whether this is a behavior port.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-isConjugated" name="isConjugated" isDerived="true">
        <ownedComment xmi:id="Port-isConjugated-_ownedComment.0" annotatedElement="Port-isConjugated">
          <body>Whether this port's protocol type is conjugated.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-isWired" name="isWired" isDerived="true">
        <ownedComment xmi:id="Port-isWired-_ownedComment.0" annotatedElement="Port-isWired">
          <body>Whether this is a wired port.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-isPublish" name="isPublish" isDerived="true">
        <ownedComment xmi:id="Port-isPublish-_ownedComment.0" annotatedElement="Port-isPublish">
          <body>Whether this is a published (unwired) port.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-isNotification" name="isNotification" isDerived="true">
        <ownedComment xmi:id="Port-isNotification-_ownedComment.0" annotatedElement="Port-isNotification">
          <body>Whether this port receives notifications of connection
and disconnection from the run-time.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-registration" name="registration" isDerived="true">
        <ownedComment xmi:id="Port-registration-_ownedComment.0" annotatedElement="Port-registration">
          <body>The port registration kind.</body>
        </ownedComment>
        <type xmi:type="uml:Enumeration" href="../../org.eclipse.papyrusrt.umlrt.profile/umlProfile/uml-rt.profile.uml#_t8sxEEhPEeO0lv5O1DTHOQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-registrationOverride" name="registrationOverride" isDerived="true">
        <ownedComment xmi:id="Port-registrationOverride-_ownedComment.0" annotatedElement="Port-registrationOverride">
          <body>The port's registration override.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Port-registrationOverride-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-isConnected" name="isConnected" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="Port-isConnected-_ownedComment.0" annotatedElement="Port-isConnected">
          <body>Whether the port has any connectors.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-isConnectedInside" name="isConnectedInside" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="Port-isConnectedInside-_ownedComment.0" annotatedElement="Port-isConnectedInside">
          <body>Whether the port has any connectors &quot;on the inside&quot;.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-isConnectedOutside" name="isConnectedOutside" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="Port-isConnectedOutside-_ownedComment.0" annotatedElement="Port-isConnectedOutside">
          <body>Whether the port has any connectors &quot;on the outside&quot;.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-connector" name="connector" type="Connector" isReadOnly="true" isDerived="true" isDerivedUnion="true">
        <ownedComment xmi:id="Port-connector-_ownedComment.0" annotatedElement="Port-connector">
          <body>The connectors that connect this port to other ports.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Port-connector-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Port-connector-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-insideConnector" name="insideConnector" type="Connector" isReadOnly="true" isDerived="true" subsettedProperty="Port-connector" association="_packagedElement.23">
        <ownedComment xmi:id="Port-insideConnector-_ownedComment.0" annotatedElement="Port-insideConnector">
          <body>The subset of this port's connectors that are connected &quot;inside&quot;,
in the context of the port's containing capsule.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Port-insideConnector-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Port-insideConnector-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Port-outsideConnector" name="outsideConnector" type="Connector" isReadOnly="true" isDerived="true" subsettedProperty="Port-connector" association="_packagedElement.24">
        <ownedComment xmi:id="Port-outsideConnector-_ownedComment.0" annotatedElement="Port-outsideConnector">
          <body>The subset of this port's connectors that are connected &quot;outside&quot;,
in the context of capsules that have parts that expose this port.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Port-outsideConnector-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Port-outsideConnector-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Port-toUML" name="toUML" isQuery="true" redefinedOperation="ReplicatedElement-toUML">
        <ownedComment xmi:id="Port-toUML-_ownedComment.0" annotatedElement="Port-toUML">
          <body>Obtains the underlying UML representation of this port.</body>
        </ownedComment>
        <ownedParameter xmi:id="Port-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="Port-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="Port-toUML-_ownedParameter.0">
            <body>The UML port</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Port"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Port-allRedefinitions" name="allRedefinitions" isQuery="true" redefinedOperation="NamedElement-allRedefinitions">
        <ownedComment xmi:id="Port-allRedefinitions-_ownedComment.0" annotatedElement="Port-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="Port-allRedefinitions-_ownedParameter.0" type="Port-Stream3C3F20extends20Port3E" direction="return" effect="read">
          <ownedComment xmi:id="Port-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="Port-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="Port-_3F20extends20Port" name="? extends Port" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="Port-Stream3C3F20extends20Port3E" name="Stream&lt;? extends Port>" visibility="private">
        <templateBinding xmi:id="Port-Stream3C3F20extends20Port3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="Port-Stream3C3F20extends20Port3E-_templateBinding.0-_parameterSubstitution.0" actual="Port-_3F20extends20Port" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.21" visibility="private" memberEnd="Port-redefinedPort _packagedElement.21-redefiningPort">
      <ownedEnd xmi:id="_packagedElement.21-redefiningPort" name="redefiningPort" type="Port" isReadOnly="true" isDerived="true" subsettedProperty="_packagedElement.2-redefiningElement" association="_packagedElement.21">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.21-redefiningPort-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.21-redefiningPort-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.22" visibility="private" memberEnd="Port-type _packagedElement.22-_ownedEnd.0">
      <ownedEnd xmi:id="_packagedElement.22-_ownedEnd.0" type="Port" association="_packagedElement.22">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.22-_ownedEnd.0-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.22-_ownedEnd.0-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.23" visibility="private" memberEnd="Port-insideConnector _packagedElement.23-inside">
      <ownedEnd xmi:id="_packagedElement.23-inside" name="inside" type="Port" association="_packagedElement.23">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.23-inside-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.23-inside-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.24" visibility="private" memberEnd="Port-outsideConnector _packagedElement.24-outside">
      <ownedEnd xmi:id="_packagedElement.24-outside" name="outside" type="Port" association="_packagedElement.24">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.24-outside-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.24-outside-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.25" visibility="private" memberEnd="Port-partWithPort _packagedElement.25-portOnPart">
      <ownedEnd xmi:id="_packagedElement.25-portOnPart" name="portOnPart" type="Port" association="_packagedElement.25">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.25-portOnPart-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.25-portOnPart-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="PortKind" name="PortKind">
      <ownedComment xmi:id="PortKind-_ownedComment.0" annotatedElement="PortKind">
        <body>A enumeration of the kinds of ports recognized by UML-RT.</body>
      </ownedComment>
      <ownedLiteral xmi:id="PortKind-externalBehavior" name="externalBehavior">
        <ownedComment xmi:id="PortKind-externalBehavior-_ownedComment.0" annotatedElement="PortKind-externalBehavior">
          <body>Indication of a service port that provides behavior.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="PortKind-internalBehavior" name="internalBehavior">
        <ownedComment xmi:id="PortKind-internalBehavior-_ownedComment.0" annotatedElement="PortKind-internalBehavior">
          <body>Indication of an internal behavior port.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="PortKind-relay" name="relay">
        <ownedComment xmi:id="PortKind-relay-_ownedComment.0" annotatedElement="PortKind-relay">
          <body>Indication of a relay port: a service port that delegates behavior.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="PortKind-SAP" name="SAP">
        <ownedComment xmi:id="PortKind-SAP-_ownedComment.0" annotatedElement="PortKind-SAP">
          <body>Indication of a service access port:  an internal port that binds
to a service provider port in another architectural layer.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="PortKind-SPP" name="SPP">
        <ownedComment xmi:id="PortKind-SPP-_ownedComment.0" annotatedElement="PortKind-SPP">
          <body>Indication of a service provider port:  a port that provides
service to ports in other architectural layers.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="PortKind-null" name="null">
        <ownedComment xmi:id="PortKind-null-_ownedComment.0" annotatedElement="PortKind-null">
          <body>Indication of a port that whose configuration is inconsistent
and does not imply a recognized port kind.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="CapsulePart" name="CapsulePart">
      <ownedComment xmi:id="CapsulePart-_ownedComment.0" annotatedElement="CapsulePart">
        <body>A representation of the UML-RT concept of a &lt;em>Capsule Part&lt;/em> in the
structural decomposition of a capsule.</body>
      </ownedComment>
      <generalization xmi:id="CapsulePart-_generalization.0" general="ReplicatedElement"/>
      <ownedAttribute xmi:id="CapsulePart-kind" name="kind" type="CapsulePartKind" isDerived="true">
        <ownedComment xmi:id="CapsulePart-kind-_ownedComment.0" annotatedElement="CapsulePart-kind">
          <body>The kind of capsule-part.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="CapsulePart-isOptional" name="isOptional" isDerived="true">
        <ownedComment xmi:id="CapsulePart-isOptional-_ownedComment.0" annotatedElement="CapsulePart-isOptional">
          <body>Whether the capsule-part is optional.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="CapsulePart-redefinedPart" name="redefinedPart" type="CapsulePart" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinedElement" association="_packagedElement.28">
        <ownedComment xmi:id="CapsulePart-redefinedPart-_ownedComment.0" annotatedElement="CapsulePart-redefinedPart">
          <body>The inherited part that this part redefines, if any.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="CapsulePart-redefinedPart-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="CapsulePart-capsule" name="capsule" type="Capsule" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.17">
        <ownedComment xmi:id="CapsulePart-capsule-_ownedComment.0" annotatedElement="CapsulePart-capsule">
          <body>The capsule that contains this part (not its type).</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="CapsulePart-capsule-_lowerValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="CapsulePart-type" name="type" type="Capsule" isDerived="true" association="_packagedElement.29">
        <ownedComment xmi:id="CapsulePart-type-_ownedComment.0" annotatedElement="CapsulePart-type">
          <body>The capsule that is the type of this part (not its containing capsule).</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="CapsulePart-type-_lowerValue" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="CapsulePart-getConnectorsOf" name="getConnectorsOf" isQuery="true">
        <ownedComment xmi:id="CapsulePart-getConnectorsOf-_ownedComment.0" annotatedElement="CapsulePart-getConnectorsOf">
          <body>Queries the &quot;outside&quot; connectors of a given port exposed by this part.</body>
        </ownedComment>
        <ownedParameter xmi:id="CapsulePart-getConnectorsOf-port" name="port" type="Port" effect="read">
          <ownedComment xmi:id="CapsulePart-getConnectorsOf-port-_ownedComment.0" annotatedElement="CapsulePart-getConnectorsOf-port">
            <body>A port that this part exposes.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="CapsulePart-getConnectorsOf-_ownedParameter.1" type="Connector" direction="return" effect="read">
          <ownedComment xmi:id="CapsulePart-getConnectorsOf-_ownedParameter.1-_ownedComment.0" annotatedElement="CapsulePart-getConnectorsOf-_ownedParameter.1">
            <body>That port's connectors for this part.</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="CapsulePart-getConnectorsOf-_ownedParameter.1-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="CapsulePart-getConnectorsOf-_ownedParameter.1-_upperValue" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="CapsulePart-getConnectorsOfPorts" name="getConnectorsOfPorts" isQuery="true">
        <ownedComment xmi:id="CapsulePart-getConnectorsOfPorts-_ownedComment.0" annotatedElement="CapsulePart-getConnectorsOfPorts">
          <body>Queries all of the &quot;outside&quot; connectors of ports that this
part exposes, that connect this part.</body>
        </ownedComment>
        <ownedParameter xmi:id="CapsulePart-getConnectorsOfPorts-_ownedParameter.0" type="Connector" direction="return" effect="read">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="CapsulePart-getConnectorsOfPorts-_ownedParameter.0-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="CapsulePart-getConnectorsOfPorts-_ownedParameter.0-_upperValue" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="CapsulePart-allRedefinitions" name="allRedefinitions" isQuery="true" redefinedOperation="NamedElement-allRedefinitions">
        <ownedComment xmi:id="CapsulePart-allRedefinitions-_ownedComment.0" annotatedElement="CapsulePart-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="CapsulePart-allRedefinitions-_ownedParameter.0" type="CapsulePart-Stream3C3F20extends20CapsulePart3E" direction="return" effect="read">
          <ownedComment xmi:id="CapsulePart-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="CapsulePart-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="CapsulePart-_3F20extends20CapsulePart" name="? extends CapsulePart" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="CapsulePart-Stream3C3F20extends20CapsulePart3E" name="Stream&lt;? extends CapsulePart>" visibility="private">
        <templateBinding xmi:id="CapsulePart-Stream3C3F20extends20CapsulePart3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="CapsulePart-Stream3C3F20extends20CapsulePart3E-_templateBinding.0-_parameterSubstitution.0" actual="CapsulePart-_3F20extends20CapsulePart" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.28" visibility="private" memberEnd="CapsulePart-redefinedPart _packagedElement.28-redefiningPart">
      <ownedEnd xmi:id="_packagedElement.28-redefiningPart" name="redefiningPart" type="CapsulePart" isReadOnly="true" isDerived="true" subsettedProperty="_packagedElement.2-redefiningElement" association="_packagedElement.28">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.28-redefiningPart-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.28-redefiningPart-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.29" visibility="private" memberEnd="CapsulePart-type _packagedElement.29-_ownedEnd.0">
      <ownedEnd xmi:id="_packagedElement.29-_ownedEnd.0" type="CapsulePart" association="_packagedElement.29">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.29-_ownedEnd.0-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.29-_ownedEnd.0-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="CapsulePartKind" name="CapsulePartKind">
      <ownedComment xmi:id="CapsulePartKind-_ownedComment.0" annotatedElement="CapsulePartKind">
        <body>An enumeration of the kinds of capsule parts recognized by UML-RT.</body>
      </ownedComment>
      <ownedLiteral xmi:id="CapsulePartKind-fixed" name="fixed">
        <ownedComment xmi:id="CapsulePartKind-fixed-_ownedComment.0" annotatedElement="CapsulePartKind-fixed">
          <body>Indication that a capsule-part has fixed replication with composition semantics.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="CapsulePartKind-optional" name="optional">
        <ownedComment xmi:id="CapsulePartKind-optional-_ownedComment.0" annotatedElement="CapsulePartKind-optional">
          <body>Indication that a capsule-part has optional replication with composition semantics.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="CapsulePartKind-plug-in" name="plug-in">
        <ownedComment xmi:id="CapsulePartKind-plug-in-_ownedComment.0" annotatedElement="CapsulePartKind-plug-in">
          <body>Indication that a capsule-part has optional replication with shared aggregation semantics.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="CapsulePartKind-null" name="null">
        <ownedComment xmi:id="CapsulePartKind-null-_ownedComment.0" annotatedElement="CapsulePartKind-null">
          <body>Indication that the replication and aggregation specified for a capsule-part
are inconsistent an do not imply any recognized capsule-part kind.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Connector" name="Connector">
      <ownedComment xmi:id="Connector-_ownedComment.0" annotatedElement="Connector">
        <body>A representation of the UML-RT concept of a &lt;em>Connector&lt;/em> in the
structural decomposition of capsules.</body>
      </ownedComment>
      <generalization xmi:id="Connector-_generalization.0" general="NamedElement"/>
      <ownedAttribute xmi:id="Connector-redefinedConnector" name="redefinedConnector" type="Connector" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinedElement" association="_packagedElement.32">
        <ownedComment xmi:id="Connector-redefinedConnector-_ownedComment.0" annotatedElement="Connector-redefinedConnector">
          <body>The inherited connector that this connector redefines, if any.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Connector-redefinedConnector-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Connector-capsule" name="capsule" type="Capsule" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.18">
        <ownedComment xmi:id="Connector-capsule-_ownedComment.0" annotatedElement="Connector-capsule">
          <body>The capsule that contains this connector.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Connector-capsule-_lowerValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Connector-source" name="source" type="Port" isDerived="true" association="_packagedElement.33">
        <ownedComment xmi:id="Connector-source-_ownedComment.0" annotatedElement="Connector-source">
          <body>The source port of this connector, which for delegation connectors
is conventionally the service port.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Connector-sourcePartWithPort" name="sourcePartWithPort" type="CapsulePart" isDerived="true" association="_packagedElement.34">
        <ownedComment xmi:id="Connector-sourcePartWithPort-_ownedComment.0" annotatedElement="Connector-sourcePartWithPort">
          <body>If the source port is a port on a capsule-part, the source
capsule-part of the connector</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Connector-sourcePartWithPort-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Connector-sourceReplicationFactor" name="sourceReplicationFactor" isDerived="true">
        <ownedComment xmi:id="Connector-sourceReplicationFactor-_ownedComment.0" annotatedElement="Connector-sourceReplicationFactor">
          <body>The multiplicity of the source end of this connector.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Connector-target" name="target" type="Port" isDerived="true" association="_packagedElement.35">
        <ownedComment xmi:id="Connector-target-_ownedComment.0" annotatedElement="Connector-target">
          <body>The target port of this connector, which for delegation connectors
is conventionally an internal behavior port of the capsule or a
service port of some capsule-part.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Connector-targetPartWithPort" name="targetPartWithPort" type="CapsulePart" isDerived="true" association="_packagedElement.36">
        <ownedComment xmi:id="Connector-targetPartWithPort-_ownedComment.0" annotatedElement="Connector-targetPartWithPort">
          <body>If the target port is a port on a capsule-part, the target
capsule-part of the connector</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Connector-targetPartWithPort-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Connector-targetReplicationFactor" name="targetReplicationFactor" isDerived="true">
        <ownedComment xmi:id="Connector-targetReplicationFactor-_ownedComment.0" annotatedElement="Connector-targetReplicationFactor">
          <body>The multiplicity of the target end of this connector.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#UnlimitedNatural"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Connector-toUML" name="toUML" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="Connector-toUML-_ownedComment.0" annotatedElement="Connector-toUML">
          <body>Obtains the underlying UML representation of this connector.</body>
        </ownedComment>
        <ownedParameter xmi:id="Connector-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="Connector-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="Connector-toUML-_ownedParameter.0">
            <body>The UML connector.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Connector"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Connector-allRedefinitions" name="allRedefinitions" isQuery="true" redefinedOperation="NamedElement-allRedefinitions">
        <ownedComment xmi:id="Connector-allRedefinitions-_ownedComment.0" annotatedElement="Connector-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="Connector-allRedefinitions-_ownedParameter.0" type="Connector-Stream3C3F20extends20Connector3E" direction="return" effect="read">
          <ownedComment xmi:id="Connector-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="Connector-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="Connector-_3F20extends20Connector" name="? extends Connector" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="Connector-Stream3C3F20extends20Connector3E" name="Stream&lt;? extends Connector>" visibility="private">
        <templateBinding xmi:id="Connector-Stream3C3F20extends20Connector3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="Connector-Stream3C3F20extends20Connector3E-_templateBinding.0-_parameterSubstitution.0" actual="Connector-_3F20extends20Connector" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.32" visibility="private" memberEnd="Connector-redefinedConnector _packagedElement.32-redefiningConnector">
      <ownedEnd xmi:id="_packagedElement.32-redefiningConnector" name="redefiningConnector" type="Connector" isReadOnly="true" isDerived="true" subsettedProperty="_packagedElement.2-redefiningElement" association="_packagedElement.32">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.32-redefiningConnector-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.32-redefiningConnector-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.33" visibility="private" memberEnd="Connector-source _packagedElement.33-sourceOf">
      <ownedEnd xmi:id="_packagedElement.33-sourceOf" name="sourceOf" type="Connector" association="_packagedElement.33">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.33-sourceOf-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.33-sourceOf-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.34" visibility="private" memberEnd="Connector-sourcePartWithPort _packagedElement.34-sourceOf">
      <ownedEnd xmi:id="_packagedElement.34-sourceOf" name="sourceOf" type="Connector" association="_packagedElement.34">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.34-sourceOf-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.34-sourceOf-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.35" visibility="private" memberEnd="Connector-target _packagedElement.35-targetOf">
      <ownedEnd xmi:id="_packagedElement.35-targetOf" name="targetOf" type="Connector" association="_packagedElement.35">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.35-targetOf-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.35-targetOf-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.36" visibility="private" memberEnd="Connector-targetPartWithPort _packagedElement.36-targetOf">
      <ownedEnd xmi:id="_packagedElement.36-targetOf" name="targetOf" type="Connector" association="_packagedElement.36">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.36-targetOf-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.36-targetOf-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Protocol" name="Protocol">
      <ownedComment xmi:id="Protocol-_ownedComment.0" annotatedElement="Protocol">
        <body>A representation of the UML-RT concept of &lt;em>Protocol&lt;/em>.</body>
      </ownedComment>
      <generalization xmi:id="Protocol-_generalization.0" general="Classifier"/>
      <ownedAttribute xmi:id="Protocol-package" name="package" type="Package" isReadOnly="true" isDerived="true" association="_packagedElement.11">
        <ownedComment xmi:id="Protocol-package-_ownedComment.0" annotatedElement="Protocol-package">
          <body>The package namespace containing this protocol.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Protocol-superProtocol" name="superProtocol" type="Protocol" isDerived="true" subsettedProperty="Classifier-general" association="_packagedElement.38">
        <ownedComment xmi:id="Protocol-superProtocol-_ownedComment.0" annotatedElement="Protocol-superProtocol">
          <body>The protocol, if any, that is the supertype of this protocol.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Protocol-superProtocol-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Protocol-subProtocol" name="subProtocol" type="Protocol" isReadOnly="true" isDerived="true" subsettedProperty="Classifier-specific" association="_packagedElement.38">
        <ownedComment xmi:id="Protocol-subProtocol-_ownedComment.0" annotatedElement="Protocol-subProtocol">
          <body>The known direct subtypes of this protocol.  Note that this may
not be complete if some subtypes are in resource that are not
currently loaded in this resource set.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Protocol-subProtocol-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Protocol-subProtocol-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Protocol-message" name="message" type="ProtocolMessage" isReadOnly="true" aggregation="composite" isDerived="true" isDerivedUnion="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.39">
        <ownedComment xmi:id="Protocol-message-_ownedComment.0" annotatedElement="Protocol-message">
          <body>The protocol messages defined, inherited, or redefined by this protocol,
but not those that are redefined to exclude an inherited message.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Protocol-message-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Protocol-message-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Protocol-inMessage" name="inMessage" type="ProtocolMessage" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="Protocol-message" association="_packagedElement.40">
        <ownedComment xmi:id="Protocol-inMessage-_ownedComment.0" annotatedElement="Protocol-inMessage">
          <body>The subset of protocol messages are that are incoming messages.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Protocol-inMessage-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Protocol-inMessage-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Protocol-outMessage" name="outMessage" type="ProtocolMessage" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="Protocol-message" association="_packagedElement.41">
        <ownedComment xmi:id="Protocol-outMessage-_ownedComment.0" annotatedElement="Protocol-outMessage">
          <body>The subset of protocol messages are that are outgoing messages.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Protocol-outMessage-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Protocol-outMessage-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Protocol-inOutMessage" name="inOutMessage" type="ProtocolMessage" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="Protocol-message" association="_packagedElement.42">
        <ownedComment xmi:id="Protocol-inOutMessage-_ownedComment.0" annotatedElement="Protocol-inOutMessage">
          <body>The subset of protocol messages are that are symmetric messages.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Protocol-inOutMessage-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Protocol-inOutMessage-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Protocol-isConjugate" name="isConjugate" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="Protocol-isConjugate-_ownedComment.0" annotatedElement="Protocol-isConjugate">
          <body>Whether this protocol is the conjugate view of the modelled protocol.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Protocol-conjugate" name="conjugate" type="Protocol" isReadOnly="true" isDerived="true" association="_packagedElement.43">
        <ownedComment xmi:id="Protocol-conjugate-_ownedComment.0" annotatedElement="Protocol-conjugate">
          <body>The conjugate view of this protocol, in which all incoming messages
are outgoing messages of the base protocol and vice versa.  In the
case that this protocol is a conjugate, its conjugate is the base protocol.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Protocol-hierarchy" name="hierarchy" type="Protocol-Stream3CProtocol3E" isReadOnly="true" aggregation="composite" isDerived="true">
        <ownedComment xmi:id="Protocol-hierarchy-_ownedComment.0" annotatedElement="Protocol-hierarchy">
          <body>A stream over the type hierarchy root at this protocol, including
this protocol first and then all of its specializations in breadth-first
order.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedOperation xmi:id="Protocol-toUML" name="toUML" isQuery="true" redefinedOperation="Classifier-toUML">
        <ownedComment xmi:id="Protocol-toUML-_ownedComment.0" annotatedElement="Protocol-toUML">
          <body>Obtains the underlying UML representation of this protocol.</body>
        </ownedComment>
        <ownedParameter xmi:id="Protocol-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="Protocol-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="Protocol-toUML-_ownedParameter.0">
            <body>The UML collaboration</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Collaboration"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Protocol-getAnyReceiveEvent" name="getAnyReceiveEvent" isQuery="true">
        <ownedComment xmi:id="Protocol-getAnyReceiveEvent-_ownedComment.0" annotatedElement="Protocol-getAnyReceiveEvent">
          <body>Obtains the UML event that represents the reception of any protocol message.</body>
        </ownedComment>
        <ownedParameter xmi:id="Protocol-getAnyReceiveEvent-_ownedParameter.0" direction="return" effect="read">
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#AnyReceiveEvent"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Protocol-getAncestry" name="getAncestry" isQuery="true" redefinedOperation="Classifier-getAncestry">
        <ownedComment xmi:id="Protocol-getAncestry-_ownedComment.0" annotatedElement="Protocol-getAncestry">
          <body>Obtains the supertype chain of this protocol, from itself
to the root type.</body>
        </ownedComment>
        <ownedParameter xmi:id="Protocol-getAncestry-_ownedParameter.0" name="" type="Protocol" direction="return" effect="read">
          <ownedComment xmi:id="Protocol-getAncestry-_ownedParameter.0-_ownedComment.0" annotatedElement="Protocol-getAncestry-_ownedParameter.0">
            <body>This protocol, its supertype (if any), that protocol's supertype,
etc. up to the root protocol type</body>
          </ownedComment>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Protocol-getAncestry-_ownedParameter.0-_upperValue" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Protocol-getMessages" name="getMessages" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="Protocol-getMessages-_ownedComment.0" annotatedElement="Protocol-getMessages">
          <body>Queries the subset of this protocol's messages of the given direction kind.</body>
        </ownedComment>
        <ownedParameter xmi:id="Protocol-getMessages-kind" name="kind" effect="read">
          <ownedComment xmi:id="Protocol-getMessages-kind-_ownedComment.0" annotatedElement="Protocol-getMessages-kind">
            <body>The protocol message direction kind</body>
          </ownedComment>
          <type xmi:type="uml:Enumeration" href="../../org.eclipse.papyrusrt.umlrt.profile/umlProfile/uml-rt.profile.uml#_UXMMIGDdEeOesvHnEWH_sQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-getMessages-_ownedParameter.1" type="ProtocolMessage" direction="return" effect="read">
          <ownedComment xmi:id="Protocol-getMessages-_ownedParameter.1-_ownedComment.0" annotatedElement="Protocol-getMessages-_ownedParameter.1">
            <body>The subset of messages of the given kind</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Protocol-getMessages-_ownedParameter.1-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Protocol-getMessages-_ownedParameter.1-_upperValue" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Protocol-getMessages.1" name="getMessages" isQuery="true">
        <ownedComment xmi:id="Protocol-getMessages.1-_ownedComment.0" annotatedElement="Protocol-getMessages.1">
          <body>Queries the subset of this protocol's messages of
the given direction kind, optionally also retrieving
excluded protocol messages.</body>
        </ownedComment>
        <ownedParameter xmi:id="Protocol-getMessages.1-kind" name="kind" effect="read">
          <ownedComment xmi:id="Protocol-getMessages.1-kind-_ownedComment.0" annotatedElement="Protocol-getMessages.1-kind">
            <body>The protocol message direction kind</body>
          </ownedComment>
          <type xmi:type="uml:Enumeration" href="../../org.eclipse.papyrusrt.umlrt.profile/umlProfile/uml-rt.profile.uml#_UXMMIGDdEeOesvHnEWH_sQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-getMessages.1-withExclusions" name="withExclusions">
          <ownedComment xmi:id="Protocol-getMessages.1-withExclusions-_ownedComment.0" annotatedElement="Protocol-getMessages.1-withExclusions">
            <body>Whether to retrieve also excluded protocol messages</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-getMessages.1-_ownedParameter.2" type="ProtocolMessage" direction="return" effect="read">
          <ownedComment xmi:id="Protocol-getMessages.1-_ownedParameter.2-_ownedComment.0" annotatedElement="Protocol-getMessages.1-_ownedParameter.2">
            <body>The subset of messages of the given kind</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Protocol-getMessages.1-_ownedParameter.2-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Protocol-getMessages.1-_ownedParameter.2-_upperValue" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Protocol-getMessages.2" name="getMessages" isQuery="true">
        <ownedComment xmi:id="Protocol-getMessages.2-_ownedComment.0" annotatedElement="Protocol-getMessages.2">
          <body>Queries the this protocol's messages, optionally also retrieving
excluded protocol messages.</body>
        </ownedComment>
        <ownedParameter xmi:id="Protocol-getMessages.2-withExclusions" name="withExclusions">
          <ownedComment xmi:id="Protocol-getMessages.2-withExclusions-_ownedComment.0" annotatedElement="Protocol-getMessages.2-withExclusions">
            <body>Whether to retrieve also excluded protocol messages</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-getMessages.2-_ownedParameter.1" type="ProtocolMessage" direction="return" effect="read">
          <ownedComment xmi:id="Protocol-getMessages.2-_ownedParameter.1-_ownedComment.0" annotatedElement="Protocol-getMessages.2-_ownedParameter.1">
            <body>The protocol messages</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Protocol-getMessages.2-_ownedParameter.1-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Protocol-getMessages.2-_ownedParameter.1-_upperValue" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Protocol-createMessage" name="createMessage">
        <ownedComment xmi:id="Protocol-createMessage-_ownedComment.0" annotatedElement="Protocol-createMessage">
          <body>Creates a new protocol message.</body>
        </ownedComment>
        <ownedParameter xmi:id="Protocol-createMessage-kind" name="kind" effect="read">
          <ownedComment xmi:id="Protocol-createMessage-kind-_ownedComment.0" annotatedElement="Protocol-createMessage-kind">
            <body>The direction kind for the message</body>
          </ownedComment>
          <type xmi:type="uml:Enumeration" href="../../org.eclipse.papyrusrt.umlrt.profile/umlProfile/uml-rt.profile.uml#_UXMMIGDdEeOesvHnEWH_sQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-createMessage-name" name="name" effect="read">
          <ownedComment xmi:id="Protocol-createMessage-name-_ownedComment.0" annotatedElement="Protocol-createMessage-name">
            <body>The name of the message</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-createMessage-_ownedParameter.2" type="ProtocolMessage" direction="return">
          <ownedComment xmi:id="Protocol-createMessage-_ownedParameter.2-_ownedComment.0" annotatedElement="Protocol-createMessage-_ownedParameter.2">
            <body>The new protocol message</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Protocol-createMessage.1" name="createMessage">
        <ownedComment xmi:id="Protocol-createMessage.1-_ownedComment.0" annotatedElement="Protocol-createMessage.1">
          <body>Creates a new protocol message with a single parameter
named &quot;data&quot;.</body>
        </ownedComment>
        <ownedParameter xmi:id="Protocol-createMessage.1-kind" name="kind" effect="read">
          <ownedComment xmi:id="Protocol-createMessage.1-kind-_ownedComment.0" annotatedElement="Protocol-createMessage.1-kind">
            <body>The direction kind for the message</body>
          </ownedComment>
          <type xmi:type="uml:Enumeration" href="../../org.eclipse.papyrusrt.umlrt.profile/umlProfile/uml-rt.profile.uml#_UXMMIGDdEeOesvHnEWH_sQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-createMessage.1-name" name="name" effect="read">
          <ownedComment xmi:id="Protocol-createMessage.1-name-_ownedComment.0" annotatedElement="Protocol-createMessage.1-name">
            <body>The name of the message</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-createMessage.1-dataType" name="dataType" effect="read">
          <ownedComment xmi:id="Protocol-createMessage.1-dataType-_ownedComment.0" annotatedElement="Protocol-createMessage.1-dataType">
            <body>The type of the data parameter, as a UML type.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Type"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-createMessage.1-_ownedParameter.3" type="ProtocolMessage" direction="return">
          <ownedComment xmi:id="Protocol-createMessage.1-_ownedParameter.3-_ownedComment.0" annotatedElement="Protocol-createMessage.1-_ownedParameter.3">
            <body>The new protocol message</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Protocol-createMessage.2" name="createMessage">
        <ownedComment xmi:id="Protocol-createMessage.2-_ownedComment.0" annotatedElement="Protocol-createMessage.2">
          <body>Creates a new protocol message with any number of parameters.</body>
        </ownedComment>
        <ownedParameter xmi:id="Protocol-createMessage.2-kind" name="kind" effect="read">
          <ownedComment xmi:id="Protocol-createMessage.2-kind-_ownedComment.0" annotatedElement="Protocol-createMessage.2-kind">
            <body>The direction kind for the message</body>
          </ownedComment>
          <type xmi:type="uml:Enumeration" href="../../org.eclipse.papyrusrt.umlrt.profile/umlProfile/uml-rt.profile.uml#_UXMMIGDdEeOesvHnEWH_sQ"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-createMessage.2-name" name="name" effect="read">
          <ownedComment xmi:id="Protocol-createMessage.2-name-_ownedComment.0" annotatedElement="Protocol-createMessage.2-name">
            <body>The name of the message</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-createMessage.2-parameterName" name="parameterName" effect="read">
          <ownedComment xmi:id="Protocol-createMessage.2-parameterName-_ownedComment.0" annotatedElement="Protocol-createMessage.2-parameterName">
            <body>The names of the protocol message parameters</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Protocol-createMessage.2-parameterName-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Protocol-createMessage.2-parameterName-_upperValue" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-createMessage.2-parameterType" name="parameterType" effect="read">
          <ownedComment xmi:id="Protocol-createMessage.2-parameterType-_ownedComment.0" annotatedElement="Protocol-createMessage.2-parameterType">
            <body>The parameter types, as UML types, which must correspond one-for-one
to the parameter names</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Type"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Protocol-createMessage.2-parameterType-_lowerValue"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Protocol-createMessage.2-parameterType-_upperValue" value="*"/>
        </ownedParameter>
        <ownedParameter xmi:id="Protocol-createMessage.2-_ownedParameter.4" type="ProtocolMessage" direction="return">
          <ownedComment xmi:id="Protocol-createMessage.2-_ownedParameter.4-_ownedComment.0" annotatedElement="Protocol-createMessage.2-_ownedParameter.4">
            <body>The new protocol message</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="Protocol-Stream3CProtocol3E" name="Stream&lt;Protocol>" visibility="private">
        <templateBinding xmi:id="Protocol-Stream3CProtocol3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="Protocol-Stream3CProtocol3E-_templateBinding.0-_parameterSubstitution.0" actual="Protocol" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.38" visibility="private" memberEnd="Protocol-superProtocol Protocol-subProtocol"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.39" visibility="private" memberEnd="Protocol-message ProtocolMessage-protocol"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.40" visibility="private" memberEnd="Protocol-inMessage _packagedElement.40-inProtocol">
      <ownedEnd xmi:id="_packagedElement.40-inProtocol" name="inProtocol" type="Protocol" association="_packagedElement.40"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.41" visibility="private" memberEnd="Protocol-outMessage _packagedElement.41-outProtocol">
      <ownedEnd xmi:id="_packagedElement.41-outProtocol" name="outProtocol" type="Protocol" association="_packagedElement.41"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.42" visibility="private" memberEnd="Protocol-inOutMessage _packagedElement.42-inOutProtocol">
      <ownedEnd xmi:id="_packagedElement.42-inOutProtocol" name="inOutProtocol" type="Protocol" association="_packagedElement.42"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.43" visibility="private" memberEnd="Protocol-conjugate _packagedElement.43-base">
      <ownedEnd xmi:id="_packagedElement.43-base" name="base" type="Protocol" isReadOnly="true" isDerived="true" association="_packagedElement.43"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="ProtocolMessage" name="ProtocolMessage">
      <ownedComment xmi:id="ProtocolMessage-_ownedComment.0" annotatedElement="ProtocolMessage">
        <body>A representation of the UML-RT concept of &lt;em>Protocol Message&lt;/em>.</body>
      </ownedComment>
      <generalization xmi:id="ProtocolMessage-_generalization.0" general="NamedElement"/>
      <ownedAttribute xmi:id="ProtocolMessage-kind" name="kind" isDerived="true">
        <ownedComment xmi:id="ProtocolMessage-kind-_ownedComment.0" annotatedElement="ProtocolMessage-kind">
          <body>The protocol message's direction kind.</body>
        </ownedComment>
        <type xmi:type="uml:Enumeration" href="../../org.eclipse.papyrusrt.umlrt.profile/umlProfile/uml-rt.profile.uml#_UXMMIGDdEeOesvHnEWH_sQ"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="ProtocolMessage-redefinedMessage" name="redefinedMessage" type="ProtocolMessage" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinedElement" association="_packagedElement.45">
        <ownedComment xmi:id="ProtocolMessage-redefinedMessage-_ownedComment.0" annotatedElement="ProtocolMessage-redefinedMessage">
          <body>The inherited message that this protocol message redefines, if any.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="ProtocolMessage-redefinedMessage-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="ProtocolMessage-protocol" name="protocol" type="Protocol" isReadOnly="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.39">
        <ownedComment xmi:id="ProtocolMessage-protocol-_ownedComment.0" annotatedElement="ProtocolMessage-protocol">
          <body>The protocol that defines, inherits, redefines, or excludes this message.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="ProtocolMessage-parameter" name="parameter" isReadOnly="true" aggregation="shared" isDerived="true" association="_packagedElement.46">
        <ownedComment xmi:id="ProtocolMessage-parameter-_ownedComment.0" annotatedElement="ProtocolMessage-parameter">
          <body>The parameters of the protocol message.</body>
        </ownedComment>
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Parameter"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="ProtocolMessage-parameter-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="ProtocolMessage-parameter-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="ProtocolMessage-isConjugate" name="isConjugate" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="ProtocolMessage-isConjugate-_ownedComment.0" annotatedElement="ProtocolMessage-isConjugate">
          <body>Whether the protocol message is a conjugate view of the base
protocol's corresponding message.  All of the protocol messages
in the conjugate view of a protocol are the conjugate views of
its messages.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="ProtocolMessage-conjugate" name="conjugate" type="ProtocolMessage" isReadOnly="true" isDerived="true" association="_packagedElement.47"/>
      <ownedOperation xmi:id="ProtocolMessage-toUML" name="toUML" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="ProtocolMessage-toUML-_ownedComment.0" annotatedElement="ProtocolMessage-toUML">
          <body>Obtains the underlying UML representation of this protocol message.</body>
        </ownedComment>
        <ownedParameter xmi:id="ProtocolMessage-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="ProtocolMessage-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="ProtocolMessage-toUML-_ownedParameter.0">
            <body>The UML operation.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Operation"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="ProtocolMessage-toReceiveEvent" name="toReceiveEvent" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="ProtocolMessage-toReceiveEvent-_ownedComment.0" annotatedElement="ProtocolMessage-toReceiveEvent">
          <body>Obtains the UML event signalling receipt of this message,
useful for specification of transition triggers in state machines.</body>
        </ownedComment>
        <ownedParameter xmi:id="ProtocolMessage-toReceiveEvent-_ownedParameter.0" direction="return" effect="read">
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#CallEvent"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="ProtocolMessage-createParameter" name="createParameter">
        <ownedComment xmi:id="ProtocolMessage-createParameter-_ownedComment.0" annotatedElement="ProtocolMessage-createParameter">
          <body>Creates a new parameter in the protocol message.</body>
        </ownedComment>
        <ownedParameter xmi:id="ProtocolMessage-createParameter-name" name="name" effect="read">
          <ownedComment xmi:id="ProtocolMessage-createParameter-name-_ownedComment.0" annotatedElement="ProtocolMessage-createParameter-name">
            <body>The parameter name</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="ProtocolMessage-createParameter-type" name="type" effect="read">
          <ownedComment xmi:id="ProtocolMessage-createParameter-type-_ownedComment.0" annotatedElement="ProtocolMessage-createParameter-type">
            <body>The parameter type, as a UML type</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Type"/>
        </ownedParameter>
        <ownedParameter xmi:id="ProtocolMessage-createParameter-_ownedParameter.2" direction="return">
          <ownedComment xmi:id="ProtocolMessage-createParameter-_ownedParameter.2-_ownedComment.0" annotatedElement="ProtocolMessage-createParameter-_ownedParameter.2">
            <body>The new parameter</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Parameter"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="ProtocolMessage-allRedefinitions" name="allRedefinitions" isQuery="true" redefinedOperation="NamedElement-allRedefinitions">
        <ownedComment xmi:id="ProtocolMessage-allRedefinitions-_ownedComment.0" annotatedElement="ProtocolMessage-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="ProtocolMessage-allRedefinitions-_ownedParameter.0" type="ProtocolMessage-Stream3C3F20extends20ProtocolMessage3E" direction="return" effect="read">
          <ownedComment xmi:id="ProtocolMessage-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="ProtocolMessage-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="ProtocolMessage-_3F20extends20ProtocolMessage" name="? extends ProtocolMessage" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="ProtocolMessage-Stream3C3F20extends20ProtocolMessage3E" name="Stream&lt;? extends ProtocolMessage>" visibility="private">
        <templateBinding xmi:id="ProtocolMessage-Stream3C3F20extends20ProtocolMessage3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="ProtocolMessage-Stream3C3F20extends20ProtocolMessage3E-_templateBinding.0-_parameterSubstitution.0" actual="ProtocolMessage-_3F20extends20ProtocolMessage" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.45" visibility="private" memberEnd="ProtocolMessage-redefinedMessage _packagedElement.45-redefiningMessage">
      <ownedEnd xmi:id="_packagedElement.45-redefiningMessage" name="redefiningMessage" type="ProtocolMessage" isReadOnly="true" isDerived="true" subsettedProperty="_packagedElement.2-redefiningElement" association="_packagedElement.45">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.45-redefiningMessage-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.45-redefiningMessage-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.46" visibility="private" memberEnd="ProtocolMessage-parameter _packagedElement.46-message">
      <ownedEnd xmi:id="_packagedElement.46-message" name="message" type="ProtocolMessage" association="_packagedElement.46"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.47" visibility="private" memberEnd="ProtocolMessage-conjugate _packagedElement.47-base">
      <ownedEnd xmi:id="_packagedElement.47-base" name="base" type="ProtocolMessage" isReadOnly="true" isDerived="true" association="_packagedElement.47"/>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="List" name="List">
      <ownedComment xmi:id="List-_ownedComment.0" annotatedElement="List">
        <body>A representation of the Java List data type.</body>
      </ownedComment>
      <ownedTemplateSignature xmi:type="uml:RedefinableTemplateSignature" xmi:id="List-_ownedTemplateSignature" parameter="List-_ownedTemplateSignature-_ownedParameter.0">
        <ownedParameter xmi:type="uml:ClassifierTemplateParameter" xmi:id="List-_ownedTemplateSignature-_ownedParameter.0" parameteredElement="List-_ownedTemplateSignature-_ownedParameter.0-_ownedParameteredElement">
          <ownedParameteredElement xmi:type="uml:Class" xmi:id="List-_ownedTemplateSignature-_ownedParameter.0-_ownedParameteredElement" name="E" templateParameter="List-_ownedTemplateSignature-_ownedParameter.0"/>
        </ownedParameter>
      </ownedTemplateSignature>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="Stream" name="Stream">
      <ownedComment xmi:id="Stream-_ownedComment.0" annotatedElement="Stream">
        <body>A representation of the Java Stream data type.</body>
      </ownedComment>
      <ownedTemplateSignature xmi:type="uml:RedefinableTemplateSignature" xmi:id="Stream-_ownedTemplateSignature" parameter="Stream-_ownedTemplateSignature-_ownedParameter.0">
        <ownedParameter xmi:type="uml:ClassifierTemplateParameter" xmi:id="Stream-_ownedTemplateSignature-_ownedParameter.0" parameteredElement="Stream-_ownedTemplateSignature-_ownedParameter.0-_ownedParameteredElement">
          <ownedParameteredElement xmi:type="uml:Class" xmi:id="Stream-_ownedTemplateSignature-_ownedParameter.0-_ownedParameteredElement" name="E" templateParameter="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </ownedParameter>
      </ownedTemplateSignature>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="StateMachine" name="StateMachine">
      <ownedComment xmi:id="StateMachine-_ownedComment.0" annotatedElement="StateMachine">
        <body>A representation of the UML-RT concept of &lt;em>State Machine&lt;/em>, which
defines the behavior of a capsule or a passive class.</body>
      </ownedComment>
      <generalization xmi:id="StateMachine-_generalization.0" general="NamedElement"/>
      <ownedAttribute xmi:id="StateMachine-capsule" name="capsule" type="Capsule" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.51">
        <ownedComment xmi:id="StateMachine-capsule-_ownedComment.0" annotatedElement="StateMachine-capsule">
          <body>The capsule for which I define the behavior.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="StateMachine-capsule-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="StateMachine-capsule-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="StateMachine-vertex" name="vertex" type="Vertex" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.61">
        <ownedComment xmi:id="StateMachine-vertex-_ownedComment.0" annotatedElement="StateMachine-vertex">
          <body>The vertices at the top level of the state machine.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="StateMachine-vertex-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="StateMachine-vertex-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="StateMachine-transition" name="transition" type="Transition" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.62">
        <ownedComment xmi:id="StateMachine-transition-_ownedComment.0" annotatedElement="StateMachine-transition">
          <body>The transitions directly contained in the state machine.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="StateMachine-transition-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="StateMachine-transition-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="StateMachine-redefinedStateMachine" name="redefinedStateMachine" type="StateMachine" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinedElement" association="_packagedElement.72">
        <ownedComment xmi:id="StateMachine-redefinedStateMachine-_ownedComment.0" annotatedElement="StateMachine-redefinedStateMachine">
          <body>The state machine of the superclass capsule that this state machine redefines.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="StateMachine-redefinedStateMachine-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="StateMachine-redefinedStateMachine-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="StateMachine-toUML" name="toUML" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="StateMachine-toUML-_ownedComment.0" annotatedElement="StateMachine-toUML">
          <body>Obtains the underlying UML representation of this state machine.</body>
        </ownedComment>
        <ownedParameter xmi:id="StateMachine-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="StateMachine-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="StateMachine-toUML-_ownedParameter.0">
            <body>The UML state machine.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#StateMachine"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="StateMachine-createState" name="createState">
        <ownedComment xmi:id="StateMachine-createState-_ownedComment.0" annotatedElement="StateMachine-createState">
          <body>Creates a new state in this state machine.</body>
        </ownedComment>
        <ownedParameter xmi:id="StateMachine-createState-name" name="name" effect="read">
          <ownedComment xmi:id="StateMachine-createState-name-_ownedComment.0" annotatedElement="StateMachine-createState-name">
            <body>The name of the state to create.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="StateMachine-createState-_ownedParameter.1" type="State" direction="return">
          <ownedComment xmi:id="StateMachine-createState-_ownedParameter.1-_ownedComment.0" annotatedElement="StateMachine-createState-_ownedParameter.1">
            <body>The new state</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="StateMachine-createPseudostate" name="createPseudostate">
        <ownedComment xmi:id="StateMachine-createPseudostate-_ownedComment.0" annotatedElement="StateMachine-createPseudostate">
          <body>Creates a new pseudostate in this state machine.</body>
        </ownedComment>
        <ownedParameter xmi:id="StateMachine-createPseudostate-kind" name="kind" type="UMLRTPseudostateKind" effect="read">
          <ownedComment xmi:id="StateMachine-createPseudostate-kind-_ownedComment.0" annotatedElement="StateMachine-createPseudostate-kind">
            <body>The kind of pseudostate to create</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="StateMachine-createPseudostate-_ownedParameter.1" type="Pseudostate" direction="return">
          <ownedComment xmi:id="StateMachine-createPseudostate-_ownedParameter.1-_ownedComment.0" annotatedElement="StateMachine-createPseudostate-_ownedParameter.1">
            <body>The new pseudostate</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="StateMachine-ensureDefaultContents" name="ensureDefaultContents">
        <ownedComment xmi:id="StateMachine-ensureDefaultContents-_ownedComment.0" annotatedElement="StateMachine-ensureDefaultContents">
          <body>Ensures that the state machine has the default vertices
and transitions appropriate to its current context, whether
that be as the behavior of a base capsule definition or
a subclass of a capsule that is redefining/extending the
behavior of its superclass.</body>
        </ownedComment>
      </ownedOperation>
      <ownedOperation xmi:id="StateMachine-toRegion" name="toRegion" isQuery="true">
        <ownedComment xmi:id="StateMachine-toRegion-_ownedComment.0" annotatedElement="StateMachine-toRegion">
          <body>Obtains the singular UML region of this state machine.</body>
        </ownedComment>
        <ownedParameter xmi:id="StateMachine-toRegion-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="StateMachine-toRegion-_ownedParameter.0-_ownedComment.0" annotatedElement="StateMachine-toRegion-_ownedParameter.0">
            <body>The UML region</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Region"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="StateMachine-allRedefinitions" name="allRedefinitions" isQuery="true" redefinedOperation="NamedElement-allRedefinitions">
        <ownedComment xmi:id="StateMachine-allRedefinitions-_ownedComment.0" annotatedElement="StateMachine-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="StateMachine-allRedefinitions-_ownedParameter.0" type="StateMachine-Stream3C3F20extends20StateMachine3E" direction="return" effect="read">
          <ownedComment xmi:id="StateMachine-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="StateMachine-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="StateMachine-_3F20extends20StateMachine" name="? extends StateMachine" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="StateMachine-Stream3C3F20extends20StateMachine3E" name="Stream&lt;? extends StateMachine>" visibility="private">
        <templateBinding xmi:id="StateMachine-Stream3C3F20extends20StateMachine3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="StateMachine-Stream3C3F20extends20StateMachine3E-_templateBinding.0-_parameterSubstitution.0" actual="StateMachine-_3F20extends20StateMachine" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.51" visibility="private" memberEnd="Capsule-stateMachine StateMachine-capsule"/>
    <packagedElement xmi:type="uml:Class" xmi:id="Vertex" name="Vertex" isAbstract="true">
      <ownedComment xmi:id="Vertex-_ownedComment.0" annotatedElement="Vertex">
        <body>A representation of the UML-RT concept of &lt;em>Vertex&lt;/em> in a state machine.</body>
      </ownedComment>
      <generalization xmi:id="Vertex-_generalization.0" general="NamedElement"/>
      <ownedAttribute xmi:id="Vertex-stateMachine" name="stateMachine" type="StateMachine" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.61">
        <ownedComment xmi:id="Vertex-stateMachine-_ownedComment.0" annotatedElement="Vertex-stateMachine">
          <body>The state machine that directly contains the vertex, if it is not
in a composite state.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Vertex-stateMachine-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Vertex-stateMachine-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Vertex-state" name="state" type="State" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.63">
        <ownedComment xmi:id="Vertex-state-_ownedComment.0" annotatedElement="Vertex-state">
          <body>The composite state that contains the vertex, in which case
it does not have a &lt;code>stateMachine&lt;/code>.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Vertex-state-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Vertex-state-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Vertex-incoming" name="incoming" type="Transition" isReadOnly="true" isDerived="true" association="_packagedElement.83">
        <ownedComment xmi:id="Vertex-incoming-_ownedComment.0" annotatedElement="Vertex-incoming">
          <body>The transitions incoming to this vertex.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Vertex-incoming-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Vertex-incoming-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Vertex-outgoing" name="outgoing" type="Transition" isReadOnly="true" isDerived="true" association="_packagedElement.84">
        <ownedComment xmi:id="Vertex-outgoing-_ownedComment.0" annotatedElement="Vertex-outgoing">
          <body>The transitions outgoing from this vertex.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Vertex-outgoing-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Vertex-outgoing-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Vertex-redefinedVertex" name="redefinedVertex" type="Vertex" isReadOnly="true" isDerived="true" isDerivedUnion="true" subsettedProperty="NamedElement-redefinedElement" association="_packagedElement.73">
        <ownedComment xmi:id="Vertex-redefinedVertex-_ownedComment.0" annotatedElement="Vertex-redefinedVertex">
          <body>The vertex in the redefined state machine or composite state
that this vertex redefines.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Vertex-redefinedVertex-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Vertex-redefinedVertex-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Vertex-toUML" name="toUML" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="Vertex-toUML-_ownedComment.0" annotatedElement="Vertex-toUML">
          <body>Obtains the underlying UML representation of this vertex.</body>
        </ownedComment>
        <ownedParameter xmi:id="Vertex-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="Vertex-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="Vertex-toUML-_ownedParameter.0">
            <body>The UML vertex.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Vertex"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Vertex-containingStateMachine" name="containingStateMachine" isQuery="true">
        <ownedComment xmi:id="Vertex-containingStateMachine-_ownedComment.0" annotatedElement="Vertex-containingStateMachine">
          <body>Queries the state machine that contains this vertex.</body>
        </ownedComment>
        <ownedParameter xmi:id="Vertex-containingStateMachine-_ownedParameter.0" type="StateMachine" direction="return" effect="read">
          <ownedComment xmi:id="Vertex-containingStateMachine-_ownedParameter.0-_ownedComment.0" annotatedElement="Vertex-containingStateMachine-_ownedParameter.0">
            <body>The containing state machine</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Vertex-createTransitionTo" name="createTransitionTo">
        <ownedComment xmi:id="Vertex-createTransitionTo-_ownedComment.0" annotatedElement="Vertex-createTransitionTo">
          <body>Creates a new transition from this vertex to the &lt;code>target&lt;/code>.</body>
        </ownedComment>
        <ownedParameter xmi:id="Vertex-createTransitionTo-target" name="target" type="Vertex" effect="read">
          <ownedComment xmi:id="Vertex-createTransitionTo-target-_ownedComment.0" annotatedElement="Vertex-createTransitionTo-target">
            <body>The target vertex of the transition to create.</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="Vertex-createTransitionTo-_ownedParameter.1" type="Transition" direction="return">
          <ownedComment xmi:id="Vertex-createTransitionTo-_ownedParameter.1-_ownedComment.0" annotatedElement="Vertex-createTransitionTo-_ownedParameter.1">
            <body>The new transition</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="State" name="State">
      <ownedComment xmi:id="State-_ownedComment.0" annotatedElement="State">
        <body>A representation of the UML-RT concept of &lt;em>State&lt;/em> in a state machine.</body>
      </ownedComment>
      <generalization xmi:id="State-_generalization.0" general="Vertex"/>
      <ownedAttribute xmi:id="State-subvertex" name="subvertex" type="Vertex" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.63">
        <ownedComment xmi:id="State-subvertex-_ownedComment.0" annotatedElement="State-subvertex">
          <body>The sub-vertices of the composite state.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="State-subvertex-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="State-subvertex-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="State-subtransition" name="subtransition" type="Transition" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.64">
        <ownedComment xmi:id="State-subtransition-_ownedComment.0" annotatedElement="State-subtransition">
          <body>The transitions nested within a composite state.  These are not the
transitions &lt;code>incoming&lt;/code> to and &lt;code>outgoing&lt;/code>
from the state.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="State-subtransition-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="State-subtransition-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="State-connectionPoint" name="connectionPoint" type="ConnectionPoint" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.69">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="State-connectionPoint-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="State-connectionPoint-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="State-entryPoint" name="entryPoint" type="ConnectionPoint" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="State-connectionPoint" association="_packagedElement.70">
        <ownedComment xmi:id="State-entryPoint-_ownedComment.0" annotatedElement="State-entryPoint">
          <body>The entry points of the composite state.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="State-entryPoint-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="State-entryPoint-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="State-exitPoint" name="exitPoint" type="ConnectionPoint" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="State-connectionPoint" association="_packagedElement.71">
        <ownedComment xmi:id="State-exitPoint-_ownedComment.0" annotatedElement="State-exitPoint">
          <body>The exit points of the composite state.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="State-exitPoint-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="State-exitPoint-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="State-redefinedState" name="redefinedState" type="State" isReadOnly="true" isDerived="true" subsettedProperty="Vertex-redefinedVertex" association="_packagedElement.74">
        <ownedComment xmi:id="State-redefinedState-_ownedComment.0" annotatedElement="State-redefinedState">
          <body>The state in the redefined state machine or composite state
that this state redefines.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="State-redefinedState-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="State-redefinedState-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="State-isComposite" name="isComposite" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="State-isSimple" name="isSimple" isReadOnly="true" isDerived="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="State-entry" name="entry" type="OpaqueBehavior" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.90">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="State-entry-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="State-entry-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="State-exit" name="exit" type="OpaqueBehavior" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.91">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="State-exit-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="State-exit-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="State-toUML" name="toUML" isQuery="true" redefinedOperation="Vertex-toUML">
        <ownedComment xmi:id="State-toUML-_ownedComment.0" annotatedElement="State-toUML">
          <body>Obtains the underlying UML representation of this state.</body>
        </ownedComment>
        <ownedParameter xmi:id="State-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="State-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="State-toUML-_ownedParameter.0">
            <body>The UML state.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#State"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="State-createSubstate" name="createSubstate">
        <ownedComment xmi:id="State-createSubstate-_ownedComment.0" annotatedElement="State-createSubstate">
          <body>Creates a new sub-state in this composite state.</body>
        </ownedComment>
        <ownedParameter xmi:id="State-createSubstate-name" name="name" effect="read">
          <ownedComment xmi:id="State-createSubstate-name-_ownedComment.0" annotatedElement="State-createSubstate-name">
            <body>The name of the state to create.</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="State-createSubstate-_ownedParameter.1" type="State" direction="return">
          <ownedComment xmi:id="State-createSubstate-_ownedParameter.1-_ownedComment.0" annotatedElement="State-createSubstate-_ownedParameter.1">
            <body>The new state</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="State-createSubpseudostate" name="createSubpseudostate">
        <ownedComment xmi:id="State-createSubpseudostate-_ownedComment.0" annotatedElement="State-createSubpseudostate">
          <body>Creates a new sub-pseudostate in this composite state.</body>
        </ownedComment>
        <ownedParameter xmi:id="State-createSubpseudostate-kind" name="kind" type="UMLRTPseudostateKind" effect="read">
          <ownedComment xmi:id="State-createSubpseudostate-kind-_ownedComment.0" annotatedElement="State-createSubpseudostate-kind">
            <body>The kind of pseudostate to create</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="State-createSubpseudostate-_ownedParameter.1" type="Pseudostate" direction="return">
          <ownedComment xmi:id="State-createSubpseudostate-_ownedParameter.1-_ownedComment.0" annotatedElement="State-createSubpseudostate-_ownedParameter.1">
            <body>The new pseudostate</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="State-createConnectionPoint" name="createConnectionPoint">
        <ownedComment xmi:id="State-createConnectionPoint-_ownedComment.0" annotatedElement="State-createConnectionPoint">
          <body>Creates a new entry point to or exit point from this composite state.</body>
        </ownedComment>
        <ownedParameter xmi:id="State-createConnectionPoint-kind" name="kind" type="UMLRTConnectionPointKind" effect="read">
          <ownedComment xmi:id="State-createConnectionPoint-kind-_ownedComment.0" annotatedElement="State-createConnectionPoint-kind">
            <body>The kind of connection point to create</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="State-createConnectionPoint-_ownedParameter.1" type="ConnectionPoint" direction="return">
          <ownedComment xmi:id="State-createConnectionPoint-_ownedParameter.1-_ownedComment.0" annotatedElement="State-createConnectionPoint-_ownedParameter.1">
            <body>The new connection point</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="State-toRegion" name="toRegion" isQuery="true">
        <ownedComment xmi:id="State-toRegion-_ownedComment.0" annotatedElement="State-toRegion">
          <body>Obtains the singular UML region of this state, if it is composite.</body>
        </ownedComment>
        <ownedParameter xmi:id="State-toRegion-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="State-toRegion-_ownedParameter.0-_ownedComment.0" annotatedElement="State-toRegion-_ownedParameter.0">
            <body>The UML region</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Region"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="State-toRegion-_ownedParameter.0-_lowerValue"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="State-createEntry" name="createEntry">
        <ownedComment xmi:id="State-createEntry-_ownedComment.0" annotatedElement="State-createEntry">
          <body>Creates a new entry behavior for this state, if it does not already have one.</body>
        </ownedComment>
        <ownedParameter xmi:id="State-createEntry-language" name="language" effect="read">
          <ownedComment xmi:id="State-createEntry-language-_ownedComment.0" annotatedElement="State-createEntry-language">
            <body>An optional language for the entry behavior</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="State-createEntry-language-_lowerValue"/>
        </ownedParameter>
        <ownedParameter xmi:id="State-createEntry-body" name="body" effect="read">
          <ownedComment xmi:id="State-createEntry-body-_ownedComment.0" annotatedElement="State-createEntry-body">
            <body>The entry code snippet</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="State-createEntry-_ownedParameter.2" type="OpaqueBehavior" direction="return">
          <ownedComment xmi:id="State-createEntry-_ownedParameter.2-_ownedComment.0" annotatedElement="State-createEntry-_ownedParameter.2">
            <body>The new entry behavior</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="State-createExit" name="createExit">
        <ownedComment xmi:id="State-createExit-_ownedComment.0" annotatedElement="State-createExit">
          <body>Creates a new exit behavior for this state, if it does not already have one.</body>
        </ownedComment>
        <ownedParameter xmi:id="State-createExit-language" name="language" effect="read">
          <ownedComment xmi:id="State-createExit-language-_ownedComment.0" annotatedElement="State-createExit-language">
            <body>An optional language for the exit behavior</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="State-createExit-language-_lowerValue"/>
        </ownedParameter>
        <ownedParameter xmi:id="State-createExit-body" name="body" effect="read">
          <ownedComment xmi:id="State-createExit-body-_ownedComment.0" annotatedElement="State-createExit-body">
            <body>The exit code snippet</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="State-createExit-_ownedParameter.2" type="OpaqueBehavior" direction="return">
          <ownedComment xmi:id="State-createExit-_ownedParameter.2-_ownedComment.0" annotatedElement="State-createExit-_ownedParameter.2">
            <body>The new exit behavior</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="State-allRedefinitions" name="allRedefinitions" isQuery="true" redefinedOperation="NamedElement-allRedefinitions">
        <ownedComment xmi:id="State-allRedefinitions-_ownedComment.0" annotatedElement="State-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="State-allRedefinitions-_ownedParameter.0" type="State-Stream3C3F20extends20State3E" direction="return" effect="read">
          <ownedComment xmi:id="State-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="State-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="State-_3F20extends20State" name="? extends State" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="State-Stream3C3F20extends20State3E" name="Stream&lt;? extends State>" visibility="private">
        <templateBinding xmi:id="State-Stream3C3F20extends20State3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="State-Stream3C3F20extends20State3E-_templateBinding.0-_parameterSubstitution.0" actual="State-_3F20extends20State" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Pseudostate" name="Pseudostate">
      <ownedComment xmi:id="Pseudostate-_ownedComment.0" annotatedElement="Pseudostate">
        <body>A representation of the UML-RT concept of &lt;em>Pseudostate&lt;/em> in a state machine.</body>
      </ownedComment>
      <generalization xmi:id="Pseudostate-_generalization.0" general="Vertex"/>
      <ownedAttribute xmi:id="Pseudostate-kind" name="kind" type="UMLRTPseudostateKind" isDerived="true">
        <ownedComment xmi:id="Pseudostate-kind-_ownedComment.0" annotatedElement="Pseudostate-kind">
          <body>The kind of pseudostate.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Pseudostate-redefinedPseudostate" name="redefinedPseudostate" type="Pseudostate" isReadOnly="true" isDerived="true" subsettedProperty="Vertex-redefinedVertex" association="_packagedElement.82">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Pseudostate-redefinedPseudostate-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Pseudostate-redefinedPseudostate-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Pseudostate-toUML" name="toUML" isQuery="true" redefinedOperation="Vertex-toUML">
        <ownedComment xmi:id="Pseudostate-toUML-_ownedComment.0" annotatedElement="Pseudostate-toUML">
          <body>Obtains the underlying UML representation of this pseudostate.</body>
        </ownedComment>
        <ownedParameter xmi:id="Pseudostate-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="Pseudostate-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="Pseudostate-toUML-_ownedParameter.0">
            <body>The UML pseudostate.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Pseudostate"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Pseudostate-allRedefinitions" name="allRedefinitions" isQuery="true" redefinedOperation="NamedElement-allRedefinitions">
        <ownedComment xmi:id="Pseudostate-allRedefinitions-_ownedComment.0" annotatedElement="Pseudostate-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="Pseudostate-allRedefinitions-_ownedParameter.0" type="Pseudostate-Stream3C3F20extends20Pseudostate3E" direction="return" effect="read">
          <ownedComment xmi:id="Pseudostate-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="Pseudostate-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="Pseudostate-_3F20extends20Pseudostate" name="? extends Pseudostate" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="Pseudostate-Stream3C3F20extends20Pseudostate3E" name="Stream&lt;? extends Pseudostate>" visibility="private">
        <templateBinding xmi:id="Pseudostate-Stream3C3F20extends20Pseudostate3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="Pseudostate-Stream3C3F20extends20Pseudostate3E-_templateBinding.0-_parameterSubstitution.0" actual="Pseudostate-_3F20extends20Pseudostate" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="UMLRTPseudostateKind" name="UMLRTPseudostateKind">
      <ownedComment xmi:id="UMLRTPseudostateKind-_ownedComment.0" annotatedElement="UMLRTPseudostateKind">
        <body>An enumeration of the kinds of pseudo-state vertices recognized
by UML-RT.</body>
      </ownedComment>
      <ownedLiteral xmi:id="UMLRTPseudostateKind-initial" name="initial">
        <ownedComment xmi:id="UMLRTPseudostateKind-initial-_ownedComment.0" annotatedElement="UMLRTPseudostateKind-initial">
          <body>Indicates an initial pseudostate.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="UMLRTPseudostateKind-history" name="history">
        <ownedComment xmi:id="UMLRTPseudostateKind-history-_ownedComment.0" annotatedElement="UMLRTPseudostateKind-history">
          <body>Indicates an history pseudostate.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="UMLRTPseudostateKind-choice" name="choice">
        <ownedComment xmi:id="UMLRTPseudostateKind-choice-_ownedComment.0" annotatedElement="UMLRTPseudostateKind-choice">
          <body>Indicates a choice pseudostate.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="UMLRTPseudostateKind-junction" name="junction">
        <ownedComment xmi:id="UMLRTPseudostateKind-junction-_ownedComment.0" annotatedElement="UMLRTPseudostateKind-junction">
          <body>Indicates a junction pseudostate.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="ConnectionPoint" name="ConnectionPoint">
      <generalization xmi:id="ConnectionPoint-_generalization.0" general="Vertex"/>
      <ownedAttribute xmi:id="ConnectionPoint-kind" name="kind" type="UMLRTConnectionPointKind" isDerived="true">
        <ownedComment xmi:id="ConnectionPoint-kind-_ownedComment.0" annotatedElement="ConnectionPoint-kind">
          <body>The kind of connection point.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="ConnectionPoint-state" name="state" type="State" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.69">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="ConnectionPoint-state-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="ConnectionPoint-state-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="ConnectionPoint-redefinedConnectionPoint" name="redefinedConnectionPoint" type="ConnectionPoint" isReadOnly="true" isDerived="true" subsettedProperty="Vertex-redefinedVertex" association="_packagedElement.85">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="ConnectionPoint-redefinedConnectionPoint-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="ConnectionPoint-redefinedConnectionPoint-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="ConnectionPoint-toUML" name="toUML" isQuery="true" redefinedOperation="Vertex-toUML">
        <ownedComment xmi:id="ConnectionPoint-toUML-_ownedComment.0" annotatedElement="ConnectionPoint-toUML">
          <body>Obtains the underlying UML representation of this connection point.</body>
        </ownedComment>
        <ownedParameter xmi:id="ConnectionPoint-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="ConnectionPoint-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="ConnectionPoint-toUML-_ownedParameter.0">
            <body>The UML pseudostate.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Pseudostate"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="ConnectionPoint-allRedefinitions" name="allRedefinitions" isQuery="true" redefinedOperation="NamedElement-allRedefinitions">
        <ownedComment xmi:id="ConnectionPoint-allRedefinitions-_ownedComment.0" annotatedElement="ConnectionPoint-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="ConnectionPoint-allRedefinitions-_ownedParameter.0" type="ConnectionPoint-Stream3C3F20extends20ConnectionPoint3E" direction="return" effect="read">
          <ownedComment xmi:id="ConnectionPoint-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="ConnectionPoint-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="ConnectionPoint-_3F20extends20ConnectionPoint" name="? extends ConnectionPoint" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="ConnectionPoint-Stream3C3F20extends20ConnectionPoint3E" name="Stream&lt;? extends ConnectionPoint>" visibility="private">
        <templateBinding xmi:id="ConnectionPoint-Stream3C3F20extends20ConnectionPoint3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="ConnectionPoint-Stream3C3F20extends20ConnectionPoint3E-_templateBinding.0-_parameterSubstitution.0" actual="ConnectionPoint-_3F20extends20ConnectionPoint" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="UMLRTConnectionPointKind" name="UMLRTConnectionPointKind">
      <ownedComment xmi:id="UMLRTConnectionPointKind-_ownedComment.0" annotatedElement="UMLRTConnectionPointKind">
        <body>An enumeration of the kinds of connection-point vertices recognized
by UML-RT.</body>
      </ownedComment>
      <ownedLiteral xmi:id="UMLRTConnectionPointKind-entry" name="entry">
        <ownedComment xmi:id="UMLRTConnectionPointKind-entry-_ownedComment.0" annotatedElement="UMLRTConnectionPointKind-entry">
          <body>Indicates an entry point.</body>
        </ownedComment>
      </ownedLiteral>
      <ownedLiteral xmi:id="UMLRTConnectionPointKind-exit" name="exit">
        <ownedComment xmi:id="UMLRTConnectionPointKind-exit-_ownedComment.0" annotatedElement="UMLRTConnectionPointKind-exit">
          <body>Indicates an exit point.</body>
        </ownedComment>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Transition" name="Transition">
      <ownedComment xmi:id="Transition-_ownedComment.0" annotatedElement="Transition">
        <body>A representation of the UML-RT concept of &lt;em>Transition&lt;/em> in a state machine.</body>
      </ownedComment>
      <generalization xmi:id="Transition-_generalization.0" general="NamedElement"/>
      <ownedAttribute xmi:id="Transition-stateMachine" name="stateMachine" type="StateMachine" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.62">
        <ownedComment xmi:id="Transition-stateMachine-_ownedComment.0" annotatedElement="Transition-stateMachine">
          <body>The state machine that directly contains a transition, if it is not in
a composite state.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Transition-stateMachine-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Transition-stateMachine-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Transition-state" name="state" type="State" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.64">
        <ownedComment xmi:id="Transition-state-_ownedComment.0" annotatedElement="Transition-state">
          <body>The composite state that contains the transition, in which case
its &lt;code>stateMachine&lt;/code> is empty.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Transition-state-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Transition-state-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Transition-source" name="source" type="Vertex" isDerived="true" association="_packagedElement.77">
        <ownedComment xmi:id="Transition-source-_ownedComment.0" annotatedElement="Transition-source">
          <body>The source vertex of this transition.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Transition-target" name="target" type="Vertex" isDerived="true" association="_packagedElement.78">
        <ownedComment xmi:id="Transition-target-_ownedComment.0" annotatedElement="Transition-target">
          <body>The target vertex of this transition.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Transition-trigger" name="trigger" type="Trigger" isReadOnly="true" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.65">
        <ownedComment xmi:id="Transition-trigger-_ownedComment.0" annotatedElement="Transition-trigger">
          <body>The trigger event specification of the transition.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Transition-trigger-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Transition-trigger-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Transition-guard" name="guard" type="Guard" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.66">
        <ownedComment xmi:id="Transition-guard-_ownedComment.0" annotatedElement="Transition-guard">
          <body>The guard condition of the transition.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Transition-guard-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Transition-guard-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Transition-redefinedTransition" name="redefinedTransition" type="Transition" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinedElement" association="_packagedElement.75">
        <ownedComment xmi:id="Transition-redefinedTransition-_ownedComment.0" annotatedElement="Transition-redefinedTransition">
          <body>The transition in the redefined state machine or composite state
that this transition redefines.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Transition-redefinedTransition-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Transition-redefinedTransition-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Transition-kind" name="kind" isDerived="true">
        <ownedComment xmi:id="Transition-kind-_ownedComment.0" annotatedElement="Transition-kind">
          <body>The kind of transition.</body>
        </ownedComment>
        <type xmi:type="uml:Enumeration" href="pathmap://UML_METAMODELS/UML.metamodel.uml#TransitionKind"/>
        <defaultValue xmi:type="uml:InstanceValue" xmi:id="Transition-kind-_defaultValue">
          <instance xmi:type="uml:EnumerationLiteral" href="pathmap://UML_METAMODELS/UML.metamodel.uml#TransitionKind-external"/>
        </defaultValue>
      </ownedAttribute>
      <ownedAttribute xmi:id="Transition-isInternal" name="isInternal" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="Transition-isInternal-_ownedComment.0" annotatedElement="Transition-isInternal">
          <body>As a special case of the &lt;code>kind&lt;/code>, whether the
transition is an internal transition.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Transition-effect" name="effect" type="OpaqueBehavior" aggregation="composite" isDerived="true" subsettedProperty="NamedElement-redefinableElement" association="_packagedElement.89">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Transition-effect-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Transition-effect-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Transition-toUML" name="toUML" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="Transition-toUML-_ownedComment.0" annotatedElement="Transition-toUML">
          <body>Obtains the underlying UML representation of this transition.</body>
        </ownedComment>
        <ownedParameter xmi:id="Transition-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="Transition-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="Transition-toUML-_ownedParameter.0">
            <body>The UML transition.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Transition"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Transition-containingStateMachine" name="containingStateMachine" isQuery="true">
        <ownedComment xmi:id="Transition-containingStateMachine-_ownedComment.0" annotatedElement="Transition-containingStateMachine">
          <body>Queries the state machine that contains this transition.</body>
        </ownedComment>
        <ownedParameter xmi:id="Transition-containingStateMachine-_ownedParameter.0" type="StateMachine" direction="return" effect="read">
          <ownedComment xmi:id="Transition-containingStateMachine-_ownedParameter.0-_ownedComment.0" annotatedElement="Transition-containingStateMachine-_ownedParameter.0">
            <body>The containing state machine</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Transition-createTrigger" name="createTrigger">
        <ownedComment xmi:id="Transition-createTrigger-_ownedComment.0" annotatedElement="Transition-createTrigger">
          <body>Creates a new trigger for this transition.</body>
        </ownedComment>
        <ownedParameter xmi:id="Transition-createTrigger-protocolMessage" name="protocolMessage" type="ProtocolMessage" effect="read">
          <ownedComment xmi:id="Transition-createTrigger-protocolMessage-_ownedComment.0" annotatedElement="Transition-createTrigger-protocolMessage">
            <body>The protocol message that triggers the transition.  It does not
matter whether it is a conjugate view of the message or the
base view.  If omitted, then the trigger uses the &lt;em>AnyReceiveEvent&lt;/em>
of the protocol type of the {@code port}</body>
          </ownedComment>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Transition-createTrigger-protocolMessage-_lowerValue"/>
        </ownedParameter>
        <ownedParameter xmi:id="Transition-createTrigger-port" name="port" type="Port">
          <ownedComment xmi:id="Transition-createTrigger-port-_ownedComment.0" annotatedElement="Transition-createTrigger-port">
            <body>The port on which the triggering message is received</body>
          </ownedComment>
        </ownedParameter>
        <ownedParameter xmi:id="Transition-createTrigger-_ownedParameter.2" type="Trigger" direction="return">
          <ownedComment xmi:id="Transition-createTrigger-_ownedParameter.2-_ownedComment.0" annotatedElement="Transition-createTrigger-_ownedParameter.2">
            <body>The new trigger</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Transition-createGuard" name="createGuard">
        <ownedComment xmi:id="Transition-createGuard-_ownedComment.0" annotatedElement="Transition-createGuard">
          <body>Creates a new guard for this transition, if it does not already have one.</body>
        </ownedComment>
        <ownedParameter xmi:id="Transition-createGuard-language" name="language" effect="read">
          <ownedComment xmi:id="Transition-createGuard-language-_ownedComment.0" annotatedElement="Transition-createGuard-language">
            <body>An optional language for the guard condition</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Transition-createGuard-language-_lowerValue"/>
        </ownedParameter>
        <ownedParameter xmi:id="Transition-createGuard-body" name="body" effect="read">
          <ownedComment xmi:id="Transition-createGuard-body-_ownedComment.0" annotatedElement="Transition-createGuard-body">
            <body>The guard condition expression</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="Transition-createGuard-_ownedParameter.2" type="Guard" direction="return">
          <ownedComment xmi:id="Transition-createGuard-_ownedParameter.2-_ownedComment.0" annotatedElement="Transition-createGuard-_ownedParameter.2">
            <body>The new guard condition</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Transition-createEffect" name="createEffect">
        <ownedComment xmi:id="Transition-createEffect-_ownedComment.0" annotatedElement="Transition-createEffect">
          <body>Creates a new effect for this transition, if it does not already have one.</body>
        </ownedComment>
        <ownedParameter xmi:id="Transition-createEffect-language" name="language" effect="read">
          <ownedComment xmi:id="Transition-createEffect-language-_ownedComment.0" annotatedElement="Transition-createEffect-language">
            <body>An optional language for the effect behavior</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Transition-createEffect-language-_lowerValue"/>
        </ownedParameter>
        <ownedParameter xmi:id="Transition-createEffect-body" name="body" effect="read">
          <ownedComment xmi:id="Transition-createEffect-body-_ownedComment.0" annotatedElement="Transition-createEffect-body">
            <body>The effect code snippet</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="Transition-createEffect-_ownedParameter.2" type="OpaqueBehavior" direction="return">
          <ownedComment xmi:id="Transition-createEffect-_ownedParameter.2-_ownedComment.0" annotatedElement="Transition-createEffect-_ownedParameter.2">
            <body>The new effect behavior</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Transition-allRedefinitions" name="allRedefinitions" isQuery="true" redefinedOperation="NamedElement-allRedefinitions">
        <ownedComment xmi:id="Transition-allRedefinitions-_ownedComment.0" annotatedElement="Transition-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="Transition-allRedefinitions-_ownedParameter.0" type="Transition-Stream3C3F20extends20Transition3E" direction="return" effect="read">
          <ownedComment xmi:id="Transition-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="Transition-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="Transition-_3F20extends20Transition" name="? extends Transition" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="Transition-Stream3C3F20extends20Transition3E" name="Stream&lt;? extends Transition>" visibility="private">
        <templateBinding xmi:id="Transition-Stream3C3F20extends20Transition3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="Transition-Stream3C3F20extends20Transition3E-_templateBinding.0-_parameterSubstitution.0" actual="Transition-_3F20extends20Transition" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Trigger" name="Trigger">
      <ownedComment xmi:id="Trigger-_ownedComment.0" annotatedElement="Trigger">
        <body>A representation of the UML-RT concept of transition &lt;em>Trigger&lt;/em>.</body>
      </ownedComment>
      <generalization xmi:id="Trigger-_generalization.0" general="NamedElement"/>
      <ownedAttribute xmi:id="Trigger-transition" name="transition" type="Transition" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.65">
        <ownedComment xmi:id="Trigger-transition-_ownedComment.0" annotatedElement="Trigger-transition">
          <body>The triggered transition.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Trigger-protocolMessage" name="protocolMessage" type="ProtocolMessage" isDerived="true" association="_packagedElement.79">
        <ownedComment xmi:id="Trigger-protocolMessage-_ownedComment.0" annotatedElement="Trigger-protocolMessage">
          <body>The protocol message that triggers the transition.  This
is always represented as the base view of the message</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Trigger-protocolMessage-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Trigger-port" name="port" type="Port" isDerived="true" association="_packagedElement.80">
        <ownedComment xmi:id="Trigger-port-_ownedComment.0" annotatedElement="Trigger-port">
          <body>The ports on which the triggering protocol message is received.</body>
        </ownedComment>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Trigger-port-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Trigger-guard" name="guard" type="Guard" aggregation="composite" isDerived="true" association="_packagedElement.67">
        <ownedComment xmi:id="Trigger-guard-_ownedComment.0" annotatedElement="Trigger-guard">
          <body>The guard condition of the trigger.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Trigger-guard-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Trigger-guard-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Trigger-redefinedTrigger" name="redefinedTrigger" type="Trigger" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinedElement" association="_packagedElement.76">
        <ownedComment xmi:id="Trigger-redefinedTrigger-_ownedComment.0" annotatedElement="Trigger-redefinedTrigger">
          <body>The trigger in the redefined transition that this trigger redefines.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Trigger-redefinedTrigger-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Trigger-redefinedTrigger-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Trigger-isReceiveAnyMessage" name="isReceiveAnyMessage" isDerived="true">
        <ownedComment xmi:id="Trigger-isReceiveAnyMessage-_ownedComment.0" annotatedElement="Trigger-isReceiveAnyMessage">
          <body>Whether the transition triggers on receipt of any message
on its &lt;code>port&lt;/code>.  In such case, the
&lt;code>protocolMessage&lt;/code> association is empty.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Trigger-toUML" name="toUML" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="Trigger-toUML-_ownedComment.0" annotatedElement="Trigger-toUML">
          <body>Obtains the underlying UML representation of this trigger.</body>
        </ownedComment>
        <ownedParameter xmi:id="Trigger-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="Trigger-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="Trigger-toUML-_ownedParameter.0">
            <body>The UML trigger.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Trigger"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Trigger-createGuard" name="createGuard">
        <ownedComment xmi:id="Trigger-createGuard-_ownedComment.0" annotatedElement="Trigger-createGuard">
          <body>Creates a new guard for this trigger, if it does not already have one.</body>
        </ownedComment>
        <ownedParameter xmi:id="Trigger-createGuard-language" name="language" effect="read">
          <ownedComment xmi:id="Trigger-createGuard-language-_ownedComment.0" annotatedElement="Trigger-createGuard-language">
            <body>An optional language for the guard condition</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Trigger-createGuard-language-_lowerValue"/>
        </ownedParameter>
        <ownedParameter xmi:id="Trigger-createGuard-body" name="body" effect="read">
          <ownedComment xmi:id="Trigger-createGuard-body-_ownedComment.0" annotatedElement="Trigger-createGuard-body">
            <body>The guard condition expression</body>
          </ownedComment>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedParameter>
        <ownedParameter xmi:id="Trigger-createGuard-_ownedParameter.2" type="Guard" direction="return">
          <ownedComment xmi:id="Trigger-createGuard-_ownedParameter.2-_ownedComment.0" annotatedElement="Trigger-createGuard-_ownedParameter.2">
            <body>The new guard condition</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Trigger-getPort" name="getPort" raisedException="IllegalStateException" isQuery="true">
        <ownedComment xmi:id="Trigger-getPort-_ownedComment.0" annotatedElement="Trigger-getPort">
          <body>A convenience for the common case of a trigger that is associated
with only one port, to retrieve that port.  Fails if the trigger has
more than one port.</body>
        </ownedComment>
        <ownedParameter xmi:id="Trigger-getPort-_ownedParameter.0" type="Port" direction="return" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="Trigger-setPort" name="setPort">
        <ownedComment xmi:id="Trigger-setPort-_ownedComment.0" annotatedElement="Trigger-setPort">
          <body>A convenience for the common case of triggering on receipt
of a protocol message from a single port, sets the collection
of ports to contain this &lt;code>port&lt;/code> only.</body>
        </ownedComment>
        <ownedParameter xmi:id="Trigger-setPort-port" name="port" type="Port" effect="read"/>
      </ownedOperation>
      <ownedOperation xmi:id="Trigger-hasMultiplePorts" name="hasMultiplePorts" isQuery="true">
        <ownedComment xmi:id="Trigger-hasMultiplePorts-_ownedComment.0" annotatedElement="Trigger-hasMultiplePorts">
          <body>Queries whether the trigger has multiple ports, in which case
the &lt;code>getPort()&lt;/code> operation is not supported.</body>
        </ownedComment>
        <ownedParameter xmi:id="Trigger-hasMultiplePorts-_ownedParameter.0" direction="return" effect="read">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Trigger-allRedefinitions" name="allRedefinitions" isQuery="true" redefinedOperation="NamedElement-allRedefinitions">
        <ownedComment xmi:id="Trigger-allRedefinitions-_ownedComment.0" annotatedElement="Trigger-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="Trigger-allRedefinitions-_ownedParameter.0" type="Trigger-Stream3C3F20extends20Trigger3E" direction="return" effect="read">
          <ownedComment xmi:id="Trigger-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="Trigger-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:Class" xmi:id="Trigger-_3F20extends20Trigger" name="? extends Trigger" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="Trigger-Stream3C3F20extends20Trigger3E" name="Stream&lt;? extends Trigger>" visibility="private">
        <templateBinding xmi:id="Trigger-Stream3C3F20extends20Trigger3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="Trigger-Stream3C3F20extends20Trigger3E-_templateBinding.0-_parameterSubstitution.0" actual="Trigger-_3F20extends20Trigger" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Guard" name="Guard">
      <ownedComment xmi:id="Guard-_ownedComment.0" annotatedElement="Guard">
        <body>A representation of the UML-RT concept of a &lt;em>Guard&lt;/em> condition.</body>
      </ownedComment>
      <generalization xmi:id="Guard-_generalization.0" general="NamedElement"/>
      <ownedAttribute xmi:id="Guard-bodies" name="bodies" type="Guard-Map3CString20String3E" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="Guard-bodies-_ownedComment.0" annotatedElement="Guard-bodyEntry">
          <body>The guard condition expressions, by language.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="Guard-bodyEntry" name="bodyEntry" visibility="protected" aggregation="composite" isDerived="true" association="_packagedElement.68">
        <ownedComment xmi:id="Guard-bodyEntry-_ownedComment.0" annotatedElement="Guard-bodyEntry">
          <body>The list of language -> body guard condition expression mappings.</body>
        </ownedComment>
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EStringToStringMapEntry"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Guard-bodyEntry-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Guard-bodyEntry-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Guard-transition" name="transition" type="Transition" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.66">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Guard-transition-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Guard-transition-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Guard-trigger" name="trigger" type="Trigger" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.67">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Guard-trigger-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Guard-trigger-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Guard-redefinedGuard" name="redefinedGuard" type="Guard" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinedElement" association="_packagedElement.92">
        <ownedComment xmi:id="Guard-redefinedGuard-_ownedComment.0" annotatedElement="Guard-redefinedGuard">
          <body>The guard of the redefined transition or trigger that this guard redefines.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="Guard-redefinedGuard-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="Guard-redefinedGuard-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="Guard-toUML" name="toUML" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="Guard-toUML-_ownedComment.0" annotatedElement="Guard-toUML">
          <body>Obtains the underlying UML representation of this guard.</body>
        </ownedComment>
        <ownedParameter xmi:id="Guard-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="Guard-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="Guard-toUML-_ownedParameter.0">
            <body>The UML constraint.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Constraint"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="Guard-allRedefinitions" name="allRedefinitions" isQuery="true" redefinedOperation="NamedElement-allRedefinitions">
        <ownedComment xmi:id="Guard-allRedefinitions-_ownedComment.0" annotatedElement="Guard-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="Guard-allRedefinitions-_ownedParameter.0" type="Guard-Stream3C3F20extends20Guard3E" direction="return" effect="read">
          <ownedComment xmi:id="Guard-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="Guard-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="Guard-Map3CString20String3E" name="Map&lt;String, String>" visibility="private">
        <templateBinding xmi:id="Guard-Map3CString20String3E-_templateBinding.0" signature="Map-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="Guard-Map3CString20String3E-_templateBinding.0-_parameterSubstitution.0" formal="Map-_ownedTemplateSignature-_ownedParameter.0">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </parameterSubstitution>
          <parameterSubstitution xmi:id="Guard-Map3CString20String3E-_templateBinding.0-_parameterSubstitution.1" formal="Map-_ownedTemplateSignature-_ownedParameter.1">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </parameterSubstitution>
        </templateBinding>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="Guard-_3F20extends20Guard" name="? extends Guard" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="Guard-Stream3C3F20extends20Guard3E" name="Stream&lt;? extends Guard>" visibility="private">
        <templateBinding xmi:id="Guard-Stream3C3F20extends20Guard3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="Guard-Stream3C3F20extends20Guard3E-_templateBinding.0-_parameterSubstitution.0" actual="Guard-_3F20extends20Guard" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.61" visibility="private" memberEnd="StateMachine-vertex Vertex-stateMachine"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.62" visibility="private" memberEnd="StateMachine-transition Transition-stateMachine"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.63" visibility="private" memberEnd="State-subvertex Vertex-state"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.64" visibility="private" memberEnd="State-subtransition Transition-state"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.65" visibility="private" memberEnd="Transition-trigger Trigger-transition"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.66" visibility="private" memberEnd="Transition-guard Guard-transition"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.67" visibility="private" memberEnd="Trigger-guard Guard-trigger"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.68" visibility="private" memberEnd="Guard-bodyEntry _packagedElement.68-guard">
      <ownedEnd xmi:id="_packagedElement.68-guard" name="guard" type="Guard" association="_packagedElement.68">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.68-guard-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.68-guard-_upperValue" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.69" visibility="private" memberEnd="State-connectionPoint ConnectionPoint-state"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.70" visibility="private" memberEnd="State-entryPoint _packagedElement.70-entryTo">
      <ownedEnd xmi:id="_packagedElement.70-entryTo" name="entryTo" type="State" isReadOnly="true" isDerived="true" subsettedProperty="ConnectionPoint-state" association="_packagedElement.70">
        <ownedComment xmi:id="_packagedElement.70-entryTo-_ownedComment.0" annotatedElement="_packagedElement.70-entryTo">
          <body>The composite state to which this is an entry point, if it is not an exit point.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.70-entryTo-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.70-entryTo-_upperValue" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.71" visibility="private" memberEnd="State-exitPoint _packagedElement.71-exitFrom">
      <ownedEnd xmi:id="_packagedElement.71-exitFrom" name="exitFrom" type="State" isReadOnly="true" isDerived="true" subsettedProperty="ConnectionPoint-state" association="_packagedElement.71">
        <ownedComment xmi:id="_packagedElement.71-exitFrom-_ownedComment.0" annotatedElement="_packagedElement.71-exitFrom">
          <body>The state from which this is an exit point, if it is not an entry point.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.71-exitFrom-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.71-exitFrom-_upperValue" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.72" visibility="private" memberEnd="StateMachine-redefinedStateMachine _packagedElement.72-redefiningStateMachine">
      <ownedEnd xmi:id="_packagedElement.72-redefiningStateMachine" name="redefiningStateMachine" type="StateMachine" subsettedProperty="_packagedElement.2-redefiningElement" association="_packagedElement.72">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.72-redefiningStateMachine-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.72-redefiningStateMachine-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.73" visibility="private" memberEnd="Vertex-redefinedVertex _packagedElement.73-redefiningVertex">
      <ownedEnd xmi:id="_packagedElement.73-redefiningVertex" name="redefiningVertex" type="Vertex" subsettedProperty="_packagedElement.2-redefiningElement" association="_packagedElement.73">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.73-redefiningVertex-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.73-redefiningVertex-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.74" visibility="private" memberEnd="State-redefinedState _packagedElement.74-redefiningState">
      <ownedEnd xmi:id="_packagedElement.74-redefiningState" name="redefiningState" type="State" subsettedProperty="_packagedElement.73-redefiningVertex" association="_packagedElement.74">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.74-redefiningState-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.74-redefiningState-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.75" visibility="private" memberEnd="Transition-redefinedTransition _packagedElement.75-redefiningTransition">
      <ownedEnd xmi:id="_packagedElement.75-redefiningTransition" name="redefiningTransition" type="Transition" subsettedProperty="_packagedElement.2-redefiningElement" association="_packagedElement.75">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.75-redefiningTransition-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.75-redefiningTransition-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.76" visibility="private" memberEnd="Trigger-redefinedTrigger _packagedElement.76-redefiningTrigger">
      <ownedEnd xmi:id="_packagedElement.76-redefiningTrigger" name="redefiningTrigger" type="Trigger" subsettedProperty="_packagedElement.2-redefiningElement" association="_packagedElement.76">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.76-redefiningTrigger-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.76-redefiningTrigger-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.77" visibility="private" memberEnd="Transition-source _packagedElement.77-outgoing">
      <ownedEnd xmi:id="_packagedElement.77-outgoing" name="outgoing" type="Transition" isReadOnly="true" isDerived="true" association="_packagedElement.77">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.77-outgoing-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.77-outgoing-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.78" visibility="private" memberEnd="Transition-target _packagedElement.78-incoming">
      <ownedEnd xmi:id="_packagedElement.78-incoming" name="incoming" type="Transition" isReadOnly="true" isDerived="true" association="_packagedElement.78">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.78-incoming-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.78-incoming-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.79" visibility="private" memberEnd="Trigger-protocolMessage _packagedElement.79-trigger">
      <ownedEnd xmi:id="_packagedElement.79-trigger" name="trigger" type="Trigger" association="_packagedElement.79">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.79-trigger-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.79-trigger-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.80" visibility="private" memberEnd="Trigger-port _packagedElement.80-trigger">
      <ownedEnd xmi:id="_packagedElement.80-trigger" name="trigger" type="Trigger" association="_packagedElement.80">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.80-trigger-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.80-trigger-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="Map" name="Map">
      <ownedComment xmi:id="Map-_ownedComment.0" annotatedElement="Map">
        <body>A representation of the Java Map data type.</body>
      </ownedComment>
      <ownedTemplateSignature xmi:type="uml:RedefinableTemplateSignature" xmi:id="Map-_ownedTemplateSignature" parameter="Map-_ownedTemplateSignature-_ownedParameter.0 Map-_ownedTemplateSignature-_ownedParameter.1">
        <ownedParameter xmi:type="uml:ClassifierTemplateParameter" xmi:id="Map-_ownedTemplateSignature-_ownedParameter.0" parameteredElement="Map-_ownedTemplateSignature-_ownedParameter.0-_ownedParameteredElement">
          <ownedParameteredElement xmi:type="uml:Class" xmi:id="Map-_ownedTemplateSignature-_ownedParameter.0-_ownedParameteredElement" name="K" templateParameter="Map-_ownedTemplateSignature-_ownedParameter.0"/>
        </ownedParameter>
        <ownedParameter xmi:type="uml:ClassifierTemplateParameter" xmi:id="Map-_ownedTemplateSignature-_ownedParameter.1" parameteredElement="Map-_ownedTemplateSignature-_ownedParameter.1-_ownedParameteredElement">
          <ownedParameteredElement xmi:type="uml:Class" xmi:id="Map-_ownedTemplateSignature-_ownedParameter.1-_ownedParameteredElement" name="V" templateParameter="Map-_ownedTemplateSignature-_ownedParameter.1"/>
        </ownedParameter>
      </ownedTemplateSignature>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.82" visibility="private" memberEnd="Pseudostate-redefinedPseudostate _packagedElement.82-redefiningPseudostate">
      <ownedEnd xmi:id="_packagedElement.82-redefiningPseudostate" name="redefiningPseudostate" type="Pseudostate" subsettedProperty="_packagedElement.73-redefiningVertex" association="_packagedElement.82">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.82-redefiningPseudostate-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.82-redefiningPseudostate-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.83" visibility="private" memberEnd="Vertex-incoming _packagedElement.83-target">
      <ownedEnd xmi:id="_packagedElement.83-target" name="target" type="Vertex" association="_packagedElement.83"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.84" visibility="private" memberEnd="Vertex-outgoing _packagedElement.84-source">
      <ownedEnd xmi:id="_packagedElement.84-source" name="source" type="Vertex" association="_packagedElement.84"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.85" visibility="private" memberEnd="ConnectionPoint-redefinedConnectionPoint _packagedElement.85-redefiningConnectionPoint">
      <ownedEnd xmi:id="_packagedElement.85-redefiningConnectionPoint" name="redefiningConnectionPoint" type="ConnectionPoint" subsettedProperty="_packagedElement.73-redefiningVertex" association="_packagedElement.85">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.85-redefiningConnectionPoint-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.85-redefiningConnectionPoint-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="IllegalStateException" name="IllegalStateException"/>
    <packagedElement xmi:type="uml:Class" xmi:id="OpaqueBehavior" name="OpaqueBehavior">
      <ownedComment xmi:id="OpaqueBehavior-_ownedComment.0" annotatedElement="OpaqueBehavior">
        <body>A representation of action code snippets used in UML-RT for
transition effects and state entry/exit behavior.</body>
      </ownedComment>
      <generalization xmi:id="OpaqueBehavior-_generalization.0" general="NamedElement"/>
      <ownedAttribute xmi:id="OpaqueBehavior-bodies" name="bodies" type="OpaqueBehavior-Map3CString20String3E" isReadOnly="true" isDerived="true">
        <ownedComment xmi:id="OpaqueBehavior-bodies-_ownedComment.0" annotatedElement="OpaqueBehavior-bodyEntry OpaqueBehavior-bodies">
          <body>The opaque behavior code snippets, by language.</body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:id="OpaqueBehavior-bodyEntry" name="bodyEntry" visibility="protected" aggregation="composite" isDerived="true" association="_packagedElement.88">
        <ownedComment xmi:id="OpaqueBehavior-bodyEntry-_ownedComment.0" annotatedElement="OpaqueBehavior-bodyEntry">
          <body>The list of language -> body code snippet mappings.</body>
        </ownedComment>
        <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/Ecore.metamodel.uml#EStringToStringMapEntry"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="OpaqueBehavior-bodyEntry-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="OpaqueBehavior-bodyEntry-_upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="OpaqueBehavior-transition" name="transition" type="Transition" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.89">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="OpaqueBehavior-transition-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="OpaqueBehavior-enteredState" name="enteredState" type="State" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.90">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="OpaqueBehavior-enteredState-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="OpaqueBehavior-exitedState" name="exitedState" type="State" isDerived="true" subsettedProperty="NamedElement-redefinitionContext" association="_packagedElement.91">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="OpaqueBehavior-exitedState-_lowerValue"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="OpaqueBehavior-redefinedBehavior" name="redefinedBehavior" type="OpaqueBehavior" isReadOnly="true" isDerived="true" subsettedProperty="NamedElement-redefinedElement" association="_packagedElement.93">
        <ownedComment xmi:id="OpaqueBehavior-redefinedBehavior-_ownedComment.0" annotatedElement="OpaqueBehavior-redefinedBehavior">
          <body>The guard of the redefined transition or trigger that this guard redefines.</body>
        </ownedComment>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="OpaqueBehavior-redefinedBehavior-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="OpaqueBehavior-redefinedBehavior-_upperValue" value="1"/>
      </ownedAttribute>
      <ownedOperation xmi:id="OpaqueBehavior-toUML" name="toUML" isQuery="true" redefinedOperation="NamedElement-toUML">
        <ownedComment xmi:id="OpaqueBehavior-toUML-_ownedComment.0" annotatedElement="OpaqueBehavior-toUML">
          <body>Obtains the underlying UML representation of this opaque behavior.</body>
        </ownedComment>
        <ownedParameter xmi:id="OpaqueBehavior-toUML-_ownedParameter.0" direction="return" effect="read">
          <ownedComment xmi:id="OpaqueBehavior-toUML-_ownedParameter.0-_ownedComment.0" annotatedElement="OpaqueBehavior-toUML-_ownedParameter.0">
            <body>The UML constraint.</body>
          </ownedComment>
          <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="OpaqueBehavior-allRedefinitions" name="allRedefinitions" isQuery="true" redefinedOperation="NamedElement-allRedefinitions">
        <ownedComment xmi:id="OpaqueBehavior-allRedefinitions-_ownedComment.0" annotatedElement="OpaqueBehavior-allRedefinitions">
          <body>Queries the elements that redefine the receiver, from
and including itself down the hierarchy.</body>
        </ownedComment>
        <ownedParameter xmi:id="OpaqueBehavior-allRedefinitions-_ownedParameter.0" type="OpaqueBehavior-Stream3C3F20extends20OpaqueBehavior3E" direction="return" effect="read">
          <ownedComment xmi:id="OpaqueBehavior-allRedefinitions-_ownedParameter.0-_ownedComment.0" annotatedElement="OpaqueBehavior-allRedefinitions-_ownedParameter.0">
            <body>The receiver, followed by all of the elements that
directly or indirectly redefine it, in breadth-first order.</body>
          </ownedComment>
        </ownedParameter>
      </ownedOperation>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="OpaqueBehavior-Map3CString20String3E" name="Map&lt;String, String>" visibility="private">
        <templateBinding xmi:id="OpaqueBehavior-Map3CString20String3E-_templateBinding.0" signature="Map-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="OpaqueBehavior-Map3CString20String3E-_templateBinding.0-_parameterSubstitution.0" formal="Map-_ownedTemplateSignature-_ownedParameter.0">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </parameterSubstitution>
          <parameterSubstitution xmi:id="OpaqueBehavior-Map3CString20String3E-_templateBinding.0-_parameterSubstitution.1" formal="Map-_ownedTemplateSignature-_ownedParameter.1">
            <actual xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </parameterSubstitution>
        </templateBinding>
      </nestedClassifier>
      <nestedClassifier xmi:type="uml:Class" xmi:id="OpaqueBehavior-_3F20extends20OpaqueBehavior" name="? extends OpaqueBehavior" visibility="private"/>
      <nestedClassifier xmi:type="uml:PrimitiveType" xmi:id="OpaqueBehavior-Stream3C3F20extends20OpaqueBehavior3E" name="Stream&lt;? extends OpaqueBehavior>" visibility="private">
        <templateBinding xmi:id="OpaqueBehavior-Stream3C3F20extends20OpaqueBehavior3E-_templateBinding.0" signature="Stream-_ownedTemplateSignature">
          <parameterSubstitution xmi:id="OpaqueBehavior-Stream3C3F20extends20OpaqueBehavior3E-_templateBinding.0-_parameterSubstitution.0" actual="OpaqueBehavior-_3F20extends20OpaqueBehavior" formal="Stream-_ownedTemplateSignature-_ownedParameter.0"/>
        </templateBinding>
      </nestedClassifier>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.88" visibility="private" memberEnd="OpaqueBehavior-bodyEntry _packagedElement.88-behavior">
      <ownedEnd xmi:id="_packagedElement.88-behavior" name="behavior" type="OpaqueBehavior" association="_packagedElement.88">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.88-behavior-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.88-behavior-_upperValue" value="1"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.89" visibility="private" memberEnd="Transition-effect OpaqueBehavior-transition"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.90" visibility="private" memberEnd="State-entry OpaqueBehavior-enteredState"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.91" visibility="private" memberEnd="State-exit OpaqueBehavior-exitedState"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.92" visibility="private" memberEnd="Guard-redefinedGuard _packagedElement.92-redefiningGuard">
      <ownedEnd xmi:id="_packagedElement.92-redefiningGuard" name="redefiningGuard" type="Guard" subsettedProperty="_packagedElement.2-redefiningElement" association="_packagedElement.92">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.92-redefiningGuard-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.92-redefiningGuard-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_packagedElement.93" visibility="private" memberEnd="OpaqueBehavior-redefinedBehavior _packagedElement.93-redefiningBehavior">
      <ownedEnd xmi:id="_packagedElement.93-redefiningBehavior" name="redefiningBehavior" type="OpaqueBehavior" subsettedProperty="_packagedElement.2-redefiningElement" association="_packagedElement.93">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_packagedElement.93-redefiningBehavior-_lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_packagedElement.93-redefiningBehavior-_upperValue" value="*"/>
      </ownedEnd>
    </packagedElement>
    <profileApplication xmi:id="_profileApplication.0">
      <eAnnotations xmi:id="_profileApplication.0-_http2F2Fwww.eclipse.org2Fuml22F2.0.02FUML" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_profileApplication.1">
      <eAnnotations xmi:id="_profileApplication.1-_http2F2Fwww.eclipse.org2Fuml22F2.0.02FUML" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <Ecore:EPackage xmi:id="_UfhCkN_oEeaN6rz53IjevQ" base_Package="_0" basePackage="org.eclipse.papyrusrt"/>
  <standard:Metamodel xmi:id="_6eFrkN_oEeaN6rz53IjevQ" base_Model="_0"/>
  <standard:Metaclass xmi:id="_6eG5sN_oEeaN6rz53IjevQ" base_Class="NamedElement"/>
  <standard:Metaclass xmi:id="_6eG5sd_oEeaN6rz53IjevQ" base_Class="Package"/>
  <standard:Metaclass xmi:id="_6eG5st_oEeaN6rz53IjevQ" base_Class="Capsule"/>
  <standard:Metaclass xmi:id="_6eHgwN_oEeaN6rz53IjevQ" base_Class="ReplicatedElement"/>
  <standard:Metaclass xmi:id="_6eHgwd_oEeaN6rz53IjevQ" base_Class="Port"/>
  <standard:Metaclass xmi:id="_6eHgwt_oEeaN6rz53IjevQ" base_Class="CapsulePart"/>
  <standard:Metaclass xmi:id="_6eIH0N_oEeaN6rz53IjevQ" base_Class="Connector"/>
  <standard:Metaclass xmi:id="_6eIH0d_oEeaN6rz53IjevQ" base_Class="Protocol"/>
  <standard:Metaclass xmi:id="_6eIH0t_oEeaN6rz53IjevQ" base_Class="ProtocolMessage"/>
  <standard:Metaclass xmi:id="_5dkNRN_pEeaN6rz53IjevQ" base_Class="Classifier"/>
  <Ecore:EEnum xmi:id="_5UZKsOALEeaN6rz53IjevQ" base_Enumeration="InheritanceKind" enumName="UMLRTInheritanceKind"/>
  <Ecore:EEnum xmi:id="_9s4N4OALEeaN6rz53IjevQ" base_Enumeration="PortKind" enumName="UMLRTPortKind"/>
  <Ecore:EEnum xmi:id="_AgioUOAMEeaN6rz53IjevQ" base_Enumeration="CapsulePartKind" enumName="UMLRTCapsulePartKind"/>
  <Ecore:EDataType xmi:id="_pILrsOAUEeaN6rz53IjevQ" instanceClassName="org.eclipse.papyrusrt.umlrt.uml.UMLRTModel" base_PrimitiveType="Model"/>
  <Ecore:EReference xmi:id="_HMch0OAbEeaN6rz53IjevQ" isTransient="true" base_Property="Package-capsule" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_SCHq4OAbEeaN6rz53IjevQ" isTransient="true" base_Property="Package-nestingPackage" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_UWux0OAbEeaN6rz53IjevQ" isTransient="true" base_Property="Package-nestedPackage" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_ZqcHIOAbEeaN6rz53IjevQ" isTransient="true" base_Property="Package-protocol" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_iDHpUOAbEeaN6rz53IjevQ" isTransient="true" base_Property="Capsule-package" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_nl58cOAbEeaN6rz53IjevQ" isTransient="true" base_Property="Protocol-package" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_yR7k0eAcEeaN6rz53IjevQ" isTransient="true" base_Property="Capsule-superclass" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_4lB6kOAcEeaN6rz53IjevQ" isTransient="true" base_Property="Capsule-subclass" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_BAf0leApEeaN6rz53IjevQ" isTransient="true" base_Property="Protocol-superProtocol" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_BAf0luApEeaN6rz53IjevQ" isTransient="true" base_Property="Protocol-subProtocol" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_t1lM8-AqEeaN6rz53IjevQ" isTransient="true" base_Property="Capsule-port" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_yNiEoOAqEeaN6rz53IjevQ" isTransient="true" base_Property="Capsule-capsulePart" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_H6L28OAuEeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="Protocol-message" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_VAko8-AvEeaN6rz53IjevQ" isTransient="true" base_Property="ProtocolMessage-parameter" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_B4O0MOAxEeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="Port-redefinedPort" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_QUCWcOAxEeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="Port-capsule" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_Zs2f8OAxEeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="Port-type" isResolveProxies="false"/>
  <Ecore:EAttribute xmi:id="_hRShwOAxEeaN6rz53IjevQ" isVolatile="true" base_Property="Port-isService" attributeName="service"/>
  <Ecore:EAttribute xmi:id="_iXkNUOAxEeaN6rz53IjevQ" isVolatile="true" base_Property="Port-isBehavior" attributeName="behavior"/>
  <Ecore:EAttribute xmi:id="_ihhakeAxEeaN6rz53IjevQ" isVolatile="true" base_Property="Port-isConjugated" attributeName="conjugated"/>
  <Ecore:EAttribute xmi:id="_ipE0EeAxEeaN6rz53IjevQ" isVolatile="true" base_Property="Port-isWired" attributeName="wired"/>
  <Ecore:EAttribute xmi:id="_iwGpIeAxEeaN6rz53IjevQ" isVolatile="true" base_Property="Port-isPublish" attributeName="publish"/>
  <Ecore:EAttribute xmi:id="_i7_wEOAxEeaN6rz53IjevQ" isVolatile="true" base_Property="Port-isNotification" attributeName="notification"/>
  <Ecore:EAttribute xmi:id="_XkDyAeAyEeaN6rz53IjevQ" isVolatile="true" base_Property="ReplicatedElement-isSymbolicReplicationFactor" attributeName="symbolicReplicationFactor"/>
  <Ecore:EReference xmi:id="_uHPrEuAyEeaN6rz53IjevQ" isVolatile="true" base_Property="Protocol-conjugate" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_H9jhweAzEeaN6rz53IjevQ" isVolatile="true" base_Property="_packagedElement.43-base" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_Y8vxUuA0EeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="Port-connector" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_hOK08-A0EeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="Port-insideConnector" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_k8dro-A0EeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="Port-outsideConnector" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_3Keew-A1EeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="Capsule-connector" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_AcHpQuA2EeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="Connector-capsule" isResolveProxies="false"/>
  <Ecore:EAttribute xmi:id="_Js9QkeA4EeaN6rz53IjevQ" isVolatile="true" base_Property="CapsulePart-isOptional" attributeName="optional"/>
  <Ecore:EReference xmi:id="_aUP9gOA5EeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="NamedElement-redefinedElement" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_eI_acOA5EeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="NamedElement-redefinitionContext" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_81YPQOA5EeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="NamedElement-redefinableElement" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_CoUo0OA7EeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="ProtocolMessage-redefinedMessage" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_GUmtUOA7EeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="ProtocolMessage-protocol" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_QifoM-A8EeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="NamedElement-inheritedElement" isResolveProxies="false"/>
  <standard:Metaclass xmi:id="_bFiTsOA9EeaN6rz53IjevQ" base_Class="NamedElement-getRedefinitionOf-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault"/>
  <Ecore:EGenericType xmi:id="_m5MvAOA9EeaN6rz53IjevQ" base_Class="NamedElement-getRedefinitionOf-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault" upperBound="NamedElement"/>
  <Ecore:EEnumLiteral xmi:id="_8SQKsOBSEeaN6rz53IjevQ" xmlName="" base_EnumerationLiteral="CapsulePartKind-plug-in" enumLiteralName="plug_in" literal="plug-in"/>
  <Ecore:ETypeParameter xmi:id="_ISeegOBXEeaN6rz53IjevQ" base_TemplateParameter="NamedElement-getRedefinitionOf-_ownedTemplateSignature-_ownedParameter.0" bounds="NamedElement"/>
  <Ecore:EReference xmi:id="_fnTP5uBXEeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="NamedElement-excludedElement" isResolveProxies="false"/>
  <Ecore:ETypeParameter xmi:id="_NAcNB-BYEeaN6rz53IjevQ" base_TemplateParameter="NamedElement-getExcludedElement-_ownedTemplateSignature-_ownedParameter.0" bounds="NamedElement"/>
  <standard:Metaclass xmi:id="_NAc0EOBYEeaN6rz53IjevQ" base_Class="NamedElement-getExcludedElement-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault"/>
  <Ecore:EGenericType xmi:id="_NAc0EeBYEeaN6rz53IjevQ" base_Class="NamedElement-getExcludedElement-_ownedTemplateSignature-_ownedParameter.0-_ownedDefault" upperBound="NamedElement"/>
  <standard:Metaclass xmi:id="_zetpwOBYEeaN6rz53IjevQ" base_Class="NamedElement-Class_T"/>
  <Ecore:EGenericType xmi:id="_8NFIEOBYEeaN6rz53IjevQ" base_Class="NamedElement-Class_T"/>
  <Ecore:EGenericType xmi:id="_nmBSkOBaEeaN6rz53IjevQ" base_Class="Classifier-_3F20extends20Classifier" upperBound="Classifier"/>
  <standard:Metaclass xmi:id="_xqzxQOBaEeaN6rz53IjevQ" base_Class="Classifier-_3F20extends20Classifier"/>
  <Ecore:EGenericType xmi:id="_erjxoOBdEeaN6rz53IjevQ" base_DataType="Classifier-List3C3F20extends20Classifier3E"/>
  <Ecore:EDataType xmi:id="_bflIYOBeEeaN6rz53IjevQ" instanceClassName="java.util.List" base_PrimitiveType="List"/>
  <standard:Metaclass xmi:id="_bflIYeBeEeaN6rz53IjevQ" base_Class="List-_ownedTemplateSignature-_ownedParameter.0-_ownedParameteredElement"/>
  <Ecore:EDataType xmi:id="_jdHmtOBeEeaN6rz53IjevQ" instanceClassName="java.util.stream.Stream" base_PrimitiveType="Stream"/>
  <standard:Metaclass xmi:id="_jdHmteBeEeaN6rz53IjevQ" base_Class="Stream-_ownedTemplateSignature-_ownedParameter.0-_ownedParameteredElement"/>
  <Ecore:EGenericType xmi:id="_Fm_PAOBfEeaN6rz53IjevQ" base_DataType="Classifier-Stream3C3F20extends20Classifier3E"/>
  <Ecore:EGenericType xmi:id="_UMwlk-BfEeaN6rz53IjevQ" base_DataType="Capsule-Stream3CCapsule3E"/>
  <Ecore:EGenericType xmi:id="_gEVQheBfEeaN6rz53IjevQ" base_DataType="Protocol-Stream3CProtocol3E"/>
  <Ecore:EAttribute xmi:id="_ZOuYsOBhEeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="Capsule-hierarchy"/>
  <Ecore:EAttribute xmi:id="_p_p_QOBhEeaN6rz53IjevQ" isTransient="true" isVolatile="true" base_Property="Protocol-hierarchy"/>
  <Ecore:EReference xmi:id="_G4o-IOChEeaJZvIYnDpAHQ" isTransient="true" isVolatile="true" base_Property="NamedElement-rootDefinition" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_JzmzEOCkEeaJZvIYnDpAHQ" isTransient="true" isVolatile="true" base_Property="Classifier-general" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_pRadwOCkEeaJZvIYnDpAHQ" isTransient="true" isVolatile="true" base_Property="Classifier-specific" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_CeDEsOD6EeanBvJuK4W-DA" isTransient="true" isVolatile="true" base_Property="Port-partWithPort" referenceName="partsWithPort" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_bvbaoOEAEeanBvJuK4W-DA" isTransient="true" isVolatile="true" base_Property="CapsulePart-redefinedPart" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_5JMJ8OEAEeanBvJuK4W-DA" isTransient="true" isVolatile="true" base_Property="CapsulePart-capsule" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_8qUHUOEAEeanBvJuK4W-DA" isTransient="true" isVolatile="true" base_Property="CapsulePart-type" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_bEMEQOELEeanBvJuK4W-DA" isVolatile="true" base_Property="ProtocolMessage-conjugate" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_bEMEQeELEeanBvJuK4W-DA" isVolatile="true" base_Property="_packagedElement.47-base" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_I9sRkOEOEeanBvJuK4W-DA" isTransient="true" isVolatile="true" base_Property="Connector-redefinedConnector" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_NHf_kOEOEeanBvJuK4W-DA" isTransient="true" isVolatile="true" base_Property="Connector-source" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_RR7_sOEOEeanBvJuK4W-DA" isTransient="true" isVolatile="true" base_Property="Connector-sourcePartWithPort" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_XoNlQOEOEeanBvJuK4W-DA" isTransient="true" isVolatile="true" base_Property="Connector-target" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_awb6cOEOEeanBvJuK4W-DA" isTransient="true" isVolatile="true" base_Property="Connector-targetPartWithPort" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="__Q7fFOESEeanBvJuK4W-DA" isTransient="true" isVolatile="true" base_Property="Protocol-inMessage" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_Ka9uleETEeanBvJuK4W-DA" isTransient="true" isVolatile="true" base_Property="Protocol-outMessage" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_KmxV8OETEeanBvJuK4W-DA" isTransient="true" isVolatile="true" base_Property="Protocol-inOutMessage" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_EbE7AOiuEeafoJ7_v0U68g" isTransient="true" isVolatile="true" base_Property="Capsule-stateMachine" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_p0PNAOiyEeaNMrjklkg6iQ" isTransient="true" isVolatile="true" base_Property="StateMachine-capsule" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_eFkI8Oi-EeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="StateMachine-vertex" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_epf8cOi-EeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="Vertex-stateMachine" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_RSlJMOi_EeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="StateMachine-transition" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_RSmXUOi_EeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="Transition-stateMachine" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_lCNVgOi_EeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="Vertex-state" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_lCN8kOi_EeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="State-subvertex" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_8W6yIOi_EeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="State-subtransition" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_8W8AQOi_EeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="Transition-state" isResolveProxies="false"/>
  <standard:Metaclass xmi:id="_OyR6MOjAEeahyvbCPfJqxQ" base_Class="StateMachine"/>
  <standard:Metaclass xmi:id="_OyShQOjAEeahyvbCPfJqxQ" base_Class="Vertex"/>
  <standard:Metaclass xmi:id="_OyTIUOjAEeahyvbCPfJqxQ" base_Class="State"/>
  <standard:Metaclass xmi:id="_OyTIUejAEeahyvbCPfJqxQ" base_Class="Pseudostate"/>
  <standard:Metaclass xmi:id="_OyTvYOjAEeahyvbCPfJqxQ" base_Class="Transition"/>
  <Ecore:EReference xmi:id="__8kQ4OjEEeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="Transition-trigger" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="__8k38OjEEeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="Trigger-transition" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_LKPDMOjFEeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="Transition-guard" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_RVBKcOjFEeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="Trigger-guard" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_grPtkOjFEeahyvbCPfJqxQ" isTransient="true" isVolatile="true" visibility="None" base_Property="Guard-bodyEntry" isResolveProxies="false"/>
  <standard:Metaclass xmi:id="_8MBiAOjFEeahyvbCPfJqxQ" base_Class="Trigger"/>
  <standard:Metaclass xmi:id="_8MBiAejFEeahyvbCPfJqxQ" base_Class="Guard"/>
  <Ecore:EAttribute xmi:id="_IWAyoOjGEeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="Pseudostate-kind"/>
  <Ecore:EAttribute xmi:id="_GKS3EOjIEeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="ConnectionPoint-kind"/>
  <Ecore:EReference xmi:id="_oqqT0OjIEeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="State-entryPoint" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_oqq64OjIEeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="_packagedElement.70-entryTo" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_3nk_EOjIEeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="State-exitPoint" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_3nlmIOjIEeahyvbCPfJqxQ" isTransient="true" isVolatile="true" base_Property="_packagedElement.71-exitFrom" isResolveProxies="false"/>
  <standard:Metaclass xmi:id="_ADVqcOjJEeahyvbCPfJqxQ" base_Class="ConnectionPoint"/>
  <standard:Metamodel xmi:id="_HrMXMOjKEeahyvbCPfJqxQ" base_Model="_0"/>
  <Ecore:EReference xmi:id="_AYxnwOjxEeacmZENXw08tA" isTransient="true" isVolatile="true" base_Property="StateMachine-redefinedStateMachine" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_tu1bsOjxEeacmZENXw08tA" isTransient="true" isVolatile="true" base_Property="Vertex-redefinedVertex" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_V_SAsOjyEea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="State-redefinedState" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_64x4AOjyEea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="Transition-redefinedTransition" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_Odd_oOjzEea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="Trigger-redefinedTrigger" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_vpDTYOj2Eea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="_packagedElement.77-outgoing" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_vpD6cOj2Eea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="Transition-source" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_8IHcIOj2Eea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="_packagedElement.78-incoming" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_8IIDMOj2Eea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="Transition-target" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_0pGaUOlNEea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="State-connectionPoint" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_0pHocOlNEea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="ConnectionPoint-state" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_cqjroOlPEea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="Trigger-protocolMessage" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_vRfKgOlPEea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="Trigger-port" isResolveProxies="false"/>
  <Ecore:EAttribute xmi:id="_fE11YOlSEea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="Connector-targetReplicationFactor"/>
  <Ecore:EAttribute xmi:id="_jkYi0OlSEea4ccgxrWoz4A" isTransient="true" isVolatile="true" base_Property="Connector-sourceReplicationFactor"/>
  <Ecore:EDataType xmi:id="_FTvVYOl_Eea_HYLBXy4cgA" instanceClassName="java.util.Map" base_PrimitiveType="Map"/>
  <standard:Metaclass xmi:id="_FTxxoOl_Eea_HYLBXy4cgA" base_Class="Map-_ownedTemplateSignature-_ownedParameter.0-_ownedParameteredElement"/>
  <Ecore:EGenericType xmi:id="_Tiw_4-l_Eea_HYLBXy4cgA" base_DataType="Guard-Map3CString20String3E"/>
  <standard:Metaclass xmi:id="_lbQEYOl_Eea_HYLBXy4cgA" base_Class="Map-_ownedTemplateSignature-_ownedParameter.1-_ownedParameteredElement"/>
  <Ecore:EAttribute xmi:id="_8YNIUOl_Eea_HYLBXy4cgA" isTransient="true" isVolatile="true" base_Property="Guard-bodies"/>
  <Ecore:EReference xmi:id="_7leDkOoeEeaE4olEtMNJbA" isTransient="true" isVolatile="true" base_Property="Pseudostate-redefinedPseudostate" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_XQD1EOsAEeaOFOUW5Z2ryw" isTransient="true" isVolatile="true" base_Property="Vertex-incoming" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_XQHfcOsAEeaOFOUW5Z2ryw" isTransient="true" isVolatile="true" base_Property="Vertex-outgoing" isResolveProxies="false"/>
  <Ecore:EAttribute xmi:id="_DndgAOsPEeawuvZsTuT0ew" isTransient="true" isVolatile="true" base_Property="State-isComposite" attributeName="composite"/>
  <Ecore:EReference xmi:id="_FYhQIOseEeawuvZsTuT0ew" isTransient="true" isVolatile="true" base_Property="ConnectionPoint-redefinedConnectionPoint" isResolveProxies="false"/>
  <Ecore:EAttribute xmi:id="_oBGRgO0-EeaYCPbkBlCaTg" isTransient="true" isVolatile="true" base_Property="Transition-kind"/>
  <Ecore:EAttribute xmi:id="_3BV9kO0-EeaYCPbkBlCaTg" isTransient="true" isVolatile="true" base_Property="Transition-isInternal" attributeName="internal"/>
  <Ecore:EAttribute xmi:id="_2ZATwO1VEeaEzNecaa3MMQ" isTransient="true" isVolatile="true" base_Property="Trigger-isReceiveAnyMessage" attributeName="receiveAnyMessage"/>
  <Ecore:EDataType xmi:id="_AWtl0O7REea2FckRsJl-UA" instanceClassName="java.lang.IllegalStateException" base_PrimitiveType="IllegalStateException"/>
  <standard:Metamodel xmi:id="_cWv0APFAEealv8CSp1Iqjg" base_Model="_0"/>
  <Ecore:EAttribute xmi:id="_-Iu4oPkTEea4eq7PbzUfJw" isTransient="true" isVolatile="true" base_Property="OpaqueBehavior-bodies"/>
  <Ecore:EReference xmi:id="_-IwGwPkTEea4eq7PbzUfJw" isTransient="true" isVolatile="true" visibility="None" base_Property="OpaqueBehavior-bodyEntry" isResolveProxies="false"/>
  <Ecore:EGenericType xmi:id="_-IwGwfkTEea4eq7PbzUfJw" base_DataType="OpaqueBehavior-Map3CString20String3E"/>
  <standard:Metaclass xmi:id="_UVP-IPkUEea4eq7PbzUfJw" base_Class="OpaqueBehavior"/>
  <Ecore:EReference xmi:id="_qI9iEPkUEea4eq7PbzUfJw" isTransient="true" isVolatile="true" base_Property="Transition-effect" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_73s0sPkUEea4eq7PbzUfJw" isTransient="true" isVolatile="true" base_Property="State-entry" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_73tbwPkUEea4eq7PbzUfJw" isTransient="true" isVolatile="true" base_Property="State-exit" isResolveProxies="false"/>
  <Ecore:EGenericType xmi:id="_gec3cwYAEeeEsLDmQDzJpQ" base_Class="NamedElement-_3F20extends20NamedElement" upperBound="NamedElement"/>
  <standard:Metaclass xmi:id="_gec3dAYAEeeEsLDmQDzJpQ" base_Class="NamedElement-_3F20extends20NamedElement"/>
  <Ecore:EGenericType xmi:id="_gec3dQYAEeeEsLDmQDzJpQ" base_DataType="NamedElement-Stream3C3F20extends20NamedElement3E"/>
  <Ecore:EGenericType xmi:id="_BHOgeAYBEeeEsLDmQDzJpQ" base_Class="Port-_3F20extends20Port" upperBound="Port"/>
  <standard:Metaclass xmi:id="_BHPHgAYBEeeEsLDmQDzJpQ" base_Class="Port-_3F20extends20Port"/>
  <Ecore:EGenericType xmi:id="_BHPHgQYBEeeEsLDmQDzJpQ" base_DataType="Port-Stream3C3F20extends20Port3E"/>
  <Ecore:EGenericType xmi:id="_M2u0iAYBEeeEsLDmQDzJpQ" base_Class="CapsulePart-_3F20extends20CapsulePart" upperBound="CapsulePart"/>
  <standard:Metaclass xmi:id="_M2vbkAYBEeeEsLDmQDzJpQ" base_Class="CapsulePart-_3F20extends20CapsulePart"/>
  <Ecore:EGenericType xmi:id="_M2vbkQYBEeeEsLDmQDzJpQ" base_DataType="CapsulePart-Stream3C3F20extends20CapsulePart3E"/>
  <Ecore:EGenericType xmi:id="_UXB9OAYBEeeEsLDmQDzJpQ" base_Class="Connector-_3F20extends20Connector" upperBound="Connector"/>
  <standard:Metaclass xmi:id="_UXB9OQYBEeeEsLDmQDzJpQ" base_Class="Connector-_3F20extends20Connector"/>
  <Ecore:EGenericType xmi:id="_UXCkQAYBEeeEsLDmQDzJpQ" base_DataType="Connector-Stream3C3F20extends20Connector3E"/>
  <Ecore:EGenericType xmi:id="_iY0c-AYBEeeEsLDmQDzJpQ" base_Class="ProtocolMessage-_3F20extends20ProtocolMessage" upperBound="ProtocolMessage"/>
  <standard:Metaclass xmi:id="_iY0c-QYBEeeEsLDmQDzJpQ" base_Class="ProtocolMessage-_3F20extends20ProtocolMessage"/>
  <Ecore:EGenericType xmi:id="_iY0c-gYBEeeEsLDmQDzJpQ" base_DataType="ProtocolMessage-Stream3C3F20extends20ProtocolMessage3E"/>
  <Ecore:EGenericType xmi:id="_poJKaAYBEeeEsLDmQDzJpQ" base_Class="StateMachine-_3F20extends20StateMachine" upperBound="StateMachine"/>
  <standard:Metaclass xmi:id="_poJKaQYBEeeEsLDmQDzJpQ" base_Class="StateMachine-_3F20extends20StateMachine"/>
  <Ecore:EGenericType xmi:id="_poJKagYBEeeEsLDmQDzJpQ" base_DataType="StateMachine-Stream3C3F20extends20StateMachine3E"/>
  <Ecore:EGenericType xmi:id="_vuy_mAYBEeeEsLDmQDzJpQ" base_Class="State-_3F20extends20State" upperBound="State"/>
  <standard:Metaclass xmi:id="_vuy_mQYBEeeEsLDmQDzJpQ" base_Class="State-_3F20extends20State"/>
  <Ecore:EGenericType xmi:id="_vuy_mgYBEeeEsLDmQDzJpQ" base_DataType="State-Stream3C3F20extends20State3E"/>
  <Ecore:EGenericType xmi:id="_zoDwKAYBEeeEsLDmQDzJpQ" base_Class="Pseudostate-_3F20extends20Pseudostate" upperBound="Pseudostate"/>
  <standard:Metaclass xmi:id="_zoEXMAYBEeeEsLDmQDzJpQ" base_Class="Pseudostate-_3F20extends20Pseudostate"/>
  <Ecore:EGenericType xmi:id="_zoEXMQYBEeeEsLDmQDzJpQ" base_DataType="Pseudostate-Stream3C3F20extends20Pseudostate3E"/>
  <Ecore:EGenericType xmi:id="_3nRXuAYBEeeEsLDmQDzJpQ" base_Class="ConnectionPoint-_3F20extends20ConnectionPoint" upperBound="ConnectionPoint"/>
  <standard:Metaclass xmi:id="_3nR-wAYBEeeEsLDmQDzJpQ" base_Class="ConnectionPoint-_3F20extends20ConnectionPoint"/>
  <Ecore:EGenericType xmi:id="_3nR-wQYBEeeEsLDmQDzJpQ" base_DataType="ConnectionPoint-Stream3C3F20extends20ConnectionPoint3E"/>
  <Ecore:EGenericType xmi:id="_7ZwK2AYBEeeEsLDmQDzJpQ" base_Class="Transition-_3F20extends20Transition" upperBound="Transition"/>
  <standard:Metaclass xmi:id="_7Zwx4AYBEeeEsLDmQDzJpQ" base_Class="Transition-_3F20extends20Transition"/>
  <Ecore:EGenericType xmi:id="_7Zwx4QYBEeeEsLDmQDzJpQ" base_DataType="Transition-Stream3C3F20extends20Transition3E"/>
  <Ecore:EGenericType xmi:id="_GG4b6AYCEeeEsLDmQDzJpQ" base_Class="Trigger-_3F20extends20Trigger" upperBound="Trigger"/>
  <standard:Metaclass xmi:id="_GG5C8AYCEeeEsLDmQDzJpQ" base_Class="Trigger-_3F20extends20Trigger"/>
  <Ecore:EGenericType xmi:id="_GG5C8QYCEeeEsLDmQDzJpQ" base_DataType="Trigger-Stream3C3F20extends20Trigger3E"/>
  <Ecore:EAttribute xmi:id="_6VlwYAYHEeeEsLDmQDzJpQ" isTransient="true" isVolatile="true" base_Property="State-isSimple" attributeName="simple"/>
  <Ecore:EReference xmi:id="_3nLC4AjnEeeg49TVNDhIAg" isTransient="true" isVolatile="true" base_Property="Guard-redefinedGuard" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_xImVkAjqEeeg49TVNDhIAg" isTransient="true" isVolatile="true" base_Property="Guard-transition" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_yMusEAjqEeeg49TVNDhIAg" isTransient="true" isVolatile="true" base_Property="Guard-trigger" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_0TZ1EAnkEeevpNWCR1p77Q" isTransient="true" isVolatile="true" base_Property="OpaqueBehavior-transition" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_2BvmMAnkEeevpNWCR1p77Q" isTransient="true" isVolatile="true" base_Property="OpaqueBehavior-enteredState" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_3gomEAnkEeevpNWCR1p77Q" isTransient="true" isVolatile="true" base_Property="OpaqueBehavior-exitedState" isResolveProxies="false"/>
  <Ecore:EReference xmi:id="_9ajxaAnlEeevpNWCR1p77Q" isTransient="true" isVolatile="true" base_Property="OpaqueBehavior-redefinedBehavior" isResolveProxies="false"/>
  <Ecore:EGenericType xmi:id="_B09uYAseEeeEBeQ0QZdCZw" base_Class="Guard-_3F20extends20Guard" upperBound="Guard"/>
  <standard:Metaclass xmi:id="_B1AKoAseEeeEBeQ0QZdCZw" base_Class="Guard-_3F20extends20Guard"/>
  <Ecore:EGenericType xmi:id="_B1AKoQseEeeEBeQ0QZdCZw" base_DataType="Guard-Stream3C3F20extends20Guard3E"/>
  <Ecore:EGenericType xmi:id="_R1_iCAseEeeEBeQ0QZdCZw" base_Class="OpaqueBehavior-_3F20extends20OpaqueBehavior" upperBound="OpaqueBehavior"/>
  <standard:Metaclass xmi:id="_R2AJEAseEeeEBeQ0QZdCZw" base_Class="OpaqueBehavior-_3F20extends20OpaqueBehavior"/>
  <Ecore:EGenericType xmi:id="_R2AJEQseEeeEBeQ0QZdCZw" base_DataType="OpaqueBehavior-Stream3C3F20extends20OpaqueBehavior3E"/>
</xmi:XMI>
