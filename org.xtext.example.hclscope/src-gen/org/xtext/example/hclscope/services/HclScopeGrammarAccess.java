/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.hclscope.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class HclScopeGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class StateMachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.StateMachine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStatemachineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cStateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cStatesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cStatesStateParserRuleCall_3_1_0 = (RuleCall)cStatesAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cStatesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cStatesStateParserRuleCall_3_2_1_0 = (RuleCall)cStatesAssignment_3_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Assignment cInitialtransitionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInitialtransitionInitialTransitionParserRuleCall_4_0 = (RuleCall)cInitialtransitionAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cJunctionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cJunctionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cJunctionJunctionParserRuleCall_5_1_0 = (RuleCall)cJunctionAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cJunctionAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cJunctionJunctionParserRuleCall_5_2_1_0 = (RuleCall)cJunctionAssignment_5_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cChoiceKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cChoiceAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cChoiceChoiceParserRuleCall_6_1_0 = (RuleCall)cChoiceAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cChoiceAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cChoiceChoiceParserRuleCall_6_2_1_0 = (RuleCall)cChoiceAssignment_6_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Assignment cTransitionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTransitionTransitionParserRuleCall_7_0 = (RuleCall)cTransitionAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cSemicolonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//StateMachine:
		//    "statemachine" name=ID "{"
		//    //simple state machine to allow adding concepts
		//    ("state" states+=State ("," states+=State)* ";")*
		//    (initialtransition = InitialTransition)?
		//    ("junction" junction+=Junction ("," junction+=Junction)* ";" )*
		//    ("choice" choice+=Choice ("," choice+=Choice)* ";" )*
		//    (transition+=Transition)*
		// "}" ";";
		@Override public ParserRule getRule() { return rule; }
		
		//   "statemachine" name=ID "{"
		//   //simple state machine to allow adding concepts
		//   ("state" states+=State ("," states+=State)* ";")*
		//   (initialtransition = InitialTransition)?
		//   ("junction" junction+=Junction ("," junction+=Junction)* ";" )*
		//   ("choice" choice+=Choice ("," choice+=Choice)* ";" )*
		//   (transition+=Transition)*
		//"}" ";"
		public Group getGroup() { return cGroup; }
		
		//"statemachine"
		public Keyword getStatemachineKeyword_0() { return cStatemachineKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		////simple state machine to allow adding concepts
		//("state" states+=State ("," states+=State)* ";")*
		public Group getGroup_3() { return cGroup_3; }
		
		//"state"
		public Keyword getStateKeyword_3_0() { return cStateKeyword_3_0; }
		
		//states+=State
		public Assignment getStatesAssignment_3_1() { return cStatesAssignment_3_1; }
		
		//State
		public RuleCall getStatesStateParserRuleCall_3_1_0() { return cStatesStateParserRuleCall_3_1_0; }
		
		//("," states+=State)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//states+=State
		public Assignment getStatesAssignment_3_2_1() { return cStatesAssignment_3_2_1; }
		
		//State
		public RuleCall getStatesStateParserRuleCall_3_2_1_0() { return cStatesStateParserRuleCall_3_2_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_3_3() { return cSemicolonKeyword_3_3; }
		
		//(initialtransition = InitialTransition)?
		public Assignment getInitialtransitionAssignment_4() { return cInitialtransitionAssignment_4; }
		
		//InitialTransition
		public RuleCall getInitialtransitionInitialTransitionParserRuleCall_4_0() { return cInitialtransitionInitialTransitionParserRuleCall_4_0; }
		
		//("junction" junction+=Junction ("," junction+=Junction)* ";" )*
		public Group getGroup_5() { return cGroup_5; }
		
		//"junction"
		public Keyword getJunctionKeyword_5_0() { return cJunctionKeyword_5_0; }
		
		//junction+=Junction
		public Assignment getJunctionAssignment_5_1() { return cJunctionAssignment_5_1; }
		
		//Junction
		public RuleCall getJunctionJunctionParserRuleCall_5_1_0() { return cJunctionJunctionParserRuleCall_5_1_0; }
		
		//("," junction+=Junction)*
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }
		
		//junction+=Junction
		public Assignment getJunctionAssignment_5_2_1() { return cJunctionAssignment_5_2_1; }
		
		//Junction
		public RuleCall getJunctionJunctionParserRuleCall_5_2_1_0() { return cJunctionJunctionParserRuleCall_5_2_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_5_3() { return cSemicolonKeyword_5_3; }
		
		//("choice" choice+=Choice ("," choice+=Choice)* ";" )*
		public Group getGroup_6() { return cGroup_6; }
		
		//"choice"
		public Keyword getChoiceKeyword_6_0() { return cChoiceKeyword_6_0; }
		
		//choice+=Choice
		public Assignment getChoiceAssignment_6_1() { return cChoiceAssignment_6_1; }
		
		//Choice
		public RuleCall getChoiceChoiceParserRuleCall_6_1_0() { return cChoiceChoiceParserRuleCall_6_1_0; }
		
		//("," choice+=Choice)*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//choice+=Choice
		public Assignment getChoiceAssignment_6_2_1() { return cChoiceAssignment_6_2_1; }
		
		//Choice
		public RuleCall getChoiceChoiceParserRuleCall_6_2_1_0() { return cChoiceChoiceParserRuleCall_6_2_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_6_3() { return cSemicolonKeyword_6_3; }
		
		//(transition+=Transition)*
		public Assignment getTransitionAssignment_7() { return cTransitionAssignment_7; }
		
		//Transition
		public RuleCall getTransitionTransitionParserRuleCall_7_0() { return cTransitionTransitionParserRuleCall_7_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//";"
		public Keyword getSemicolonKeyword_9() { return cSemicolonKeyword_9; }
	}
	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cInternaltransitionAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cInternaltransitionInternalTransitionParserRuleCall_1_1_0 = (RuleCall)cInternaltransitionAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cEntryKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_2_1 = (Keyword)cGroup_1_2.eContents().get(1);
		private final Assignment cEntryactionAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cEntryactionEntryActionParserRuleCall_1_2_2_0 = (RuleCall)cEntryactionAssignment_1_2_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);
		private final Keyword cSemicolonKeyword_1_2_4 = (Keyword)cGroup_1_2.eContents().get(4);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Keyword cExitKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_3_1 = (Keyword)cGroup_1_3.eContents().get(1);
		private final Assignment cExitactionAssignment_1_3_2 = (Assignment)cGroup_1_3.eContents().get(2);
		private final RuleCall cExitactionExitActionParserRuleCall_1_3_2_0 = (RuleCall)cExitactionAssignment_1_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_3_3 = (Keyword)cGroup_1_3.eContents().get(3);
		private final Keyword cSemicolonKeyword_1_3_4 = (Keyword)cGroup_1_3.eContents().get(4);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final Keyword cEntrypointKeyword_1_4_0 = (Keyword)cGroup_1_4.eContents().get(0);
		private final Assignment cEntrypointAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cEntrypointEntryPointParserRuleCall_1_4_1_0 = (RuleCall)cEntrypointAssignment_1_4_1.eContents().get(0);
		private final Group cGroup_1_4_2 = (Group)cGroup_1_4.eContents().get(2);
		private final Keyword cCommaKeyword_1_4_2_0 = (Keyword)cGroup_1_4_2.eContents().get(0);
		private final Assignment cEntrypointAssignment_1_4_2_1 = (Assignment)cGroup_1_4_2.eContents().get(1);
		private final RuleCall cEntrypointEntryPointParserRuleCall_1_4_2_1_0 = (RuleCall)cEntrypointAssignment_1_4_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_4_3 = (Keyword)cGroup_1_4.eContents().get(3);
		private final Group cGroup_1_5 = (Group)cGroup_1.eContents().get(5);
		private final Keyword cExitpointKeyword_1_5_0 = (Keyword)cGroup_1_5.eContents().get(0);
		private final Assignment cExitpointAssignment_1_5_1 = (Assignment)cGroup_1_5.eContents().get(1);
		private final RuleCall cExitpointExitPointParserRuleCall_1_5_1_0 = (RuleCall)cExitpointAssignment_1_5_1.eContents().get(0);
		private final Group cGroup_1_5_2 = (Group)cGroup_1_5.eContents().get(2);
		private final Keyword cCommaKeyword_1_5_2_0 = (Keyword)cGroup_1_5_2.eContents().get(0);
		private final Assignment cExitpointAssignment_1_5_2_1 = (Assignment)cGroup_1_5_2.eContents().get(1);
		private final RuleCall cExitpointExitPointParserRuleCall_1_5_2_1_0 = (RuleCall)cExitpointAssignment_1_5_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_5_3 = (Keyword)cGroup_1_5.eContents().get(3);
		private final Group cGroup_1_6 = (Group)cGroup_1.eContents().get(6);
		private final Keyword cStateKeyword_1_6_0 = (Keyword)cGroup_1_6.eContents().get(0);
		private final Assignment cStatesAssignment_1_6_1 = (Assignment)cGroup_1_6.eContents().get(1);
		private final RuleCall cStatesStateParserRuleCall_1_6_1_0 = (RuleCall)cStatesAssignment_1_6_1.eContents().get(0);
		private final Group cGroup_1_6_2 = (Group)cGroup_1_6.eContents().get(2);
		private final Keyword cCommaKeyword_1_6_2_0 = (Keyword)cGroup_1_6_2.eContents().get(0);
		private final Assignment cStatesAssignment_1_6_2_1 = (Assignment)cGroup_1_6_2.eContents().get(1);
		private final RuleCall cStatesStateParserRuleCall_1_6_2_1_0 = (RuleCall)cStatesAssignment_1_6_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_6_3 = (Keyword)cGroup_1_6.eContents().get(3);
		private final Assignment cInitialtransitionAssignment_1_7 = (Assignment)cGroup_1.eContents().get(7);
		private final RuleCall cInitialtransitionInitialTransitionParserRuleCall_1_7_0 = (RuleCall)cInitialtransitionAssignment_1_7.eContents().get(0);
		private final Group cGroup_1_8 = (Group)cGroup_1.eContents().get(8);
		private final Keyword cJunctionKeyword_1_8_0 = (Keyword)cGroup_1_8.eContents().get(0);
		private final Assignment cJunctionAssignment_1_8_1 = (Assignment)cGroup_1_8.eContents().get(1);
		private final RuleCall cJunctionJunctionParserRuleCall_1_8_1_0 = (RuleCall)cJunctionAssignment_1_8_1.eContents().get(0);
		private final Group cGroup_1_8_2 = (Group)cGroup_1_8.eContents().get(2);
		private final Keyword cCommaKeyword_1_8_2_0 = (Keyword)cGroup_1_8_2.eContents().get(0);
		private final Assignment cJunctionAssignment_1_8_2_1 = (Assignment)cGroup_1_8_2.eContents().get(1);
		private final RuleCall cJunctionJunctionParserRuleCall_1_8_2_1_0 = (RuleCall)cJunctionAssignment_1_8_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_8_3 = (Keyword)cGroup_1_8.eContents().get(3);
		private final Group cGroup_1_9 = (Group)cGroup_1.eContents().get(9);
		private final Keyword cChoiceKeyword_1_9_0 = (Keyword)cGroup_1_9.eContents().get(0);
		private final Assignment cChoiceAssignment_1_9_1 = (Assignment)cGroup_1_9.eContents().get(1);
		private final RuleCall cChoiceChoiceParserRuleCall_1_9_1_0 = (RuleCall)cChoiceAssignment_1_9_1.eContents().get(0);
		private final Group cGroup_1_9_2 = (Group)cGroup_1_9.eContents().get(2);
		private final Keyword cCommaKeyword_1_9_2_0 = (Keyword)cGroup_1_9_2.eContents().get(0);
		private final Assignment cChoiceAssignment_1_9_2_1 = (Assignment)cGroup_1_9_2.eContents().get(1);
		private final RuleCall cChoiceChoiceParserRuleCall_1_9_2_1_0 = (RuleCall)cChoiceAssignment_1_9_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_9_3 = (Keyword)cGroup_1_9.eContents().get(3);
		private final Alternatives cAlternatives_1_10 = (Alternatives)cGroup_1.eContents().get(10);
		private final Assignment cTransitionAssignment_1_10_0 = (Assignment)cAlternatives_1_10.eContents().get(0);
		private final RuleCall cTransitionTransitionParserRuleCall_1_10_0_0 = (RuleCall)cTransitionAssignment_1_10_0.eContents().get(0);
		private final Assignment cHistorytransitionAssignment_1_10_1 = (Assignment)cAlternatives_1_10.eContents().get(1);
		private final RuleCall cHistorytransitionHistoryTransitionParserRuleCall_1_10_1_0 = (RuleCall)cHistorytransitionAssignment_1_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_11 = (Keyword)cGroup_1.eContents().get(11);
		
		//State:
		//     name=ID
		//     ("{"
		//     (internaltransition+=InternalTransition)*
		//     ("entry" "{" entryaction+=EntryAction "}"  ";")?
		//     ("exit" "{" exitaction+=ExitAction "}" ";" )?
		//     ("entrypoint" entrypoint+=EntryPoint ("," entrypoint+=EntryPoint)* ";" )*
		//     ("exitpoint" exitpoint+=ExitPoint ("," exitpoint+=ExitPoint)* ";" )*
		//     ("state" states+=State ("," states+=State)* ";")*
		//     //(history+=History ";")?
		//     (initialtransition=InitialTransition)?
		//    ("junction" junction+=Junction ("," junction+=Junction)* ";" )*
		//    ("choice" choice+=Choice ("," choice+=Choice)* ";" )*
		//    (transition+=Transition | historytransition+=HistoryTransition )*
		//      "}")?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		// name=ID
		// ("{"
		// (internaltransition+=InternalTransition)*
		// ("entry" "{" entryaction+=EntryAction "}"  ";")?
		// ("exit" "{" exitaction+=ExitAction "}" ";" )?
		// ("entrypoint" entrypoint+=EntryPoint ("," entrypoint+=EntryPoint)* ";" )*
		// ("exitpoint" exitpoint+=ExitPoint ("," exitpoint+=ExitPoint)* ";" )*
		// ("state" states+=State ("," states+=State)* ";")*
		// //(history+=History ";")?
		// (initialtransition=InitialTransition)?
		//("junction" junction+=Junction ("," junction+=Junction)* ";" )*
		//("choice" choice+=Choice ("," choice+=Choice)* ";" )*
		//(transition+=Transition | historytransition+=HistoryTransition )*
		//  "}")?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		// ("{"
		// (internaltransition+=InternalTransition)*
		// ("entry" "{" entryaction+=EntryAction "}"  ";")?
		// ("exit" "{" exitaction+=ExitAction "}" ";" )?
		// ("entrypoint" entrypoint+=EntryPoint ("," entrypoint+=EntryPoint)* ";" )*
		// ("exitpoint" exitpoint+=ExitPoint ("," exitpoint+=ExitPoint)* ";" )*
		// ("state" states+=State ("," states+=State)* ";")*
		// //(history+=History ";")?
		// (initialtransition=InitialTransition)?
		//("junction" junction+=Junction ("," junction+=Junction)* ";" )*
		//("choice" choice+=Choice ("," choice+=Choice)* ";" )*
		//(transition+=Transition | historytransition+=HistoryTransition )*
		//  "}")?
		public Group getGroup_1() { return cGroup_1; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//(internaltransition+=InternalTransition)*
		public Assignment getInternaltransitionAssignment_1_1() { return cInternaltransitionAssignment_1_1; }
		
		//InternalTransition
		public RuleCall getInternaltransitionInternalTransitionParserRuleCall_1_1_0() { return cInternaltransitionInternalTransitionParserRuleCall_1_1_0; }
		
		//("entry" "{" entryaction+=EntryAction "}"  ";")?
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//"entry"
		public Keyword getEntryKeyword_1_2_0() { return cEntryKeyword_1_2_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_2_1() { return cLeftCurlyBracketKeyword_1_2_1; }
		
		//entryaction+=EntryAction
		public Assignment getEntryactionAssignment_1_2_2() { return cEntryactionAssignment_1_2_2; }
		
		//EntryAction
		public RuleCall getEntryactionEntryActionParserRuleCall_1_2_2_0() { return cEntryactionEntryActionParserRuleCall_1_2_2_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_1_2_3() { return cRightCurlyBracketKeyword_1_2_3; }
		
		//";"
		public Keyword getSemicolonKeyword_1_2_4() { return cSemicolonKeyword_1_2_4; }
		
		//("exit" "{" exitaction+=ExitAction "}" ";" )?
		public Group getGroup_1_3() { return cGroup_1_3; }
		
		//"exit"
		public Keyword getExitKeyword_1_3_0() { return cExitKeyword_1_3_0; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_3_1() { return cLeftCurlyBracketKeyword_1_3_1; }
		
		//exitaction+=ExitAction
		public Assignment getExitactionAssignment_1_3_2() { return cExitactionAssignment_1_3_2; }
		
		//ExitAction
		public RuleCall getExitactionExitActionParserRuleCall_1_3_2_0() { return cExitactionExitActionParserRuleCall_1_3_2_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_1_3_3() { return cRightCurlyBracketKeyword_1_3_3; }
		
		//";"
		public Keyword getSemicolonKeyword_1_3_4() { return cSemicolonKeyword_1_3_4; }
		
		//("entrypoint" entrypoint+=EntryPoint ("," entrypoint+=EntryPoint)* ";" )*
		public Group getGroup_1_4() { return cGroup_1_4; }
		
		//"entrypoint"
		public Keyword getEntrypointKeyword_1_4_0() { return cEntrypointKeyword_1_4_0; }
		
		//entrypoint+=EntryPoint
		public Assignment getEntrypointAssignment_1_4_1() { return cEntrypointAssignment_1_4_1; }
		
		//EntryPoint
		public RuleCall getEntrypointEntryPointParserRuleCall_1_4_1_0() { return cEntrypointEntryPointParserRuleCall_1_4_1_0; }
		
		//("," entrypoint+=EntryPoint)*
		public Group getGroup_1_4_2() { return cGroup_1_4_2; }
		
		//","
		public Keyword getCommaKeyword_1_4_2_0() { return cCommaKeyword_1_4_2_0; }
		
		//entrypoint+=EntryPoint
		public Assignment getEntrypointAssignment_1_4_2_1() { return cEntrypointAssignment_1_4_2_1; }
		
		//EntryPoint
		public RuleCall getEntrypointEntryPointParserRuleCall_1_4_2_1_0() { return cEntrypointEntryPointParserRuleCall_1_4_2_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_1_4_3() { return cSemicolonKeyword_1_4_3; }
		
		//("exitpoint" exitpoint+=ExitPoint ("," exitpoint+=ExitPoint)* ";" )*
		public Group getGroup_1_5() { return cGroup_1_5; }
		
		//"exitpoint"
		public Keyword getExitpointKeyword_1_5_0() { return cExitpointKeyword_1_5_0; }
		
		//exitpoint+=ExitPoint
		public Assignment getExitpointAssignment_1_5_1() { return cExitpointAssignment_1_5_1; }
		
		//ExitPoint
		public RuleCall getExitpointExitPointParserRuleCall_1_5_1_0() { return cExitpointExitPointParserRuleCall_1_5_1_0; }
		
		//("," exitpoint+=ExitPoint)*
		public Group getGroup_1_5_2() { return cGroup_1_5_2; }
		
		//","
		public Keyword getCommaKeyword_1_5_2_0() { return cCommaKeyword_1_5_2_0; }
		
		//exitpoint+=ExitPoint
		public Assignment getExitpointAssignment_1_5_2_1() { return cExitpointAssignment_1_5_2_1; }
		
		//ExitPoint
		public RuleCall getExitpointExitPointParserRuleCall_1_5_2_1_0() { return cExitpointExitPointParserRuleCall_1_5_2_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_1_5_3() { return cSemicolonKeyword_1_5_3; }
		
		//("state" states+=State ("," states+=State)* ";")*
		public Group getGroup_1_6() { return cGroup_1_6; }
		
		//"state"
		public Keyword getStateKeyword_1_6_0() { return cStateKeyword_1_6_0; }
		
		//states+=State
		public Assignment getStatesAssignment_1_6_1() { return cStatesAssignment_1_6_1; }
		
		//State
		public RuleCall getStatesStateParserRuleCall_1_6_1_0() { return cStatesStateParserRuleCall_1_6_1_0; }
		
		//("," states+=State)*
		public Group getGroup_1_6_2() { return cGroup_1_6_2; }
		
		//","
		public Keyword getCommaKeyword_1_6_2_0() { return cCommaKeyword_1_6_2_0; }
		
		//states+=State
		public Assignment getStatesAssignment_1_6_2_1() { return cStatesAssignment_1_6_2_1; }
		
		//State
		public RuleCall getStatesStateParserRuleCall_1_6_2_1_0() { return cStatesStateParserRuleCall_1_6_2_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_1_6_3() { return cSemicolonKeyword_1_6_3; }
		
		////(history+=History ";")?
		//(initialtransition=InitialTransition)?
		public Assignment getInitialtransitionAssignment_1_7() { return cInitialtransitionAssignment_1_7; }
		
		//InitialTransition
		public RuleCall getInitialtransitionInitialTransitionParserRuleCall_1_7_0() { return cInitialtransitionInitialTransitionParserRuleCall_1_7_0; }
		
		//("junction" junction+=Junction ("," junction+=Junction)* ";" )*
		public Group getGroup_1_8() { return cGroup_1_8; }
		
		//"junction"
		public Keyword getJunctionKeyword_1_8_0() { return cJunctionKeyword_1_8_0; }
		
		//junction+=Junction
		public Assignment getJunctionAssignment_1_8_1() { return cJunctionAssignment_1_8_1; }
		
		//Junction
		public RuleCall getJunctionJunctionParserRuleCall_1_8_1_0() { return cJunctionJunctionParserRuleCall_1_8_1_0; }
		
		//("," junction+=Junction)*
		public Group getGroup_1_8_2() { return cGroup_1_8_2; }
		
		//","
		public Keyword getCommaKeyword_1_8_2_0() { return cCommaKeyword_1_8_2_0; }
		
		//junction+=Junction
		public Assignment getJunctionAssignment_1_8_2_1() { return cJunctionAssignment_1_8_2_1; }
		
		//Junction
		public RuleCall getJunctionJunctionParserRuleCall_1_8_2_1_0() { return cJunctionJunctionParserRuleCall_1_8_2_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_1_8_3() { return cSemicolonKeyword_1_8_3; }
		
		//("choice" choice+=Choice ("," choice+=Choice)* ";" )*
		public Group getGroup_1_9() { return cGroup_1_9; }
		
		//"choice"
		public Keyword getChoiceKeyword_1_9_0() { return cChoiceKeyword_1_9_0; }
		
		//choice+=Choice
		public Assignment getChoiceAssignment_1_9_1() { return cChoiceAssignment_1_9_1; }
		
		//Choice
		public RuleCall getChoiceChoiceParserRuleCall_1_9_1_0() { return cChoiceChoiceParserRuleCall_1_9_1_0; }
		
		//("," choice+=Choice)*
		public Group getGroup_1_9_2() { return cGroup_1_9_2; }
		
		//","
		public Keyword getCommaKeyword_1_9_2_0() { return cCommaKeyword_1_9_2_0; }
		
		//choice+=Choice
		public Assignment getChoiceAssignment_1_9_2_1() { return cChoiceAssignment_1_9_2_1; }
		
		//Choice
		public RuleCall getChoiceChoiceParserRuleCall_1_9_2_1_0() { return cChoiceChoiceParserRuleCall_1_9_2_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_1_9_3() { return cSemicolonKeyword_1_9_3; }
		
		//(transition+=Transition | historytransition+=HistoryTransition )*
		public Alternatives getAlternatives_1_10() { return cAlternatives_1_10; }
		
		//transition+=Transition
		public Assignment getTransitionAssignment_1_10_0() { return cTransitionAssignment_1_10_0; }
		
		//Transition
		public RuleCall getTransitionTransitionParserRuleCall_1_10_0_0() { return cTransitionTransitionParserRuleCall_1_10_0_0; }
		
		//historytransition+=HistoryTransition
		public Assignment getHistorytransitionAssignment_1_10_1() { return cHistorytransitionAssignment_1_10_1; }
		
		//HistoryTransition
		public RuleCall getHistorytransitionHistoryTransitionParserRuleCall_1_10_1_0() { return cHistorytransitionHistoryTransitionParserRuleCall_1_10_1_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_1_11() { return cRightCurlyBracketKeyword_1_11; }
	}
	public class EntryActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.EntryAction");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		////state actions
		//EntryAction:
		//    name=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0() { return cNameSTRINGTerminalRuleCall_0; }
	}
	public class ExitActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.ExitAction");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//ExitAction:
		//    name=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0() { return cNameSTRINGTerminalRuleCall_0; }
	}
	public class InitialStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.InitialState");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cNameInitialKeyword_0 = (Keyword)cNameAssignment.eContents().get(0);
		
		////pseudostates
		//InitialState:
		//    name="initial"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name="initial"
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//"initial"
		public Keyword getNameInitialKeyword_0() { return cNameInitialKeyword_0; }
	}
	public class JunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.Junction");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Junction:
		//     name= ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name= ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class ChoiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.Choice");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Choice:
		//    name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class EntryPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.EntryPoint");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		////pseudostates used in hierarchical state machines
		//EntryPoint:
		//     name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class ExitPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.ExitPoint");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//ExitPoint:
		//     name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class DeepHistoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.DeepHistory");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cNameHistoryKeyword_0 = (Keyword)cNameAssignment.eContents().get(0);
		
		//DeepHistory:
		//    name="history*"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name="history*"
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//"history*"
		public Keyword getNameHistoryKeyword_0() { return cNameHistoryKeyword_0; }
	}
	public class InitialTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.InitialTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cInitialstateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInitialstateInitialStateParserRuleCall_1_0 = (RuleCall)cInitialstateAssignment_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInitialtoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cInitialtoVertexCrossReference_3_0 = (CrossReference)cInitialtoAssignment_3.eContents().get(0);
		private final RuleCall cInitialtoVertexQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cInitialtoVertexCrossReference_3_0.eContents().get(1);
		private final Assignment cTransitionbodyAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTransitionbodyTransitionBodyParserRuleCall_4_0 = (RuleCall)cTransitionbodyAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////transitions
		//InitialTransition:
		//    (name=ID ":")? initialstate=InitialState "->" initialto=[Vertex|QualifiedName]? (transitionbody=TransitionBody) ";"
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=ID ":")? initialstate=InitialState "->" initialto=[Vertex|QualifiedName]? (transitionbody=TransitionBody) ";"
		public Group getGroup() { return cGroup; }
		
		//(name=ID ":")?
		public Group getGroup_0() { return cGroup_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_0() { return cNameIDTerminalRuleCall_0_0_0; }
		
		//":"
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }
		
		//initialstate=InitialState
		public Assignment getInitialstateAssignment_1() { return cInitialstateAssignment_1; }
		
		//InitialState
		public RuleCall getInitialstateInitialStateParserRuleCall_1_0() { return cInitialstateInitialStateParserRuleCall_1_0; }
		
		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }
		
		//initialto=[Vertex|QualifiedName]?
		public Assignment getInitialtoAssignment_3() { return cInitialtoAssignment_3; }
		
		//[Vertex|QualifiedName]
		public CrossReference getInitialtoVertexCrossReference_3_0() { return cInitialtoVertexCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getInitialtoVertexQualifiedNameParserRuleCall_3_0_1() { return cInitialtoVertexQualifiedNameParserRuleCall_3_0_1; }
		
		//(transitionbody=TransitionBody)
		public Assignment getTransitionbodyAssignment_4() { return cTransitionbodyAssignment_4; }
		
		//TransitionBody
		public RuleCall getTransitionbodyTransitionBodyParserRuleCall_4_0() { return cTransitionbodyTransitionBodyParserRuleCall_4_0; }
		
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}
	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.Transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cNameAlternatives_1_0 = (Alternatives)cNameAssignment_1.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0 = (RuleCall)cNameAlternatives_1_0.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0_1 = (RuleCall)cNameAlternatives_1_0.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFromAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cFromVertexCrossReference_3_0 = (CrossReference)cFromAssignment_3.eContents().get(0);
		private final RuleCall cFromVertexQualifiedNameParserRuleCall_3_0_1 = (RuleCall)cFromVertexCrossReference_3_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cToAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cToVertexCrossReference_5_0 = (CrossReference)cToAssignment_5.eContents().get(0);
		private final RuleCall cToVertexQualifiedNameParserRuleCall_5_0_1 = (RuleCall)cToVertexCrossReference_5_0.eContents().get(1);
		private final Assignment cTransitionbodyAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTransitionbodyTransitionBodyParserRuleCall_6_0 = (RuleCall)cTransitionbodyAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Transition:
		//    "transition"(name=(ID | STRING))? ":" from=[Vertex|QualifiedName] "->" to=[Vertex|QualifiedName]  (transitionbody=TransitionBody) ";"
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//"transition"(name=(ID | STRING))? ":" from=[Vertex|QualifiedName] "->" to=[Vertex|QualifiedName]  (transitionbody=TransitionBody) ";"
		public Group getGroup() { return cGroup; }
		
		//"transition"
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }
		
		//(name=(ID | STRING))?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//(ID | STRING)
		public Alternatives getNameAlternatives_1_0() { return cNameAlternatives_1_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0() { return cNameIDTerminalRuleCall_1_0_0; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0_1() { return cNameSTRINGTerminalRuleCall_1_0_1; }
		
		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//from=[Vertex|QualifiedName]
		public Assignment getFromAssignment_3() { return cFromAssignment_3; }
		
		//[Vertex|QualifiedName]
		public CrossReference getFromVertexCrossReference_3_0() { return cFromVertexCrossReference_3_0; }
		
		//QualifiedName
		public RuleCall getFromVertexQualifiedNameParserRuleCall_3_0_1() { return cFromVertexQualifiedNameParserRuleCall_3_0_1; }
		
		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusGreaterThanSignKeyword_4; }
		
		//to=[Vertex|QualifiedName]
		public Assignment getToAssignment_5() { return cToAssignment_5; }
		
		//[Vertex|QualifiedName]
		public CrossReference getToVertexCrossReference_5_0() { return cToVertexCrossReference_5_0; }
		
		//QualifiedName
		public RuleCall getToVertexQualifiedNameParserRuleCall_5_0_1() { return cToVertexQualifiedNameParserRuleCall_5_0_1; }
		
		//(transitionbody=TransitionBody)
		public Assignment getTransitionbodyAssignment_6() { return cTransitionbodyAssignment_6; }
		
		//TransitionBody
		public RuleCall getTransitionbodyTransitionBodyParserRuleCall_6_0() { return cTransitionbodyTransitionBodyParserRuleCall_6_0; }
		
		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}
	public class InternalTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.InternalTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTransitionbodyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTransitionbodyTransitionBodyParserRuleCall_1_0 = (RuleCall)cTransitionbodyAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//InternalTransition:
		//    (name=ID)? (transitionbody=TransitionBody)  ";"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(name=ID)? (transitionbody=TransitionBody)  ";"
		public Group getGroup() { return cGroup; }
		
		//(name=ID)?
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//(transitionbody=TransitionBody)
		public Assignment getTransitionbodyAssignment_1() { return cTransitionbodyAssignment_1; }
		
		//TransitionBody
		public RuleCall getTransitionbodyTransitionBodyParserRuleCall_1_0() { return cTransitionbodyTransitionBodyParserRuleCall_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class HistoryTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.HistoryTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHistorytransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Alternatives cNameAlternatives_1_0_0 = (Alternatives)cNameAssignment_1_0.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0_0 = (RuleCall)cNameAlternatives_1_0_0.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0_0_1 = (RuleCall)cNameAlternatives_1_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cFromAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cFromVertexCrossReference_2_0 = (CrossReference)cFromAssignment_2.eContents().get(0);
		private final RuleCall cFromVertexQualifiedNameParserRuleCall_2_0_1 = (RuleCall)cFromVertexCrossReference_2_0.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cToAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cToDeepHistoryParserRuleCall_4_0 = (RuleCall)cToAssignment_4.eContents().get(0);
		private final Assignment cTransitionbodyAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTransitionbodyTransitionBodyParserRuleCall_5_0 = (RuleCall)cTransitionbodyAssignment_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//HistoryTransition:
		//     "historytransition" (name= (ID | STRING) ":")? from=[Vertex|QualifiedName] "->" to=DeepHistory  (transitionbody=TransitionBody) ";"
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//"historytransition" (name= (ID | STRING) ":")? from=[Vertex|QualifiedName] "->" to=DeepHistory  (transitionbody=TransitionBody) ";"
		public Group getGroup() { return cGroup; }
		
		//"historytransition"
		public Keyword getHistorytransitionKeyword_0() { return cHistorytransitionKeyword_0; }
		
		//(name= (ID | STRING) ":")?
		public Group getGroup_1() { return cGroup_1; }
		
		//name= (ID | STRING)
		public Assignment getNameAssignment_1_0() { return cNameAssignment_1_0; }
		
		//(ID | STRING)
		public Alternatives getNameAlternatives_1_0_0() { return cNameAlternatives_1_0_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0_0() { return cNameIDTerminalRuleCall_1_0_0_0; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0_0_1() { return cNameSTRINGTerminalRuleCall_1_0_0_1; }
		
		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }
		
		//from=[Vertex|QualifiedName]
		public Assignment getFromAssignment_2() { return cFromAssignment_2; }
		
		//[Vertex|QualifiedName]
		public CrossReference getFromVertexCrossReference_2_0() { return cFromVertexCrossReference_2_0; }
		
		//QualifiedName
		public RuleCall getFromVertexQualifiedNameParserRuleCall_2_0_1() { return cFromVertexQualifiedNameParserRuleCall_2_0_1; }
		
		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3() { return cHyphenMinusGreaterThanSignKeyword_3; }
		
		//to=DeepHistory
		public Assignment getToAssignment_4() { return cToAssignment_4; }
		
		//DeepHistory
		public RuleCall getToDeepHistoryParserRuleCall_4_0() { return cToDeepHistoryParserRuleCall_4_0; }
		
		//(transitionbody=TransitionBody)
		public Assignment getTransitionbodyAssignment_5() { return cTransitionbodyAssignment_5; }
		
		//TransitionBody
		public RuleCall getTransitionbodyTransitionBodyParserRuleCall_5_0() { return cTransitionbodyTransitionBodyParserRuleCall_5_0; }
		
		//";"
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class TransitionBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.TransitionBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTransitionBodyAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cOnKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cMethodparameterAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cMethodparameterMethodParameterTriggerParserRuleCall_1_1_0_0 = (RuleCall)cMethodparameterAssignment_1_1_0.eContents().get(0);
		private final Assignment cPorteventAssignment_1_1_1 = (Assignment)cAlternatives_1_1.eContents().get(1);
		private final RuleCall cPorteventPortEventTriggerParserRuleCall_1_1_1_0 = (RuleCall)cPorteventAssignment_1_1_1.eContents().get(0);
		private final Assignment cTriggerAssignment_1_1_2 = (Assignment)cAlternatives_1_1.eContents().get(2);
		private final RuleCall cTriggerTriggerParserRuleCall_1_1_2_0 = (RuleCall)cTriggerAssignment_1_1_2.eContents().get(0);
		private final Keyword cAsteriskKeyword_1_1_3 = (Keyword)cAlternatives_1_1.eContents().get(3);
		private final Assignment cTransitionguardAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTransitionguardTransitionGuardParserRuleCall_2_0 = (RuleCall)cTransitionguardAssignment_2.eContents().get(0);
		private final Assignment cTransitionoperationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTransitionoperationTransitionOperationParserRuleCall_3_0 = (RuleCall)cTransitionoperationAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Assignment cMethodparameterAssignment_4_1_0 = (Assignment)cAlternatives_4_1.eContents().get(0);
		private final RuleCall cMethodparameterMethodParameterTriggerParserRuleCall_4_1_0_0 = (RuleCall)cMethodparameterAssignment_4_1_0.eContents().get(0);
		private final Assignment cPorteventAssignment_4_1_1 = (Assignment)cAlternatives_4_1.eContents().get(1);
		private final RuleCall cPorteventPortEventTriggerParserRuleCall_4_1_1_0 = (RuleCall)cPorteventAssignment_4_1_1.eContents().get(0);
		private final Assignment cTriggerAssignment_4_1_2 = (Assignment)cAlternatives_4_1.eContents().get(2);
		private final RuleCall cTriggerTriggerParserRuleCall_4_1_2_0 = (RuleCall)cTriggerAssignment_4_1_2.eContents().get(0);
		private final Assignment cTransitionguardAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cTransitionguardTransitionGuardParserRuleCall_4_2_0 = (RuleCall)cTransitionguardAssignment_4_2.eContents().get(0);
		private final Assignment cTransitionoperationAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cTransitionoperationTransitionOperationParserRuleCall_4_3_0 = (RuleCall)cTransitionoperationAssignment_4_3.eContents().get(0);
		
		////transition elements
		//TransitionBody:
		//    {TransitionBody} ("on" ((methodparameter+=MethodParameterTrigger)|(portevent+=PortEventTrigger)|(trigger+=Trigger)|"*"))?
		//    (transitionguard=TransitionGuard)?
		//    (transitionoperation=TransitionOperation)?
		//    ("," ((methodparameter+=MethodParameterTrigger)|(portevent+=PortEventTrigger)|(trigger+=Trigger))?
		//    (transitionguard=TransitionGuard)?
		//    (transitionoperation=TransitionOperation)?)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{TransitionBody} ("on" ((methodparameter+=MethodParameterTrigger)|(portevent+=PortEventTrigger)|(trigger+=Trigger)|"*"))?
		//(transitionguard=TransitionGuard)?
		//(transitionoperation=TransitionOperation)?
		//("," ((methodparameter+=MethodParameterTrigger)|(portevent+=PortEventTrigger)|(trigger+=Trigger))?
		//(transitionguard=TransitionGuard)?
		//(transitionoperation=TransitionOperation)?)*
		public Group getGroup() { return cGroup; }
		
		//{TransitionBody}
		public Action getTransitionBodyAction_0() { return cTransitionBodyAction_0; }
		
		//("on" ((methodparameter+=MethodParameterTrigger)|(portevent+=PortEventTrigger)|(trigger+=Trigger)|"*"))?
		public Group getGroup_1() { return cGroup_1; }
		
		//"on"
		public Keyword getOnKeyword_1_0() { return cOnKeyword_1_0; }
		
		//((methodparameter+=MethodParameterTrigger)|(portevent+=PortEventTrigger)|(trigger+=Trigger)|"*")
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }
		
		//(methodparameter+=MethodParameterTrigger)
		public Assignment getMethodparameterAssignment_1_1_0() { return cMethodparameterAssignment_1_1_0; }
		
		//MethodParameterTrigger
		public RuleCall getMethodparameterMethodParameterTriggerParserRuleCall_1_1_0_0() { return cMethodparameterMethodParameterTriggerParserRuleCall_1_1_0_0; }
		
		//(portevent+=PortEventTrigger)
		public Assignment getPorteventAssignment_1_1_1() { return cPorteventAssignment_1_1_1; }
		
		//PortEventTrigger
		public RuleCall getPorteventPortEventTriggerParserRuleCall_1_1_1_0() { return cPorteventPortEventTriggerParserRuleCall_1_1_1_0; }
		
		//(trigger+=Trigger)
		public Assignment getTriggerAssignment_1_1_2() { return cTriggerAssignment_1_1_2; }
		
		//Trigger
		public RuleCall getTriggerTriggerParserRuleCall_1_1_2_0() { return cTriggerTriggerParserRuleCall_1_1_2_0; }
		
		//"*"
		public Keyword getAsteriskKeyword_1_1_3() { return cAsteriskKeyword_1_1_3; }
		
		//(transitionguard=TransitionGuard)?
		public Assignment getTransitionguardAssignment_2() { return cTransitionguardAssignment_2; }
		
		//TransitionGuard
		public RuleCall getTransitionguardTransitionGuardParserRuleCall_2_0() { return cTransitionguardTransitionGuardParserRuleCall_2_0; }
		
		//(transitionoperation=TransitionOperation)?
		public Assignment getTransitionoperationAssignment_3() { return cTransitionoperationAssignment_3; }
		
		//TransitionOperation
		public RuleCall getTransitionoperationTransitionOperationParserRuleCall_3_0() { return cTransitionoperationTransitionOperationParserRuleCall_3_0; }
		
		//("," ((methodparameter+=MethodParameterTrigger)|(portevent+=PortEventTrigger)|(trigger+=Trigger))?
		//(transitionguard=TransitionGuard)?
		//(transitionoperation=TransitionOperation)?)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//((methodparameter+=MethodParameterTrigger)|(portevent+=PortEventTrigger)|(trigger+=Trigger))?
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }
		
		//(methodparameter+=MethodParameterTrigger)
		public Assignment getMethodparameterAssignment_4_1_0() { return cMethodparameterAssignment_4_1_0; }
		
		//MethodParameterTrigger
		public RuleCall getMethodparameterMethodParameterTriggerParserRuleCall_4_1_0_0() { return cMethodparameterMethodParameterTriggerParserRuleCall_4_1_0_0; }
		
		//(portevent+=PortEventTrigger)
		public Assignment getPorteventAssignment_4_1_1() { return cPorteventAssignment_4_1_1; }
		
		//PortEventTrigger
		public RuleCall getPorteventPortEventTriggerParserRuleCall_4_1_1_0() { return cPorteventPortEventTriggerParserRuleCall_4_1_1_0; }
		
		//(trigger+=Trigger)
		public Assignment getTriggerAssignment_4_1_2() { return cTriggerAssignment_4_1_2; }
		
		//Trigger
		public RuleCall getTriggerTriggerParserRuleCall_4_1_2_0() { return cTriggerTriggerParserRuleCall_4_1_2_0; }
		
		//(transitionguard=TransitionGuard)?
		public Assignment getTransitionguardAssignment_4_2() { return cTransitionguardAssignment_4_2; }
		
		//TransitionGuard
		public RuleCall getTransitionguardTransitionGuardParserRuleCall_4_2_0() { return cTransitionguardTransitionGuardParserRuleCall_4_2_0; }
		
		//(transitionoperation=TransitionOperation)?
		public Assignment getTransitionoperationAssignment_4_3() { return cTransitionoperationAssignment_4_3; }
		
		//TransitionOperation
		public RuleCall getTransitionoperationTransitionOperationParserRuleCall_4_3_0() { return cTransitionoperationTransitionOperationParserRuleCall_4_3_0; }
	}
	public class TransitionGuardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.TransitionGuard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWhenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TransitionGuard:
		//     "when" "[" name=STRING "]"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"when" "[" name=STRING "]"
		public Group getGroup() { return cGroup; }
		
		//"when"
		public Keyword getWhenKeyword_0() { return cWhenKeyword_0; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class TransitionOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.TransitionOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//TransitionOperation:
		//    "{" name=STRING"}"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"{" name=STRING"}"
		public Group getGroup() { return cGroup; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}
	public class TriggerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.Trigger");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Trigger:
		//    name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class MethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.Method");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Method:
		//    name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.Parameter");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Parameter:
		//    name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class MethodParameterTriggerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.MethodParameterTrigger");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cMethodAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cMethodMethodParserRuleCall_0_0 = (RuleCall)cMethodAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cParameterAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cParameterParameterParserRuleCall_2_0 = (RuleCall)cParameterAssignment_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//MethodParameterTrigger:
		//    method=Method"("parameter=Parameter")"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//method=Method"("parameter=Parameter")"
		public Group getGroup() { return cGroup; }
		
		//method=Method
		public Assignment getMethodAssignment_0() { return cMethodAssignment_0; }
		
		//Method
		public RuleCall getMethodMethodParserRuleCall_0_0() { return cMethodMethodParserRuleCall_0_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//parameter=Parameter
		public Assignment getParameterAssignment_2() { return cParameterAssignment_2; }
		
		//Parameter
		public RuleCall getParameterParameterParserRuleCall_2_0() { return cParameterParameterParserRuleCall_2_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }
	}
	public class PortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.Port");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Port:
		//    name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.Event");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Event:
		//    name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class PortEventTriggerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.PortEventTrigger");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPortAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPortPortParserRuleCall_0_0 = (RuleCall)cPortAssignment_0.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEventAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEventEventParserRuleCall_2_0 = (RuleCall)cEventAssignment_2.eContents().get(0);
		
		//PortEventTrigger:
		//    port=Port"."event=Event
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//port=Port"."event=Event
		public Group getGroup() { return cGroup; }
		
		//port=Port
		public Assignment getPortAssignment_0() { return cPortAssignment_0; }
		
		//Port
		public RuleCall getPortPortParserRuleCall_0_0() { return cPortPortParserRuleCall_0_0; }
		
		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//event=Event
		public Assignment getEventAssignment_2() { return cEventAssignment_2; }
		
		//Event
		public RuleCall getEventEventParserRuleCall_2_0() { return cEventEventParserRuleCall_2_0; }
	}
	public class VertexElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.Vertex");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStateParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cJunctionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cChoiceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEntryPointParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cExitPointParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		////other
		//Vertex:
		//    State | Junction | Choice | EntryPoint | ExitPoint
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//State | Junction | Choice | EntryPoint | ExitPoint
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//State
		public RuleCall getStateParserRuleCall_0() { return cStateParserRuleCall_0; }
		
		//Junction
		public RuleCall getJunctionParserRuleCall_1() { return cJunctionParserRuleCall_1; }
		
		//Choice
		public RuleCall getChoiceParserRuleCall_2() { return cChoiceParserRuleCall_2; }
		
		//EntryPoint
		public RuleCall getEntryPointParserRuleCall_3() { return cEntryPointParserRuleCall_3; }
		
		//ExitPoint
		public RuleCall getExitPointParserRuleCall_4() { return cExitPointParserRuleCall_4; }
	}
	public class TransitionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.Transitions");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInitialTransitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTransitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cHistoryTransitionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Transitions:
		//     InitialTransition | Transition | HistoryTransition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//InitialTransition | Transition | HistoryTransition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//InitialTransition
		public RuleCall getInitialTransitionParserRuleCall_0() { return cInitialTransitionParserRuleCall_0; }
		
		//Transition
		public RuleCall getTransitionParserRuleCall_1() { return cTransitionParserRuleCall_1; }
		
		//HistoryTransition
		public RuleCall getHistoryTransitionParserRuleCall_2() { return cHistoryTransitionParserRuleCall_2; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValidIDParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cValidIDParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//    ValidID ("." ValidID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ValidID ("." ValidID)*
		public Group getGroup() { return cGroup; }
		
		//ValidID
		public RuleCall getValidIDParserRuleCall_0() { return cValidIDParserRuleCall_0; }
		
		//("." ValidID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ValidID
		public RuleCall getValidIDParserRuleCall_1_1() { return cValidIDParserRuleCall_1_1; }
	}
	public class ValidIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.ValidID");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKEYWORDParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ValidID: ID|KEYWORD;
		@Override public ParserRule getRule() { return rule; }
		
		//ID|KEYWORD
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//KEYWORD
		public RuleCall getKEYWORDParserRuleCall_1() { return cKEYWORDParserRuleCall_1; }
	}
	public class KEYWORDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.hclscope.HclScope.KEYWORD");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cInitialKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cHistoryKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cHistoryKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//KEYWORD: "initial" | "history" | "history*" ;
		@Override public ParserRule getRule() { return rule; }
		
		//"initial" | "history" | "history*"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//"initial"
		public Keyword getInitialKeyword_0() { return cInitialKeyword_0; }
		
		//"history"
		public Keyword getHistoryKeyword_1() { return cHistoryKeyword_1; }
		
		//"history*"
		public Keyword getHistoryKeyword_2() { return cHistoryKeyword_2; }
	}
	
	
	private final StateMachineElements pStateMachine;
	private final StateElements pState;
	private final EntryActionElements pEntryAction;
	private final ExitActionElements pExitAction;
	private final InitialStateElements pInitialState;
	private final JunctionElements pJunction;
	private final ChoiceElements pChoice;
	private final EntryPointElements pEntryPoint;
	private final ExitPointElements pExitPoint;
	private final DeepHistoryElements pDeepHistory;
	private final InitialTransitionElements pInitialTransition;
	private final TransitionElements pTransition;
	private final InternalTransitionElements pInternalTransition;
	private final HistoryTransitionElements pHistoryTransition;
	private final TransitionBodyElements pTransitionBody;
	private final TransitionGuardElements pTransitionGuard;
	private final TransitionOperationElements pTransitionOperation;
	private final TriggerElements pTrigger;
	private final MethodElements pMethod;
	private final ParameterElements pParameter;
	private final MethodParameterTriggerElements pMethodParameterTrigger;
	private final PortElements pPort;
	private final EventElements pEvent;
	private final PortEventTriggerElements pPortEventTrigger;
	private final VertexElements pVertex;
	private final TransitionsElements pTransitions;
	private final QualifiedNameElements pQualifiedName;
	private final ValidIDElements pValidID;
	private final KEYWORDElements pKEYWORD;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public HclScopeGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pStateMachine = new StateMachineElements();
		this.pState = new StateElements();
		this.pEntryAction = new EntryActionElements();
		this.pExitAction = new ExitActionElements();
		this.pInitialState = new InitialStateElements();
		this.pJunction = new JunctionElements();
		this.pChoice = new ChoiceElements();
		this.pEntryPoint = new EntryPointElements();
		this.pExitPoint = new ExitPointElements();
		this.pDeepHistory = new DeepHistoryElements();
		this.pInitialTransition = new InitialTransitionElements();
		this.pTransition = new TransitionElements();
		this.pInternalTransition = new InternalTransitionElements();
		this.pHistoryTransition = new HistoryTransitionElements();
		this.pTransitionBody = new TransitionBodyElements();
		this.pTransitionGuard = new TransitionGuardElements();
		this.pTransitionOperation = new TransitionOperationElements();
		this.pTrigger = new TriggerElements();
		this.pMethod = new MethodElements();
		this.pParameter = new ParameterElements();
		this.pMethodParameterTrigger = new MethodParameterTriggerElements();
		this.pPort = new PortElements();
		this.pEvent = new EventElements();
		this.pPortEventTrigger = new PortEventTriggerElements();
		this.pVertex = new VertexElements();
		this.pTransitions = new TransitionsElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pValidID = new ValidIDElements();
		this.pKEYWORD = new KEYWORDElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.hclscope.HclScope".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//StateMachine:
	//    "statemachine" name=ID "{"
	//    //simple state machine to allow adding concepts
	//    ("state" states+=State ("," states+=State)* ";")*
	//    (initialtransition = InitialTransition)?
	//    ("junction" junction+=Junction ("," junction+=Junction)* ";" )*
	//    ("choice" choice+=Choice ("," choice+=Choice)* ";" )*
	//    (transition+=Transition)*
	// "}" ";";
	public StateMachineElements getStateMachineAccess() {
		return pStateMachine;
	}
	
	public ParserRule getStateMachineRule() {
		return getStateMachineAccess().getRule();
	}
	
	//State:
	//     name=ID
	//     ("{"
	//     (internaltransition+=InternalTransition)*
	//     ("entry" "{" entryaction+=EntryAction "}"  ";")?
	//     ("exit" "{" exitaction+=ExitAction "}" ";" )?
	//     ("entrypoint" entrypoint+=EntryPoint ("," entrypoint+=EntryPoint)* ";" )*
	//     ("exitpoint" exitpoint+=ExitPoint ("," exitpoint+=ExitPoint)* ";" )*
	//     ("state" states+=State ("," states+=State)* ";")*
	//     //(history+=History ";")?
	//     (initialtransition=InitialTransition)?
	//    ("junction" junction+=Junction ("," junction+=Junction)* ";" )*
	//    ("choice" choice+=Choice ("," choice+=Choice)* ";" )*
	//    (transition+=Transition | historytransition+=HistoryTransition )*
	//      "}")?
	//    ;
	public StateElements getStateAccess() {
		return pState;
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}
	
	////state actions
	//EntryAction:
	//    name=STRING
	//;
	public EntryActionElements getEntryActionAccess() {
		return pEntryAction;
	}
	
	public ParserRule getEntryActionRule() {
		return getEntryActionAccess().getRule();
	}
	
	//ExitAction:
	//    name=STRING
	//;
	public ExitActionElements getExitActionAccess() {
		return pExitAction;
	}
	
	public ParserRule getExitActionRule() {
		return getExitActionAccess().getRule();
	}
	
	////pseudostates
	//InitialState:
	//    name="initial"
	//;
	public InitialStateElements getInitialStateAccess() {
		return pInitialState;
	}
	
	public ParserRule getInitialStateRule() {
		return getInitialStateAccess().getRule();
	}
	
	//Junction:
	//     name= ID
	//;
	public JunctionElements getJunctionAccess() {
		return pJunction;
	}
	
	public ParserRule getJunctionRule() {
		return getJunctionAccess().getRule();
	}
	
	//Choice:
	//    name=ID
	//;
	public ChoiceElements getChoiceAccess() {
		return pChoice;
	}
	
	public ParserRule getChoiceRule() {
		return getChoiceAccess().getRule();
	}
	
	////pseudostates used in hierarchical state machines
	//EntryPoint:
	//     name=ID
	//;
	public EntryPointElements getEntryPointAccess() {
		return pEntryPoint;
	}
	
	public ParserRule getEntryPointRule() {
		return getEntryPointAccess().getRule();
	}
	
	//ExitPoint:
	//     name=ID
	//;
	public ExitPointElements getExitPointAccess() {
		return pExitPoint;
	}
	
	public ParserRule getExitPointRule() {
		return getExitPointAccess().getRule();
	}
	
	//DeepHistory:
	//    name="history*"
	//;
	public DeepHistoryElements getDeepHistoryAccess() {
		return pDeepHistory;
	}
	
	public ParserRule getDeepHistoryRule() {
		return getDeepHistoryAccess().getRule();
	}
	
	////transitions
	//InitialTransition:
	//    (name=ID ":")? initialstate=InitialState "->" initialto=[Vertex|QualifiedName]? (transitionbody=TransitionBody) ";"
	//    ;
	public InitialTransitionElements getInitialTransitionAccess() {
		return pInitialTransition;
	}
	
	public ParserRule getInitialTransitionRule() {
		return getInitialTransitionAccess().getRule();
	}
	
	//Transition:
	//    "transition"(name=(ID | STRING))? ":" from=[Vertex|QualifiedName] "->" to=[Vertex|QualifiedName]  (transitionbody=TransitionBody) ";"
	//    ;
	public TransitionElements getTransitionAccess() {
		return pTransition;
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}
	
	//InternalTransition:
	//    (name=ID)? (transitionbody=TransitionBody)  ";"
	//;
	public InternalTransitionElements getInternalTransitionAccess() {
		return pInternalTransition;
	}
	
	public ParserRule getInternalTransitionRule() {
		return getInternalTransitionAccess().getRule();
	}
	
	//HistoryTransition:
	//     "historytransition" (name= (ID | STRING) ":")? from=[Vertex|QualifiedName] "->" to=DeepHistory  (transitionbody=TransitionBody) ";"
	//    ;
	public HistoryTransitionElements getHistoryTransitionAccess() {
		return pHistoryTransition;
	}
	
	public ParserRule getHistoryTransitionRule() {
		return getHistoryTransitionAccess().getRule();
	}
	
	////transition elements
	//TransitionBody:
	//    {TransitionBody} ("on" ((methodparameter+=MethodParameterTrigger)|(portevent+=PortEventTrigger)|(trigger+=Trigger)|"*"))?
	//    (transitionguard=TransitionGuard)?
	//    (transitionoperation=TransitionOperation)?
	//    ("," ((methodparameter+=MethodParameterTrigger)|(portevent+=PortEventTrigger)|(trigger+=Trigger))?
	//    (transitionguard=TransitionGuard)?
	//    (transitionoperation=TransitionOperation)?)*
	//;
	public TransitionBodyElements getTransitionBodyAccess() {
		return pTransitionBody;
	}
	
	public ParserRule getTransitionBodyRule() {
		return getTransitionBodyAccess().getRule();
	}
	
	//TransitionGuard:
	//     "when" "[" name=STRING "]"
	//;
	public TransitionGuardElements getTransitionGuardAccess() {
		return pTransitionGuard;
	}
	
	public ParserRule getTransitionGuardRule() {
		return getTransitionGuardAccess().getRule();
	}
	
	//TransitionOperation:
	//    "{" name=STRING"}"
	//;
	public TransitionOperationElements getTransitionOperationAccess() {
		return pTransitionOperation;
	}
	
	public ParserRule getTransitionOperationRule() {
		return getTransitionOperationAccess().getRule();
	}
	
	//Trigger:
	//    name=ID
	//;
	public TriggerElements getTriggerAccess() {
		return pTrigger;
	}
	
	public ParserRule getTriggerRule() {
		return getTriggerAccess().getRule();
	}
	
	//Method:
	//    name=ID
	//;
	public MethodElements getMethodAccess() {
		return pMethod;
	}
	
	public ParserRule getMethodRule() {
		return getMethodAccess().getRule();
	}
	
	//Parameter:
	//    name=ID
	//;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//MethodParameterTrigger:
	//    method=Method"("parameter=Parameter")"
	//;
	public MethodParameterTriggerElements getMethodParameterTriggerAccess() {
		return pMethodParameterTrigger;
	}
	
	public ParserRule getMethodParameterTriggerRule() {
		return getMethodParameterTriggerAccess().getRule();
	}
	
	//Port:
	//    name=ID
	//;
	public PortElements getPortAccess() {
		return pPort;
	}
	
	public ParserRule getPortRule() {
		return getPortAccess().getRule();
	}
	
	//Event:
	//    name=ID
	//;
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}
	
	//PortEventTrigger:
	//    port=Port"."event=Event
	//;
	public PortEventTriggerElements getPortEventTriggerAccess() {
		return pPortEventTrigger;
	}
	
	public ParserRule getPortEventTriggerRule() {
		return getPortEventTriggerAccess().getRule();
	}
	
	////other
	//Vertex:
	//    State | Junction | Choice | EntryPoint | ExitPoint
	//;
	public VertexElements getVertexAccess() {
		return pVertex;
	}
	
	public ParserRule getVertexRule() {
		return getVertexAccess().getRule();
	}
	
	//Transitions:
	//     InitialTransition | Transition | HistoryTransition
	//;
	public TransitionsElements getTransitionsAccess() {
		return pTransitions;
	}
	
	public ParserRule getTransitionsRule() {
		return getTransitionsAccess().getRule();
	}
	
	//QualifiedName:
	//    ValidID ("." ValidID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//ValidID: ID|KEYWORD;
	public ValidIDElements getValidIDAccess() {
		return pValidID;
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}
	
	//KEYWORD: "initial" | "history" | "history*" ;
	public KEYWORDElements getKEYWORDAccess() {
		return pKEYWORD;
	}
	
	public ParserRule getKEYWORDRule() {
		return getKEYWORDAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
